<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ /*
  ~  * Copyright 2019 The Hyve
  ~  *
  ~  * Licensed under the Apache License, Version 2.0 (the "License");
  ~  * you may not use this file except in compliance with the License.
  ~  * You may obtain a copy of the License at
  ~  *
  ~  *   http://www.apache.org/licenses/LICENSE-2.0
  ~  *
  ~  * Unless required by applicable law or agreed to in writing, software
  ~  * distributed under the License is distributed on an "AS IS" BASIS,
  ~  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~  * See the License for the specific language governing permissions and
  ~  * limitations under the License.
  ~  *
  ~  */
  -->

<databaseChangeLog
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
    http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.9.xsd">
    <property name="autoIncrement" value="true" dbms="mysql,h2,postgresql,oracle,mssql"/>
    <property name="now" value="now()" dbms="postgresql"/>
    <property name="now" value="CURRENT_TIMESTAMP()" dbms="h2"/>

    <changeSet id="Add config_state status enum type" author="joris" dbms="h2,postgresql">
        <sql>CREATE TYPE config_state_status AS ENUM('ACTIVE', 'INACTIVE')</sql>
        <rollback>DROP TYPE config_state_status</rollback>
    </changeSet>

    <changeSet id="Add config_state type enum type" author="joris" dbms="h2,postgresql">
        <sql>CREATE TYPE config_state_type AS ENUM('CONFIG', 'PROTOCOL')</sql>
        <rollback>DROP TYPE config_state_type</rollback>
    </changeSet>

    <changeSet id="Create config_state table" author="joris" dbms="h2,postgresql">
        <createSequence sequenceName="config_state_id_sequence" startValue="1" incrementBy="1"/>
        <createTable tableName="config_state">
            <column name="id" type="bigint" autoIncrement="${autoIncrement}">
                <constraints primaryKey="true" nullable="false"/>
            </column>
            <column name="client_id" type="varchar(255)">
                <constraints nullable="false"/>
            </column>
            <column name="scope" type="varchar(255)">
                <constraints nullable="false"/>
            </column>
            <column name="status" type="config_state_status">
                <constraints nullable="false"/>
            </column>
            <column name="type" type="config_state_type">
                <constraints nullable="false"/>
            </column>
            <column name="last_modified_at" type="datetime" defaultValueComputed="${now}">
                <constraints nullable="false"/>
            </column>
        </createTable>
    </changeSet>

    <changeSet id="Insert data into config_state" author="joris" dbms="h2,postgresql">
        <sql>
            INSERT INTO config_state (client_id, scope, status, type)
            (SELECT DISTINCT client_id, scope, 'ACTIVE' AS status, 'CONFIG' as type FROM config)
        </sql>
        <rollback>
            DELETE FROM config_state
        </rollback>
    </changeSet>

    <changeSet id="Create config_state indexes" author="joris" dbms="h2,postgresql">
        <createIndex tableName="config_state" indexName="idx_config_state_client_scope_status">
            <column name="client_id"/>
            <column name="scope"/>
            <column name="type"/>
            <column name="status"/>
        </createIndex>
        <createIndex tableName="config_state" indexName="idx_config_state_client_scope_date">
            <column name="client_id"/>
            <column name="scope"/>
            <column name="type"/>
            <column name="last_modified_at"/>
        </createIndex>
    </changeSet>

    <changeSet id="Add state and rank column to config" author="joris" dbms="h2,postgresql">
        <addColumn tableName="config">
            <column name="state_id" type="bigint" valueComputed="(SELECT cs.id FROM config_state AS cs WHERE client_id = cs.client_id AND scope = cs.scope)">
                <constraints nullable="false" foreignKeyName="fk_config_config_state" references="config_state(id)"/>
            </column>
            <column name="rank" value="0" defaultValue="0" type="int">
                <constraints nullable="false"/>
            </column>
        </addColumn>
    </changeSet>

    <changeSet id="Create config_state_values indexes" author="joris" dbms="h2,postgresql">
        <createIndex tableName="config" indexName="idx_state_rank">
            <column name="state_id"/>
            <column name="rank"/>
        </createIndex>
    </changeSet>

    <changeSet id="Remove old config indexes" author="joris" dbms="h2,postgresql">
        <dropIndex tableName="config" indexName="idx_config_client_name"/>
        <dropIndex tableName="config" indexName="idx_config_client_scope"/>
    </changeSet>

    <changeSet id="Remove old config columns" author="joris" dbms="h2,postgresql">
        <dropColumn tableName="config" columnName="client_id"/>
        <dropColumn tableName="config" columnName="scope"/>
    </changeSet>
</databaseChangeLog>
