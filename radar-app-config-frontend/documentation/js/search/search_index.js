var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/guards/AdminGuard.html",[0,2.778,1,2.319]],["body/guards/AdminGuard.html",[1,3.594,2,3.351,3,0.21,4,0.183,5,0.183,6,3.763,7,0.514,8,1.243,9,4.716,10,1.128,11,3.763,12,3.181,13,3.432,14,0.899,15,4.388,16,1.309,17,0.02,18,0.799,19,0.799,20,1.309,21,3.763,22,5.637,23,5.342,24,5.637,25,4.388,26,3.91,27,0.968,28,2.847,29,3.331,30,3.106,31,5.342,32,0.483,33,1.685,34,0.383,35,1.452,36,1.894,37,2.593,38,2.128,39,1.894,40,0.21,41,0.107,42,1.61,43,1.698,44,1.528,45,1.072,46,3.91,47,3.763,48,1.524,49,1.528,50,4.388,51,1.698,52,0.011,53,0.015,54,0.011]],["title/components/AdminSelectionPageComponent.html",[55,0.317,56,0.889]],["body/components/AdminSelectionPageComponent.html",[3,0.181,4,0.158,5,0.158,7,0.444,14,0.605,17,0.019,18,0.726,32,0.377,34,0.331,40,0.181,41,0.092,52,0.01,53,0.013,54,0.01,55,0.566,56,1.518,57,1.532,58,1.194,59,1.194,60,1.194,61,4.394,62,1.968,63,3.554,64,2.898,65,1.393,66,1.975,67,2.04,68,1.194,69,2.346,70,2.121,71,1.611,72,4.394,73,1.317,74,2.129,75,1.256,76,1.194,77,2.129,78,3.796,79,1.393,80,1.322,81,3.255,82,3.913,83,5.125,84,0.881,85,1.611,86,1.532,87,1.194,88,1.953,89,1.194,90,1.611,91,0.976,92,1.194,93,0.927,94,1.611,95,0.927,96,1.611,97,0.927,98,0.837,99,0.976,100,1.135,101,1.194,102,0.976,103,1.194,104,0.976,105,1.194,106,0.927,107,1.385,108,0.927,109,0.976,110,1.194,111,1.194,112,0.927,113,1.194,114,0.976,115,1.194,116,0.927,117,1.194,118,0.927,119,1.194,120,0.976,121,1.194,122,0.927,123,0.976,124,1.194,125,1.194]],["title/components/AppComponent.html",[55,0.317,91,0.935]],["body/components/AppComponent.html",[3,0.203,4,0.177,5,0.177,17,0.019,18,0.781,32,0.311,34,0.37,39,2.379,40,0.203,41,0.103,52,0.011,53,0.014,54,0.011,55,0.535,56,1.035,57,1.648,58,1.332,59,1.332,60,1.332,62,1.49,66,1.204,67,1.332,68,1.332,69,2.372,70,2.144,71,1.733,80,1.476,84,0.984,85,1.733,86,1.648,87,1.332,88,2.04,89,1.332,90,1.733,91,1.667,92,1.332,93,1.035,94,1.733,95,1.035,96,1.733,97,1.035,98,0.934,99,1.089,100,1.267,101,1.332,102,1.089,103,1.332,104,1.089,105,1.332,106,1.035,107,1.49,108,1.035,109,1.089,110,1.332,111,1.332,112,1.035,113,1.332,114,1.089,115,1.332,116,1.035,117,1.332,118,1.035,119,1.332,120,1.089,121,1.332,122,1.035,123,1.089,124,1.332,125,1.332,126,3.633,127,5.512,128,4.237]],["title/modules/AppModule.html",[129,1.204,130,2.522]],["body/modules/AppModule.html",[3,0.174,4,0.152,5,0.152,17,0.02,32,0.54,34,0.317,40,0.174,41,0.088,52,0.009,53,0.013,54,0.009,70,1.033,84,0.844,91,1.846,129,1.203,130,5.223,131,1.406,132,1.875,133,3.125,134,2.927,135,2.741,136,1.661,137,3.117,138,3.117,139,3.117,140,3.117,141,4.206,142,4.206,143,3.898,144,3.898,145,3.898,146,4.206,147,4.206,148,3.898,149,3.635,150,2.94,151,2.002,152,2.147,153,3.635,154,2.274,155,4.976,156,4.266,157,2.52,158,2.274,159,4.23,160,3.635,161,3.635,162,3.45,163,3.117,164,4.976,165,3.635,166,3.117,167,2.775,168,3.117,169,3.117,170,3.635,171,4.976,172,2.002,173,1.661,174,1.875,175,3.635,176,3.117,177,2.52,178,3.635,179,3.635]],["title/classes/AppPage.html",[41,0.088,180,2.778]],["body/classes/AppPage.html",[3,0.248,4,0.216,5,0.216,7,0.607,8,1.38,14,0.997,17,0.02,27,1.38,29,3.696,32,0.381,39,2.238,40,0.248,41,0.126,48,1.691,52,0.013,53,0.016,54,0.013,86,1.55,157,3.596,180,4.777,181,3.064,182,4.447,183,6.976,184,6.976,185,5.186,186,5.186,187,5.186,188,5.186,189,5.186,190,3.306,191,5.186]],["title/modules/AppRoutingModule.html",[129,1.204,141,2.319]],["body/modules/AppRoutingModule.html",[3,0.243,4,0.212,5,0.212,17,0.02,32,0.49,34,0.444,35,1.685,40,0.243,41,0.124,45,1.244,52,0.013,53,0.016,54,0.013,55,0.444,116,1.512,131,1.97,136,2.327,141,3.944,154,2.327,158,2.828,192,5.092,193,3.531,194,3.672,195,3.944,196,5.092,197,3.531,198,4.366,199,4.291,200,5.092,201,3.531,202,5.092,203,5.092,204,5.092]],["title/interfaces/AuthData.html",[205,2.319,206,2.522]],["body/interfaces/AuthData.html",[3,0.245,4,0.214,5,0.214,7,0.599,17,0.019,19,0.879,32,0.376,40,0.297,52,0.013,53,0.016,54,0.013,73,1.595,205,3.957,206,4.304,207,3.908,208,3.908,209,4.816,210,3.21,211,2.685,212,3.263,213,4.389,214,4.389,215,4.304,216,4.389,217,4.389,218,4.389,219,4.389]],["title/guards/AuthGuard.html",[0,2.778,220,2.319]],["body/guards/AuthGuard.html",[2,3.306,3,0.207,4,0.181,5,0.181,7,0.507,8,1.233,9,4.696,10,1.113,11,3.713,12,3.169,13,3.422,14,0.891,16,1.298,17,0.02,18,0.792,19,0.792,20,1.298,21,3.713,22,5.609,23,5.308,24,5.609,26,3.876,27,0.955,28,2.829,29,3.303,30,3.08,31,5.308,32,0.481,33,1.671,34,0.378,35,1.433,36,1.869,37,2.558,38,2.1,39,1.869,40,0.207,41,0.105,42,1.589,43,1.675,44,1.508,45,1.058,48,1.511,49,1.508,51,1.675,52,0.011,53,0.015,54,0.011,220,3.563,221,3.713,222,4.33,223,4.33,224,3.303,225,4.33,226,4.33,227,2.234,228,3.713,229,4.33]],["title/modules/AuthModule.html",[129,1.204,142,2.319]],["body/modules/AuthModule.html",[3,0.222,4,0.194,5,0.194,17,0.02,32,0.508,34,0.406,40,0.222,41,0.113,52,0.012,53,0.015,54,0.012,84,1.079,112,1.82,129,1.538,131,1.798,132,2.398,133,3.525,134,2.398,135,3.221,136,2.924,142,4.664,143,4.173,150,3.455,151,2.56,152,2.746,154,2.672,158,2.672,159,3.223,168,3.985,172,2.56,230,3.985,231,3.985,232,4.647,233,3.985,234,4.647,235,3.727,236,4.647,237,5.848,238,2.124]],["title/interfaces/AuthResponse.html",[205,2.319,212,2.319]],["body/interfaces/AuthResponse.html",[3,0.228,4,0.199,5,0.199,7,0.558,17,0.02,19,1.007,32,0.351,40,0.284,52,0.012,53,0.015,54,0.012,73,1.528,205,3.789,206,3.308,207,3.643,208,3.643,209,3.308,210,2.925,211,2.754,212,3.789,213,5.812,214,5.812,215,4.931,216,5.812,217,5.812,218,5.812,219,5.812]],["title/modules/AuthRoutingModule.html",[129,1.204,143,2.149]],["body/modules/AuthRoutingModule.html",[3,0.252,4,0.22,5,0.22,17,0.02,32,0.497,34,0.46,35,1.743,40,0.252,41,0.128,45,1.287,52,0.014,53,0.016,54,0.014,55,0.46,112,1.543,131,2.038,136,2.408,143,3.732,154,2.408,158,2.887,193,3.654,194,3.727,195,4.026,199,3.654,201,3.654,239,5.269,240,5.269,241,4.023]],["title/injectables/AuthService.html",[13,1.764,33,1.087]],["body/injectables/AuthService.html",[3,0.156,4,0.136,5,0.136,7,0.382,8,1.018,10,0.838,13,2.237,14,1.086,16,1.071,17,0.02,18,0.654,19,0.87,20,1.071,27,1.181,28,2.447,30,1.797,32,0.5,33,1.379,34,0.285,36,1.408,38,1.582,39,1.408,40,0.156,41,0.079,43,1.262,44,1.865,45,1.422,46,3.713,48,1.81,51,1.262,52,0.008,53,0.012,54,0.008,73,1.186,173,1.49,174,1.683,190,2.079,210,2.512,212,3.413,224,3.439,238,1.49,242,1.797,243,2.797,244,5.468,245,5.354,246,5.821,247,4.991,248,4.614,249,3.956,250,5.354,251,5.354,252,2.079,253,3.711,254,4.614,255,2.542,256,3.261,257,3.261,258,1.262,259,4.614,260,3.261,261,4.614,262,5.354,263,3.261,264,3.261,265,3.261,266,3.261,267,3.261,268,3.261,269,3.261,270,4.614,271,3.261,272,2.262,273,3.261,274,2.797,275,2.797,276,3.261,277,2.262,278,2.49,279,2.797,280,3.261,281,3.2,282,3.261,283,2.797,284,3.261,285,3.261,286,3.261,287,3.261,288,2.49,289,3.261,290,3.523,291,3.261,292,2.797,293,3.261,294,3.261,295,3.261,296,3.261,297,2.797,298,3.261,299,2.079,300,3.261,301,3.261,302,3.956,303,3.261,304,3.261,305,3.261,306,3.261,307,3.261,308,3.261,309,3.261,310,3.261,311,2.49,312,3.261,313,3.261,314,3.261,315,3.261,316,3.261,317,3.261,318,3.261,319,3.261,320,3.261,321,3.2,322,2.941,323,2.079,324,2.262,325,1.927,326,2.262,327,2.079,328,2.262,329,3.261,330,2.49,331,2.797,332,3.261]],["title/classes/Client.html",[41,0.088,333,1.662]],["body/classes/Client.html",[3,0.253,4,0.221,5,0.221,7,0.62,14,1.081,17,0.019,18,0.961,19,0.961,40,0.253,41,0.129,52,0.014,53,0.016,54,0.014,73,1.629,181,3.13,211,2.675,333,2.896,334,4.542,335,2.926,336,5.177,337,5.297,338,5.297,339,5.297]],["title/injectables/ClientService.html",[33,1.087,340,1.764]],["body/injectables/ClientService.html",[3,0.188,4,0.164,5,0.164,7,0.461,8,1.159,10,1.519,14,0.942,16,0.915,17,0.02,18,0.558,19,0.558,20,0.915,27,1.391,28,3.002,29,3.104,32,0.496,33,1.571,34,0.344,36,1.701,38,1.911,39,1.701,40,0.188,41,0.096,43,1.524,44,2.196,45,0.963,48,1.598,52,0.01,53,0.014,54,0.01,65,1.446,173,1.801,174,2.033,238,1.801,242,2.171,252,2.512,253,4.02,255,3.257,333,2.882,340,2.548,341,3.379,342,3.257,343,2.551,344,6.757,345,6.757,346,2.977,347,3.94,348,3.94,349,2.614,350,3.94,351,2.171,352,2.033,353,3.379,354,3.009,355,3.94,356,1.701,357,3.94,358,2.732,359,3.94,360,3.94,361,3.94,362,2.512,363,3.379,364,3.94,365,2.732,366,2.732,367,2.732,368,2.732,369,2.732]],["title/components/ClientsComponent.html",[55,0.317,93,0.889]],["body/components/ClientsComponent.html",[3,0.124,4,0.108,5,0.108,7,0.303,8,0.86,10,1.003,12,2.789,14,1.086,16,1.089,17,0.02,18,0.865,19,0.665,20,1.089,27,1.346,32,0.448,34,0.226,35,0.857,40,0.124,41,0.063,42,1.431,44,1.818,45,0.633,48,1.59,49,0.903,51,1.815,52,0.007,53,0.01,54,0.007,55,0.409,56,0.633,57,1.166,58,0.815,59,0.815,60,0.815,62,1.054,66,0.737,67,0.815,68,0.815,69,2.238,70,2.023,71,1.227,73,1.003,74,1.721,75,1.291,76,1.227,77,1.721,79,0.951,80,0.903,84,0.602,85,1.227,86,1.166,87,0.815,88,1.641,89,0.815,90,1.227,91,0.666,92,0.815,93,1.275,94,1.227,95,0.633,96,1.227,97,0.633,98,0.572,99,0.666,100,0.775,101,0.815,102,0.666,103,0.815,104,0.666,105,0.815,106,0.633,107,1.411,108,0.633,109,0.666,110,0.815,111,0.815,112,0.633,113,0.815,114,0.666,115,0.815,116,0.633,117,0.815,118,0.633,119,0.815,120,0.666,121,0.815,122,0.633,123,0.666,124,0.815,125,0.815,211,1.431,227,2.42,258,2.019,333,2.385,335,1.684,340,2.852,343,2.539,349,2.361,351,1.428,356,1.684,370,2.222,371,2.275,372,3.345,373,2.584,374,2.42,375,2.751,376,3.327,377,3.327,378,2.305,379,3.084,380,2.531,381,2.705,382,4.475,383,1.979,384,3.149,385,3.362,386,3.901,387,2.592,388,2.592,389,2.305,390,3.345,391,2.592,392,2.402,393,2.592,394,2.592,395,3.901,396,2.592,397,2.222,398,2.592,399,2.592,400,2.592,401,2.592,402,2.592,403,1.531,404,1.652,405,1.531,406,2.222,407,4.079,408,1.797,409,2.487,410,1.797,411,3.345,412,1.652,413,1.652,414,2.592,415,1.979,416,2.222,417,2.149,418,2.305,419,1.531,420,2.149,421,3.345,422,2.149,423,3.345]],["title/classes/Config.html",[41,0.088,98,0.802]],["body/classes/Config.html",[3,0.236,4,0.206,5,0.206,7,0.578,14,1.094,17,0.02,18,0.86,19,1.016,40,0.236,41,0.12,52,0.013,53,0.016,54,0.013,73,1.561,75,1.634,76,1.91,98,1.553,181,2.918,211,2.73,335,2.838,424,4.235,425,5.022,426,5.239,427,4.939,428,5.207,429,4.939,430,4.939,431,4.939]],["title/components/ConfigSelectionPageComponent.html",[55,0.317,97,0.889]],["body/components/ConfigSelectionPageComponent.html",[3,0.105,4,0.092,5,0.092,7,0.258,8,0.76,10,0.886,12,2.634,14,1.062,16,0.985,17,0.02,18,0.817,19,0.601,20,0.985,27,1.315,32,0.45,34,0.192,35,0.73,40,0.105,41,0.054,42,1.265,44,1.921,45,1.172,48,1.612,52,0.006,53,0.009,54,0.006,55,0.37,56,0.539,57,1.03,58,0.694,59,0.694,60,0.694,62,1.992,64,1.684,66,0.627,67,1.334,68,0.694,69,2.183,70,1.973,71,1.084,72,2.955,73,0.886,74,1.557,75,0.73,76,0.694,77,1.557,79,0.809,80,0.768,81,1.891,84,0.512,85,1.084,86,1.03,87,0.694,88,1.508,89,0.694,90,1.084,91,0.567,92,0.694,93,0.539,94,1.084,95,0.539,96,1.084,97,1.172,98,1.217,99,0.567,100,0.659,101,0.694,102,0.567,103,0.694,104,0.567,105,0.694,106,0.539,107,0.932,108,0.539,109,0.567,110,0.694,111,0.694,112,0.539,113,0.694,114,0.567,115,0.694,116,0.539,117,0.694,118,0.539,119,0.694,120,0.567,121,0.694,122,0.539,123,1.337,124,0.694,125,0.694,211,0.809,227,2.475,258,1.333,333,2.378,335,1.831,340,2.795,343,1.831,346,2.488,349,2.371,351,1.215,352,1.138,356,1.488,371,2.057,374,2.189,375,2.435,376,3.057,377,3.057,378,2.834,379,2.834,380,2.326,381,2.39,384,2.974,385,3.175,389,2.036,392,2.354,403,1.303,404,1.406,405,1.303,407,3.997,408,1.529,409,2.197,410,1.529,412,2.197,413,1.406,418,2.036,419,1.303,432,5.77,433,4.666,434,3.057,435,2.39,436,2.206,437,3.259,438,3.447,439,2.206,440,2.206,441,2.206,442,2.206,443,2.206,444,2.206,445,2.39,446,2.206,447,2.036,448,2.632,449,2.206,450,2.206,451,2.206,452,2.206,453,2.206,454,1.684,455,3.825,456,1.529,457,1.529,458,2.39,459,3.326,460,2.632,461,1.684,462,2.955,463,1.529,464,1.529,465,3.447,466,3.447,467,2.632,468,3.447,469,2.632,470,2.955,471,2.642,472,4.113]],["title/injectables/ConfigService.html",[33,1.087,437,2.149]],["body/injectables/ConfigService.html",[3,0.133,4,0.116,5,0.116,7,0.326,8,0.908,10,0.716,14,1.023,16,1.49,17,0.02,18,0.909,19,0.766,20,1.49,27,1.378,28,2.638,32,0.444,33,1.231,34,0.243,36,1.202,38,1.351,39,1.202,40,0.133,41,0.068,43,1.078,44,2.235,45,1.322,48,1.771,52,0.007,53,0.011,54,0.007,65,1.022,98,1.378,107,1.113,173,1.273,174,1.437,190,3.122,238,1.273,242,1.535,252,1.776,253,3.448,255,2.268,302,5.866,311,3.739,335,3.104,342,2.268,343,2.607,346,2.698,352,1.437,356,1.777,358,2.855,362,2.624,365,2.855,366,2.855,367,2.855,368,2.855,369,2.855,374,2.978,392,1.138,415,3.144,425,4.13,437,2.432,469,3.144,473,2.389,474,4.117,475,4.117,476,4.117,477,4.117,478,4.117,479,4.117,480,4.117,481,2.786,482,4.117,483,2.786,484,4.117,485,2.786,486,4.117,487,2.786,488,4.117,489,2.786,490,4.117,491,2.786,492,4.117,493,4.407,494,2.786,495,4.117,496,2.786,497,2.786,498,2.786,499,2.786,500,3.144,501,4.117,502,4.117,503,4.117,504,4.117,505,4.117,506,3.53,507,3.53,508,4.117,509,3.53,510,2.786,511,2.786,512,2.786,513,2.786,514,2.786,515,2.786,516,4.897,517,2.786,518,2.786]],["title/components/ConfigsComponent.html",[55,0.317,95,0.889]],["body/components/ConfigsComponent.html",[3,0.087,4,0.076,5,0.076,7,0.212,8,0.65,10,0.758,12,2.437,14,1.103,16,1.175,17,0.02,18,0.888,19,0.608,20,1.175,27,1.403,30,0.999,32,0.444,34,0.158,35,0.6,40,0.087,41,0.044,42,1.082,44,1.858,45,1.303,48,1.695,49,1.298,51,1.141,52,0.005,53,0.008,54,0.005,55,0.325,56,0.443,57,0.881,58,0.57,59,0.57,60,0.57,62,0.797,66,0.515,67,0.57,68,0.57,69,2.108,70,1.905,71,0.927,73,0.758,74,1.367,75,0.976,76,1.172,77,1.367,79,0.665,80,0.632,84,0.421,85,0.927,86,0.881,87,0.57,88,1.35,89,0.57,90,0.927,91,0.466,92,0.57,93,0.443,94,0.927,95,1.049,96,0.927,97,0.443,98,0.947,99,0.466,100,1.513,101,0.57,102,0.466,103,0.57,104,0.466,105,0.57,106,0.443,107,1.16,108,0.443,109,0.466,110,0.57,111,0.57,112,0.443,113,0.57,114,0.466,115,0.57,116,0.443,117,0.57,118,0.443,119,0.57,120,0.466,121,0.57,122,0.443,123,1.553,124,0.57,125,0.57,210,1.852,211,0.665,227,2.436,258,1.66,299,3.226,324,1.258,325,1.071,326,1.258,327,1.156,328,1.258,330,2.251,333,1.961,335,1.608,340,2.586,343,2.48,346,2.302,349,2.223,351,0.999,352,0.936,356,1.852,362,1.156,371,1.807,373,2.053,374,1.923,375,2.412,376,2.736,377,2.736,378,2.536,379,2.536,380,2.081,381,2.045,384,2.611,385,2.938,389,1.742,392,2.27,403,1.071,404,1.156,405,1.071,407,4.274,408,1.258,409,1.88,410,1.258,412,2.375,413,1.156,417,1.624,418,1.742,419,1.071,420,1.624,422,1.624,434,2.736,435,2.045,437,3.151,445,2.045,447,2.536,448,2.251,454,1.385,455,4.521,456,1.258,457,1.258,458,2.045,459,3.509,460,2.845,461,1.385,462,3.195,463,2.045,464,1.258,467,2.251,469,2.251,471,2.364,493,2.845,509,2.528,519,1.555,520,2.528,521,4.292,522,4.292,523,2.949,524,2.528,525,2.949,526,3.68,527,1.555,528,3.4,529,2.949,530,1.813,531,1.813,532,1.813,533,1.813,534,2.949,535,1.813,536,1.813,537,1.813,538,1.813,539,1.813,540,1.813,541,1.813,542,2.528,543,1.813,544,2.949,545,1.813,546,1.813,547,1.813,548,1.813,549,1.813,550,1.813,551,1.813,552,1.813,553,1.813,554,1.813,555,1.555,556,1.385,557,1.555,558,1.813,559,1.813,560,1.813,561,5.558,562,1.813,563,1.555,564,1.813,565,3.68,566,1.555,567,1.555,568,1.555,569,1.813,570,3.195,571,1.555,572,1.385,573,1.813,574,2.528,575,1.813,576,1.555,577,3.195,578,1.813]],["title/components/ConfigsTableComponent.html",[55,0.317,99,0.935]],["body/components/ConfigsTableComponent.html",[3,0.074,4,0.065,5,0.065,7,0.305,8,0.574,10,0.4,12,2.28,14,1.068,16,1.214,17,0.02,18,0.835,19,0.741,20,1.214,26,1.804,27,1.325,30,1.433,32,0.32,34,0.136,35,0.515,40,0.074,41,0.038,42,0.955,43,0.603,44,1.638,45,1.278,48,1.271,49,0.543,51,1.514,52,0.012,53,0.007,54,0.004,55,0.292,56,0.381,57,0.778,58,0.49,59,0.49,60,0.49,62,0.703,65,0.955,66,0.443,67,0.49,68,0.49,69,2.042,70,1.846,71,0.818,73,0.669,74,1.229,75,1.556,76,1.478,77,1.229,79,0.572,80,0.906,84,0.362,85,0.818,86,0.778,87,0.49,88,1.23,89,0.49,90,0.818,91,0.4,92,0.49,93,0.381,94,0.818,95,0.381,96,0.818,97,0.381,98,0.739,99,1.005,100,1.563,101,0.49,102,0.4,103,0.49,104,0.4,105,0.49,106,0.381,107,1.349,108,0.381,109,0.4,110,0.49,111,0.49,112,0.381,113,0.49,114,0.4,115,0.49,116,0.381,117,0.49,118,0.381,119,0.49,120,0.4,121,0.49,122,0.381,123,0.861,124,0.49,125,0.49,134,0.804,151,2.155,190,2.494,211,0.955,215,2.323,227,2.019,249,2.231,258,2.169,281,1.804,349,1.819,362,0.993,371,1.624,380,1.897,385,2.155,416,2.231,420,1.845,426,1.987,447,0.92,459,3.26,463,1.804,470,4.032,471,1.433,507,1.336,572,1.19,579,1.19,580,5.782,581,5.149,582,1.336,583,2.231,584,3.35,585,2.602,586,3.35,587,3.35,588,4.351,589,3.35,590,3.912,591,3.35,592,3.912,593,3.35,594,2.602,595,3.912,596,3.912,597,2.602,598,3.35,599,3.35,600,3.35,601,2.602,602,2.231,603,1.987,604,3.35,605,2.231,606,3.912,607,3.35,608,1.558,609,3.35,610,3.912,611,3.35,612,3.912,613,2.602,614,1.558,615,1.558,616,2.872,617,1.558,618,1.558,619,1.558,620,1.558,621,2.602,622,1.558,623,5.23,624,1.558,625,4.351,626,1.558,627,1.558,628,2.602,629,1.558,630,2.602,631,1.558,632,2.602,633,1.558,634,2.602,635,1.558,636,1.558,637,1.558,638,2.602,639,1.558,640,1.558,641,1.558,642,4.99,643,2.602,644,1.558,645,1.558,646,1.558,647,1.558,648,2.987,649,2.231,650,4.702,651,1.19,652,1.558,653,0.993,654,1.08,655,3.35,656,3.35,657,3.912,658,1.336,659,1.558,660,1.558,661,3.35,662,1.558,663,1.558,664,1.558,665,1.558,666,3.35,667,3.35,668,2.602,669,3.35,670,3.35,671,3.35,672,3.35,673,3.35,674,1.558,675,1.558,676,3.35,677,3.35,678,3.35,679,2.602,680,3.35,681,3.35,682,3.35,683,3.35,684,3.912,685,3.912,686,3.912,687,4.351,688,3.912,689,3.912,690,1.558,691,1.558,692,1.558,693,3.35,694,1.558,695,1.558,696,2.602,697,3.912,698,2.231,699,2.602,700,2.602,701,2.231,702,3.912,703,1.558,704,1.558,705,2.558,706,1.558,707,1.558,708,1.558,709,1.558,710,1.558,711,1.558,712,1.558,713,1.558,714,1.558,715,1.558,716,1.558,717,1.558,718,1.558,719,1.558,720,1.558,721,1.558,722,1.558,723,1.558,724,1.558,725,2.602,726,2.602,727,2.602,728,2.602,729,2.602,730,2.602,731,2.602,732,2.602,733,1.558,734,2.602,735,2.602,736,2.602,737,2.602]],["title/modules/CoreModule.html",[129,1.204,144,2.149]],["body/modules/CoreModule.html",[3,0.178,4,0.155,5,0.155,17,0.02,32,0.53,34,0.325,40,0.178,41,0.09,52,0.01,53,0.013,54,0.01,56,1.624,62,1.666,63,2.582,84,0.865,97,1.624,104,1.854,109,1.854,114,1.854,116,1.624,129,1.232,131,1.441,132,1.922,133,3.165,134,1.922,135,2.052,136,2.625,144,4.442,145,3.927,149,3.661,150,2.989,151,2.052,152,2.2,154,2.312,158,2.312,159,2.582,162,3.508,167,2.844,169,3.193,172,2.052,197,2.582,198,3.193,235,3.225,433,2.582,738,3.193,739,3.193,740,3.724,741,3.193,742,3.724,743,3.724,744,2.844,745,3.724,746,3.724,747,3.724,748,4.338,749,3.724,750,2.844,751,3.724,752,3.724,753,4.338,754,3.193]],["title/modules/CoreRoutingModule.html",[129,1.204,145,2.149]],["body/modules/CoreRoutingModule.html",[1,3.778,3,0.227,4,0.198,5,0.198,9,4.11,17,0.02,32,0.512,34,0.414,35,1.571,40,0.227,41,0.115,45,1.16,52,0.012,53,0.015,54,0.012,55,0.517,56,1.448,62,1.882,63,3.292,66,1.35,97,1.448,98,1.047,131,1.837,136,2.17,145,3.502,154,2.17,158,2.708,193,3.292,194,3.559,195,3.778,199,4.11,220,4.119,241,3.625,433,3.292,748,5.082,755,4.748,756,4.748,757,4.748,758,4.071,759,4.748]],["title/components/DropDownComponent.html",[55,0.317,102,0.935]],["body/components/DropDownComponent.html",[3,0.148,4,0.129,5,0.129,7,0.363,8,0.981,14,0.999,16,0.719,17,0.02,18,0.853,19,0.63,20,0.719,27,0.683,32,0.228,34,0.27,40,0.148,41,0.075,52,0.008,53,0.012,54,0.008,55,0.525,56,0.757,57,1.329,58,0.974,59,0.974,60,0.974,62,1.202,65,1.632,66,0.88,67,0.974,68,0.974,69,2.292,70,2.072,71,1.398,80,1.079,84,0.719,85,1.398,86,1.329,87,0.974,88,1.788,89,0.974,90,1.398,91,0.796,92,0.974,93,0.757,94,1.398,95,0.757,96,1.398,97,0.757,98,0.683,99,0.796,100,0.926,101,0.974,102,1.461,103,0.974,104,0.796,105,0.974,106,0.757,107,1.202,108,0.757,109,0.796,110,0.974,111,0.974,112,0.757,113,0.974,114,0.796,115,0.974,116,0.757,117,0.974,118,0.757,119,0.974,120,0.796,121,0.974,122,0.757,123,0.796,124,0.974,125,0.974,258,1.198,281,2.148,447,3.36,472,5.537,500,4.598,603,3.396,605,3.813,616,4.876,648,4.598,649,3.813,705,4.598,760,5.537,761,4.931,762,2.656,763,7.1,764,5.203,765,4.447,766,4.447,767,6.022,768,6.458,769,3.097,770,4.447,771,3.813,772,3.097,773,6.828,774,4.447,775,4.447,776,3.813,777,3.097,778,3.097,779,3.097,780,4.447,781,4.447,782,3.097,783,3.813,784,4.447,785,4.447,786,3.097,787,3.097,788,3.097,789,4.447]],["title/interceptors/ErrorInterceptor.html",[790,2.522,791,2.319]],["body/interceptors/ErrorInterceptor.html",[3,0.214,4,0.187,5,0.187,7,0.524,8,1.26,10,1.151,13,3.393,14,0.911,16,1.326,17,0.02,18,0.809,19,0.809,20,1.326,27,0.988,28,2.874,32,0.503,33,1.707,34,0.391,36,1.933,37,2.646,40,0.214,41,0.109,42,1.643,43,1.732,45,1.094,48,1.544,52,0.012,53,0.015,54,0.012,238,2.046,272,3.105,325,3.716,791,3.641,792,3.419,793,3.84,794,4.361,795,3.419,796,4.478,797,4.361,798,5.058,799,5.058,800,4.478,801,3.419,802,3.419,803,4.361,804,3.84,805,4.478,806,4.478,807,3.84,808,4.478,809,3.84,810,3.84,811,4.478,812,3.419,813,4.478,814,4.478,815,4.478]],["title/components/FooterComponent.html",[55,0.317,104,0.935]],["body/components/FooterComponent.html",[3,0.179,4,0.156,5,0.156,17,0.02,18,0.72,32,0.423,34,0.327,40,0.179,41,0.091,52,0.01,53,0.013,54,0.01,55,0.563,56,0.915,57,1.518,58,1.178,59,1.178,60,1.178,62,1.373,65,1.374,66,1.065,67,1.178,68,1.178,69,2.343,70,2.118,71,1.597,74,1.374,77,1.863,79,1.374,80,1.769,84,0.87,85,1.597,86,1.518,87,1.178,88,1.942,89,1.178,90,1.597,91,0.963,92,1.178,93,0.915,94,1.597,95,0.915,96,1.597,97,0.915,98,0.826,99,0.963,100,1.12,101,1.178,102,0.963,103,1.178,104,1.588,105,1.178,106,0.915,107,1.373,108,0.915,109,0.963,110,1.178,111,1.178,112,0.915,113,1.178,114,0.963,115,1.178,116,0.915,117,1.178,118,0.915,119,1.178,120,0.963,121,1.178,122,0.915,123,0.963,124,1.178,125,1.178,190,2.387,579,2.86,816,3.212,817,6.457,818,5.762,819,5.078,820,2.86,821,5.078,822,3.212,823,3.212,824,3.212,825,3.745,826,3.212,827,3.745,828,3.212,829,3.212,830,3.745,831,3.745,832,3.745,833,3.212,834,3.212,835,3.745,836,3.745,837,3.745,838,3.745,839,3.745,840,3.745,841,3.745,842,3.745,843,3.745]],["title/components/GlobalClientsComponent.html",[55,0.317,106,0.889]],["body/components/GlobalClientsComponent.html",[3,0.145,4,0.127,5,0.127,7,0.356,8,0.968,10,0.781,14,1.048,16,1.019,17,0.02,18,0.799,19,0.622,20,1.019,27,1.243,32,0.414,34,0.265,40,0.145,41,0.074,42,1.61,43,1.176,48,1.186,49,1.059,51,1.992,52,0.008,53,0.011,54,0.008,55,0.449,56,0.743,57,1.312,58,0.956,59,0.956,60,0.956,62,1.186,66,0.864,67,0.956,68,0.956,69,2.287,70,2.067,71,1.38,73,1.128,74,1.889,75,1.452,76,1.38,77,1.889,79,1.115,80,1.059,84,0.706,85,1.38,86,1.312,87,0.956,88,1.773,89,0.956,90,1.38,91,0.781,92,0.956,93,0.743,94,1.38,95,0.743,96,1.38,97,0.743,98,0.67,99,0.781,100,0.909,101,0.956,102,0.781,103,0.956,104,0.781,105,0.956,106,1.377,107,1.81,108,0.743,109,0.781,110,0.956,111,0.956,112,0.743,113,0.956,114,0.781,115,0.956,116,0.743,117,0.956,118,0.743,119,0.956,120,0.781,121,0.956,122,0.743,123,0.781,124,0.956,125,0.956,258,2.181,333,2.576,335,1.894,340,3.021,343,2.222,349,2.484,351,1.675,356,1.312,371,2.497,372,3.762,373,2.836,375,1.792,378,2.592,379,3.331,380,2.734,382,4.834,383,2.321,390,3.762,405,1.796,406,2.607,411,2.607,417,2.417,418,2.592,419,1.796,420,2.417,421,3.762,422,2.417,423,3.762,844,5.114,845,4.645,846,2.607,847,4.388,848,3.04,849,3.04,850,3.04,851,3.04,852,3.04,853,3.04,854,4.388]],["title/components/GlobalConfigsComponent.html",[55,0.317,108,0.889]],["body/components/GlobalConfigsComponent.html",[3,0.118,4,0.103,5,0.103,7,0.288,8,0.827,10,0.963,12,2.739,14,1.062,16,1.055,17,0.02,18,0.876,19,0.644,20,1.055,27,1.271,32,0.44,34,0.215,35,0.814,40,0.118,41,0.06,42,1.375,44,2.008,45,0.916,48,1.373,49,1.582,51,0.951,52,0.006,53,0.01,54,0.006,55,0.396,56,0.601,57,1.121,58,0.773,59,0.773,60,0.773,62,1.013,66,0.699,67,0.773,68,0.773,69,2.221,70,2.018,71,1.179,73,0.963,74,1.667,75,1.24,76,1.428,77,1.667,79,0.902,80,0.856,82,2.862,84,0.571,85,1.179,86,1.121,87,0.773,88,1.598,89,0.773,90,1.179,91,0.632,92,0.773,93,0.601,94,1.179,95,0.601,96,1.179,97,0.601,98,0.827,99,0.632,100,1.792,101,0.773,102,0.632,103,0.773,104,0.632,105,0.773,106,0.601,107,1.746,108,1.241,109,0.632,110,0.773,111,0.773,112,0.601,113,0.773,114,0.632,115,0.773,116,0.601,117,0.773,118,0.601,119,0.773,120,0.632,121,0.773,122,0.601,123,0.632,124,0.773,125,0.773,211,1.667,227,2.344,258,1.45,299,2.39,333,2.076,335,1.961,340,2.795,343,2.488,346,2.587,349,2.319,351,1.355,352,1.269,356,1.618,362,1.567,371,2.203,373,2.503,375,1.531,377,3.239,380,2.464,383,1.878,385,3.302,389,2.215,405,1.453,412,1.567,417,2.065,418,1.453,419,1.453,420,2.503,422,2.065,434,3.239,435,2.599,437,3.542,445,2.599,447,2.684,454,1.878,455,3.793,456,1.705,457,1.705,458,1.705,464,1.705,467,2.862,520,3.214,524,3.214,526,4.357,542,3.214,557,2.108,565,3.214,568,2.108,570,2.108,571,2.108,572,1.878,574,2.108,701,2.108,844,5.146,855,4.674,856,2.108,857,3.749,858,2.459,859,2.459,860,2.459,861,2.459,862,2.459,863,2.459,864,2.459,865,2.459,866,2.459,867,2.459,868,2.459,869,2.459,870,2.459,871,2.459,872,2.459,873,2.459,874,2.459]],["title/interceptors/JwtInterceptor.html",[790,2.522,875,2.319]],["body/interceptors/JwtInterceptor.html",[3,0.215,4,0.188,5,0.188,7,0.527,8,1.263,10,1.156,13,3.218,14,0.913,16,1.33,17,0.02,18,0.812,19,0.812,20,1.33,27,0.992,28,2.88,32,0.488,33,1.712,34,0.393,36,1.942,37,2.658,40,0.215,41,0.109,42,1.651,43,1.74,45,1.399,48,1.216,52,0.012,53,0.015,54,0.012,224,3.384,238,2.056,290,4.374,292,4.912,325,3.724,792,3.435,794,4.374,797,4.374,798,5.067,799,5.067,801,4.374,802,3.435,803,4.374,875,3.651,876,3.857,877,4.499,878,4.499,879,5.728,880,4.499,881,4.499,882,4.499,883,4.499,884,4.499,885,4.499,886,3.857]],["title/components/LeftSidebarComponent.html",[55,0.317,109,0.935]],["body/components/LeftSidebarComponent.html",[3,0.175,4,0.153,5,0.153,7,0.428,10,1.462,14,0.975,17,0.019,18,0.806,19,0.708,32,0.367,34,0.319,40,0.175,41,0.148,52,0.009,53,0.013,54,0.009,55,0.496,56,0.893,57,1.493,58,1.149,59,1.149,60,1.149,62,1.35,66,1.039,67,1.149,68,1.149,69,2.337,70,2.112,71,1.57,73,1.284,74,2.088,75,1.652,76,1.57,77,2.088,79,1.341,80,1.273,84,0.849,85,1.57,86,1.493,87,1.149,88,1.923,89,1.149,90,1.57,91,0.939,92,1.149,93,0.893,94,1.57,95,0.893,96,1.57,97,0.893,98,0.806,99,0.939,100,1.093,101,1.149,102,0.939,103,1.149,104,0.939,105,1.149,106,0.893,107,1.35,108,0.893,109,1.572,110,2.166,111,1.149,112,0.893,113,1.149,114,0.939,115,1.149,116,0.893,117,1.149,118,0.893,119,1.149,120,0.939,121,1.149,122,0.893,123,0.939,124,1.149,125,1.149,211,1.341,227,1.886,389,2.159,428,3.134,603,3.814,648,3.814,750,4.889,887,5.49,888,3.134,889,4.995,890,4.995,891,5.69,892,4.995,893,4.995,894,3.655,895,4.995,896,3.655,897,3.655,898,3.655,899,3.655,900,4.995]],["title/components/LoginComponent.html",[55,0.317,112,0.889]],["body/components/LoginComponent.html",[3,0.148,4,0.129,5,0.129,7,0.362,8,0.98,10,1.142,12,2.95,13,3.038,14,0.959,16,0.718,17,0.02,18,0.737,19,0.438,20,0.718,27,0.98,32,0.46,34,0.27,35,1.023,37,1.827,40,0.148,41,0.075,42,1.63,44,1.811,45,1.085,49,1.547,51,2.011,52,0.008,53,0.012,54,0.008,55,0.454,56,0.755,57,1.328,58,0.972,59,0.972,60,0.972,62,1.201,66,0.879,67,0.972,68,0.972,69,2.292,70,2.072,71,1.397,73,1.142,74,1.908,75,1.47,76,1.397,77,1.908,79,1.135,84,0.718,85,1.397,86,1.328,87,0.972,88,1.787,89,0.972,90,1.397,91,0.795,92,0.972,93,0.755,94,1.397,95,0.755,96,1.397,97,0.755,98,0.682,99,0.795,100,0.924,101,0.972,102,0.795,103,0.972,104,0.795,105,0.972,106,0.755,107,1.201,108,0.755,109,0.795,110,0.972,111,0.972,112,1.388,113,0.972,114,0.795,115,0.972,116,0.755,117,0.972,118,0.755,119,0.972,120,0.795,121,0.972,122,0.755,123,0.795,124,0.972,125,0.972,201,4.345,224,1.827,228,5.161,258,1.719,272,2.144,277,2.144,278,2.361,288,2.361,330,2.361,349,1.196,353,3.809,371,2.521,373,2.864,380,2.756,385,3.556,417,2.864,422,2.447,795,2.361,812,2.361,901,2.652,902,4.442,903,4.442,904,3.092,905,3.092,906,3.092,907,3.092,908,3.092,909,3.392,910,3.092,911,3.092,912,2.652,913,3.092,914,3.092,915,3.092,916,3.092,917,3.092,918,3.092,919,3.092,920,3.809,921,4.442]],["title/interceptors/MockInterceptor.html",[790,2.522,922,2.522]],["body/interceptors/MockInterceptor.html",[3,0.089,4,0.078,5,0.078,7,0.219,8,0.666,14,0.298,16,0.433,17,0.02,18,0.679,19,0.265,20,0.433,26,1.294,27,0.412,28,1.737,32,0.438,33,0.902,34,0.163,36,0.806,38,0.905,39,0.806,40,0.144,41,0.045,42,0.685,45,1.68,46,3.027,48,1.964,49,1.324,52,0.005,53,0.008,54,0.005,75,0.618,76,1.373,98,1.191,107,1.027,123,0.776,173,2.344,174,0.963,177,1.294,209,1.294,210,2.214,224,1.103,238,0.853,255,1.028,272,1.294,277,1.294,278,1.425,288,2.305,290,3.916,297,3.259,299,1.924,311,1.425,321,3.027,322,3.441,323,3.056,324,3.743,325,3.522,326,2.635,327,3.269,328,2.635,331,1.601,335,1.303,342,1.028,349,1.168,363,3.259,374,2.253,375,0.762,376,1.924,397,1.601,425,1.425,426,3.334,434,1.924,471,1.028,500,1.425,576,1.601,577,5.228,658,1.601,698,2.588,792,1.425,794,2.305,797,2.305,798,3.334,799,3.334,801,2.305,802,1.425,803,2.305,804,2.588,807,1.601,809,1.601,812,1.425,886,1.601,909,1.425,922,2.635,923,1.425,924,1.867,925,3.019,926,2.305,927,1.601,928,1.867,929,1.867,930,1.867,931,1.867,932,1.425,933,1.867,934,3.019,935,3.019,936,3.019,937,3.019,938,3.801,939,1.867,940,5.62,941,3.019,942,1.867,943,1.867,944,1.867,945,1.867,946,1.867,947,6.627,948,1.867,949,1.867,950,1.867,951,4.366,952,4.794,953,4.794,954,4.794,955,1.867,956,1.867,957,1.867,958,3.019,959,3.801,960,1.867,961,1.867,962,3.019,963,3.019,964,1.867,965,1.867,966,1.867,967,3.019,968,1.867,969,3.019,970,3.801,971,1.867,972,1.867,973,1.867,974,5.129,975,1.867,976,4.366,977,3.019,978,3.801,979,3.801,980,1.867,981,1.867,982,1.867,983,3.019,984,3.801,985,1.867,986,1.867,987,1.867,988,1.867,989,1.867,990,1.867,991,1.867,992,1.867,993,3.019,994,3.019,995,1.867,996,1.867,997,1.867,998,1.867,999,4.366,1000,1.867,1001,1.867,1002,1.867,1003,1.867,1004,1.867,1005,1.601,1006,1.867,1007,1.867,1008,1.867,1009,3.019,1010,1.867,1011,1.867,1012,1.867,1013,1.867,1014,1.867,1015,3.019,1016,4.366,1017,1.867,1018,3.801,1019,3.019,1020,1.867,1021,1.867,1022,1.867,1023,1.867,1024,1.867,1025,1.867,1026,1.601,1027,1.867,1028,1.867,1029,3.019,1030,1.867,1031,1.601,1032,1.867,1033,1.867,1034,1.867,1035,1.867,1036,1.867,1037,3.801,1038,3.801,1039,3.801,1040,3.801,1041,1.867,1042,2.588,1043,1.867,1044,1.294,1045,1.601,1046,1.601,1047,2.305,1048,1.601,1049,1.601,1050,1.425,1051,1.425,1052,1.425]],["title/modules/MockModule.html",[129,1.204,146,2.319]],["body/modules/MockModule.html",[3,0.245,4,0.214,5,0.214,17,0.02,32,0.51,34,0.447,40,0.245,41,0.124,45,1.25,52,0.013,53,0.016,54,0.013,131,1.98,133,2.82,135,2.82,146,3.957,154,2.339,158,2.837,172,2.82,173,2.339,174,2.641,235,3.957,321,4.304,322,3.957,323,3.263,1044,4.304,1053,3.908,1054,5.118,1055,4.739]],["title/components/NavbarComponent.html",[55,0.317,114,0.935]],["body/components/NavbarComponent.html",[3,0.135,4,0.118,5,0.118,7,0.331,8,0.919,10,0.727,12,2.871,13,2.946,14,1.027,16,0.657,17,0.02,18,0.7,19,0.772,20,0.657,27,1.09,30,3.003,32,0.446,34,0.247,35,0.936,37,1.672,40,0.135,41,0.069,43,1.095,44,0.986,46,3.427,47,2.427,51,2.35,52,0.007,53,0.011,54,0.007,55,0.507,56,0.691,57,1.245,58,0.89,59,0.89,60,0.89,62,1.126,65,1.528,66,0.804,67,0.89,68,0.89,69,2.266,70,2.048,71,1.31,73,1.07,74,1.038,75,1.378,76,1.31,77,1.528,79,1.038,80,1.451,82,3.18,84,0.657,85,1.31,86,1.245,87,0.89,88,1.714,89,0.89,90,1.31,91,0.727,92,0.89,93,0.691,94,1.31,95,0.691,96,1.31,97,0.691,98,0.624,99,0.727,100,0.846,101,0.89,102,0.727,103,0.89,104,0.727,105,0.89,106,0.691,107,1.126,108,0.691,109,0.727,110,0.89,111,0.89,112,0.691,113,0.89,114,1.401,115,0.89,116,0.691,117,0.89,118,0.691,119,0.89,120,0.727,121,0.89,122,0.691,123,0.727,124,0.89,125,0.89,210,2.133,224,2.92,247,5.21,258,1.912,279,2.427,283,3.571,299,1.804,327,1.804,579,2.161,771,2.427,783,3.571,795,2.161,810,2.427,820,2.161,822,2.427,823,2.427,824,2.427,826,2.427,829,2.427,833,4.238,834,3.571,912,2.427,920,3.571,1056,2.427,1057,5.451,1058,4.942,1059,4.165,1060,4.942,1061,4.942,1062,5.451,1063,5.451,1064,4.165,1065,2.83,1066,2.83,1067,4.165,1068,2.83,1069,2.83,1070,2.83,1071,2.83,1072,2.83,1073,2.83,1074,2.83,1075,2.83,1076,2.83,1077,4.942,1078,4.165,1079,4.165,1080,4.165,1081,4.165,1082,4.165,1083,4.165,1084,4.165,1085,4.165,1086,5.451,1087,2.83,1088,2.83,1089,3.571,1090,2.83,1091,2.83,1092,2.83,1093,2.83,1094,2.83,1095,2.83,1096,2.83,1097,2.83,1098,2.83,1099,2.83,1100,2.83]],["title/components/PageNotFoundComponent.html",[55,0.317,116,0.889]],["body/components/PageNotFoundComponent.html",[3,0.19,4,0.166,5,0.166,17,0.02,18,0.748,32,0.388,34,0.347,40,0.19,41,0.096,52,0.01,53,0.014,54,0.01,55,0.575,56,0.97,57,1.579,58,1.249,59,1.249,60,1.249,62,1.428,65,1.457,66,1.129,67,2.207,68,1.249,69,2.357,70,2.13,71,1.661,74,1.457,77,1.938,79,1.457,80,1.384,84,0.922,85,1.661,86,1.579,87,1.249,88,1.989,89,1.249,90,1.661,91,1.021,92,1.249,93,0.97,94,1.661,95,0.97,96,1.661,97,0.97,98,0.876,99,1.021,100,1.187,101,1.249,102,1.021,103,1.249,104,1.021,105,1.249,106,0.97,107,1.428,108,0.97,109,1.021,110,1.249,111,1.249,112,0.97,113,1.249,114,1.021,115,1.249,116,1.546,117,1.249,118,0.97,119,1.249,120,1.021,121,1.249,122,0.97,123,1.021,124,1.249,125,1.249,197,2.754,820,3.033,1101,3.406,1102,3.406,1103,6.326,1104,5.283,1105,3.972,1106,5.283]],["title/modules/PagesModule.html",[129,1.204,147,2.319]],["body/modules/PagesModule.html",[3,0.168,4,0.146,5,0.146,17,0.02,32,0.545,34,0.306,35,1.16,40,0.168,41,0.085,52,0.009,53,0.013,54,0.009,84,0.814,93,1.634,95,1.594,99,1.677,106,1.634,108,1.594,118,1.541,122,1.541,129,1.16,131,1.356,132,1.809,133,3.066,134,2.504,135,1.931,136,1.602,144,4.09,147,4.777,148,3.855,149,3.756,150,2.867,151,1.931,152,2.071,154,2.218,158,2.218,159,3.365,162,3.365,163,3.006,166,3.006,167,2.677,172,1.931,176,3.006,195,3.83,235,4.021,581,2.677,651,2.677,653,2.234,654,2.431,753,4.161,754,3.006,845,3.365,855,2.431,1107,3.006,1108,3.006,1109,3.505,1110,3.505,1111,3.505,1112,3.505,1113,4.161,1114,6.008,1115,4.161,1116,3.006,1117,3.006,1118,3.006,1119,3.505,1120,3.505,1121,4.853,1122,4.853,1123,3.006,1124,4.853,1125,3.505,1126,3.006,1127,3.505]],["title/modules/PagesRoutingModule.html",[129,1.204,148,2.149]],["body/modules/PagesRoutingModule.html",[1,3.992,3,0.212,4,0.185,5,0.185,9,4.84,17,0.02,32,0.533,34,0.387,35,1.468,40,0.212,41,0.108,45,1.084,52,0.012,53,0.015,54,0.012,55,0.609,93,1.387,95,1.387,100,1.698,106,1.387,107,1.535,108,1.387,118,1.387,122,1.387,123,1.14,131,1.717,136,2.028,148,3.355,154,2.028,158,2.595,193,3.077,194,3.45,195,3.62,199,4.84,220,4.524,241,3.388,349,2.197,375,1.812,758,3.805,845,3.077,855,3.077,1113,3.805,1115,4.869,1116,3.805,1117,3.805,1118,3.805,1123,3.805,1126,3.805,1128,4.438]],["title/classes/Project.html",[41,0.088,392,1.485]],["body/classes/Project.html",[3,0.231,4,0.202,5,0.202,7,0.565,14,1.153,17,0.019,18,0.923,19,1.024,40,0.231,41,0.117,52,0.013,53,0.016,54,0.013,65,2.389,73,1.539,181,2.853,211,2.748,215,4.154,336,4.972,392,2.446,776,5.583,1129,4.141,1130,6.511,1131,6.511,1132,6.511,1133,4.83,1134,4.83,1135,4.83,1136,4.83,1137,4.83,1138,4.83,1139,4.83]],["title/injectables/ProjectService.html",[33,1.087,384,1.877]],["body/injectables/ProjectService.html",[3,0.205,4,0.179,5,0.179,7,0.501,8,1.224,10,1.101,14,0.982,16,0.994,17,0.02,18,0.607,19,0.607,20,0.994,27,1.224,28,2.814,29,3.279,32,0.508,33,1.659,34,0.374,36,1.849,38,2.077,39,1.849,40,0.205,41,0.104,43,1.657,44,2.269,45,1.046,48,1.664,52,0.011,53,0.014,54,0.011,65,1.572,173,1.957,174,2.21,238,1.957,242,2.36,252,2.73,253,4.153,255,3.058,342,3.058,343,2.658,346,3.038,352,2.21,356,1.849,358,2.97,365,2.97,366,2.97,367,2.97,368,2.97,369,2.97,375,2.267,384,2.864,392,2.66,403,2.531,1140,3.673,1141,6.515,1142,6.515,1143,4.283,1144,4.283,1145,4.283,1146,4.283,1147,4.283,1148,4.283,1149,4.283,1150,4.283,1151,4.283,1152,4.283]],["title/components/ProjectsComponent.html",[55,0.317,118,0.889]],["body/components/ProjectsComponent.html",[3,0.148,4,0.129,5,0.129,7,0.361,8,0.979,10,0.793,14,1.029,16,1.03,17,0.02,18,0.805,19,0.629,20,1.03,27,1.146,32,0.417,34,0.269,40,0.148,41,0.075,42,1.628,43,1.194,48,1.199,49,1.546,51,1.194,52,0.008,53,0.012,54,0.008,55,0.525,56,0.754,57,1.326,58,0.971,59,0.971,60,0.971,62,1.199,65,1.133,66,0.878,67,0.971,68,0.971,69,2.292,70,2.071,71,1.395,73,1.14,74,1.906,75,1.468,76,1.395,77,1.906,79,1.133,80,1.075,84,0.717,85,1.395,86,1.326,87,0.971,88,1.786,89,0.971,90,1.395,91,0.793,92,0.971,93,0.754,94,1.395,95,0.754,96,1.395,97,0.754,98,0.681,99,0.793,100,0.923,101,0.971,102,0.793,103,0.971,104,0.793,105,0.971,106,0.754,107,1.535,108,0.754,109,0.793,110,0.971,111,0.971,112,0.754,113,0.971,114,0.793,115,0.971,116,0.754,117,0.971,118,1.387,119,0.971,120,0.793,121,0.971,122,0.754,123,0.793,124,0.971,125,0.971,258,2.009,343,2.242,356,1.333,371,2.519,373,2.861,374,2.289,375,2.821,378,2.622,379,3.355,380,2.754,384,3.231,392,2.319,403,1.824,404,1.968,409,2.828,413,1.968,417,1.701,420,2.444,422,2.444,527,2.647,1153,2.647,1154,4.437,1155,4.437,1156,4.437,1157,3.088,1158,3.088,1159,3.088,1160,3.088,1161,3.088,1162,3.088,1163,4.437,1164,4.437,1165,4.437,1166,4.437,1167,4.437,1168,4.437,1169,4.437]],["title/modules/SharedModule.html",[129,1.204,149,2.004]],["body/modules/SharedModule.html",[3,0.194,4,0.169,5,0.169,17,0.02,32,0.524,34,0.354,40,0.194,41,0.098,49,1.865,52,0.011,53,0.014,54,0.011,84,0.941,102,1.878,120,1.878,129,1.341,131,1.568,132,2.092,133,3.303,134,2.763,135,3.303,136,2.74,149,4.068,150,3.164,151,2.233,152,2.395,154,1.853,158,2.447,162,3.713,172,2.233,177,3.713,235,3.413,238,1.853,653,2.584,654,2.811,744,3.095,761,3.095,791,4.342,875,4.342,926,4.578,1051,4.088,1052,4.088,1170,3.476,1171,3.476,1172,3.476,1173,3.476,1174,4.054,1175,5.355,1176,4.054,1177,4.054,1178,4.054,1179,4.054,1180,4.054]],["title/components/ToastComponent.html",[55,0.317,120,0.935]],["body/components/ToastComponent.html",[3,0.178,4,0.156,5,0.156,7,0.437,8,1.117,10,0.959,14,0.917,16,1.176,17,0.02,18,0.874,19,0.718,20,1.176,27,0.823,30,2.055,32,0.372,34,0.326,40,0.178,41,0.091,48,1.008,49,1.3,52,0.01,53,0.013,54,0.01,55,0.502,56,0.912,57,1.514,58,1.173,59,1.173,60,1.173,62,1.369,66,1.061,67,1.173,68,1.173,69,2.342,70,2.117,71,1.593,73,1.302,84,0.866,85,1.593,86,1.514,87,1.173,88,1.939,89,1.173,90,1.593,91,0.959,92,1.173,93,0.912,94,1.593,95,0.912,96,1.593,97,0.912,98,0.823,99,0.959,100,1.115,101,1.173,102,0.959,103,1.173,104,0.959,105,1.173,106,0.912,107,1.369,108,0.912,109,0.959,110,1.173,111,1.173,112,0.912,113,1.173,114,0.959,115,1.173,116,0.912,117,1.173,118,0.912,119,1.173,120,1.585,121,1.173,122,0.912,123,0.959,124,1.173,125,1.173,244,4.343,346,3.028,352,1.925,354,2.849,1181,3.199,1182,5.065,1183,4.931,1184,5.065,1185,5.065,1186,3.731,1187,3.731,1188,5.065,1189,3.731,1190,3.731,1191,4.343,1192,3.731,1193,3.731,1194,5.751,1195,3.731]],["title/injectables/ToastService.html",[33,1.087,346,1.57]],["body/injectables/ToastService.html",[3,0.23,4,0.145,5,0.145,7,0.406,8,1.062,14,1.002,16,1.388,17,0.02,18,0.847,19,0.847,20,1.388,27,1.319,32,0.255,33,1.44,34,0.303,38,1.682,39,1.497,40,0.166,41,0.084,49,2.189,52,0.009,53,0.013,54,0.009,65,1.273,73,1.238,75,1.979,76,1.88,211,2.534,242,1.911,258,2.314,342,2.654,346,2.079,354,4.566,602,4.131,927,5.388,1031,4.746,1089,5.388,1183,4.746,1191,5.128,1196,2.974,1197,4.817,1198,5.535,1199,4.817,1200,4.817,1201,3.468,1202,4.817,1203,5.98,1204,3.468,1205,4.817,1206,3.468,1207,6.801,1208,5.128,1209,3.468,1210,6.284,1211,6.284,1212,4.817,1213,6.284,1214,5.98,1215,6.284,1216,4.817,1217,3.468,1218,4.817,1219,3.468,1220,3.468,1221,3.468,1222,3.468,1223,3.468,1224,4.817,1225,3.468,1226,3.468,1227,3.468]],["title/classes/User.html",[41,0.088,210,1.57]],["body/classes/User.html",[3,0.259,4,0.227,5,0.227,7,0.635,14,1.025,17,0.019,18,0.971,19,0.911,40,0.259,41,0.132,52,0.014,53,0.017,54,0.014,73,1.652,181,3.207,210,2.775,211,2.599,336,5.231,1228,4.655,1229,5.429,1230,5.429]],["title/injectables/UserService.html",[33,1.087,528,2.319]],["body/injectables/UserService.html",[3,0.199,4,0.173,5,0.173,7,0.487,8,1.2,10,1.068,14,0.968,16,1.409,17,0.02,18,0.86,19,0.589,20,1.409,27,1.2,28,2.774,29,3.216,32,0.504,33,1.627,34,0.363,36,1.794,38,2.016,39,1.794,40,0.199,41,0.101,43,1.608,44,2.243,45,1.015,48,1.641,52,0.011,53,0.014,54,0.016,65,1.525,173,1.9,174,2.145,210,2.78,238,1.9,242,2.29,252,2.65,253,4.105,255,2.999,342,2.999,343,2.62,346,3.016,352,2.145,356,1.794,358,2.882,365,2.882,366,2.882,367,2.882,368,2.882,369,2.882,374,3.132,392,1.697,415,3.174,528,3.47,556,3.174,1005,4.667,1231,3.564,1232,5.443,1233,5.443,1234,4.157,1235,4.157,1236,5.443,1237,4.157,1238,4.157,1239,4.157,1240,4.157,1241,4.157,1242,4.157,1243,4.157]],["title/components/UsersComponent.html",[55,0.317,122,0.889]],["body/components/UsersComponent.html",[3,0.106,4,0.093,5,0.093,7,0.26,8,0.764,10,0.89,12,2.64,14,1.093,16,1.117,17,0.02,18,0.847,19,0.682,20,1.117,27,1.354,32,0.451,34,0.194,35,0.734,40,0.106,41,0.054,42,1.27,44,1.817,45,1.175,48,1.615,49,1.483,51,0.858,52,0.006,53,0.009,54,0.006,55,0.455,56,0.542,57,1.035,58,0.697,59,0.697,60,0.697,62,0.936,65,0.814,66,0.63,67,0.697,68,0.697,69,2.185,70,1.975,71,1.089,73,0.89,74,1.562,75,1.145,76,1.089,77,1.562,79,0.814,80,0.773,84,0.515,85,1.089,86,1.035,87,0.697,88,1.513,89,0.697,90,1.089,91,0.57,92,0.697,93,0.542,94,1.089,95,0.542,96,1.089,97,0.542,98,0.489,99,0.57,100,0.663,101,0.697,102,0.57,103,0.697,104,0.57,105,0.697,106,0.542,107,1.3,108,0.542,109,0.57,110,0.697,111,0.697,112,0.542,113,0.697,114,0.57,115,0.697,116,0.542,117,0.697,118,0.542,119,0.697,120,0.57,121,0.697,122,1.175,123,1.713,124,0.697,125,0.697,210,2.077,211,0.814,227,2.482,258,2.019,333,2.385,335,1.838,340,2.801,343,2.387,349,2.376,351,1.222,356,1.838,371,2.065,373,2.346,374,2.197,375,2.564,376,3.067,377,3.067,378,2.045,379,2.843,380,2.333,381,2.401,384,2.98,385,3.182,389,2.045,392,2.358,403,1.31,404,1.414,405,1.31,407,4.005,408,1.538,409,2.207,410,1.538,412,2.207,413,1.414,417,1.907,418,2.045,419,1.31,420,1.907,422,1.907,434,3.067,435,2.401,445,2.401,447,2.045,448,2.643,455,3.834,456,1.538,457,1.538,458,1.538,459,3.336,460,2.643,461,1.694,463,1.538,464,1.538,471,2.65,493,2.643,528,3.525,555,1.902,556,1.694,563,2.968,566,1.902,567,1.902,1244,1.902,1245,3.462,1246,4.811,1247,2.218,1248,3.462,1249,2.218,1250,2.218,1251,2.218,1252,3.462,1253,2.218,1254,2.218,1255,2.218,1256,2.218,1257,2.218,1258,2.218,1259,2.218,1260,2.218,1261,2.218,1262,2.218,1263,2.218,1264,2.218,1265,2.218,1266,4.258,1267,3.462,1268,3.462,1269,3.462,1270,3.462]],["title/coverage.html",[1271,4.269]],["body/coverage.html",[0,3.285,1,1.885,5,0.123,6,2.536,13,1.434,17,0.02,19,0.419,33,1.845,41,0.144,52,0.008,53,0.011,54,0.008,55,0.627,56,0.723,61,2.536,62,1.504,63,2.051,64,3.285,91,0.76,93,0.723,95,0.723,97,0.723,98,0.652,99,0.76,102,0.76,104,0.76,106,0.723,108,0.723,109,0.76,112,0.723,114,0.76,116,0.723,118,0.723,120,0.76,122,0.723,123,0.76,126,2.536,173,2.703,180,2.258,182,2.536,197,2.051,205,3.231,206,2.051,208,3.285,210,1.857,212,1.885,220,1.885,221,2.536,243,2.536,281,2.051,333,1.352,334,2.536,340,1.434,341,2.536,346,1.277,349,1.144,370,2.536,375,1.208,384,1.526,392,1.208,424,2.536,432,2.536,433,2.051,437,1.747,471,1.629,473,2.536,506,6.476,519,2.536,528,1.885,580,2.536,581,2.258,582,2.536,583,2.536,750,2.258,760,2.536,761,2.258,762,2.536,790,3.515,791,1.885,793,2.536,816,2.536,828,4.773,844,3.285,845,2.051,846,2.536,855,2.051,856,2.536,875,1.885,876,2.536,887,2.536,888,2.536,901,2.536,922,2.051,923,3.871,932,2.258,1026,6.041,1044,2.051,1053,2.258,1055,2.258,1056,2.536,1101,2.536,1102,2.536,1129,2.536,1140,2.536,1153,2.536,1181,2.536,1196,2.536,1228,2.536,1231,2.536,1244,2.536,1271,2.536,1272,2.958,1273,2.958,1274,2.958,1275,6.369,1276,7.096,1277,2.958,1278,4.302,1279,2.958,1280,5.069,1281,2.958,1282,2.958,1283,2.958,1284,4.302,1285,4.302,1286,2.958,1287,2.958,1288,5.071,1289,5.071,1290,2.958,1291,2.958,1292,2.958,1293,2.958,1294,2.958,1295,2.958,1296,2.958,1297,2.958,1298,2.536,1299,2.958,1300,2.958,1301,2.958,1302,2.958,1303,2.958,1304,4.302,1305,4.302,1306,2.958,1307,2.958,1308,2.958,1309,2.536,1310,2.536,1311,2.536,1312,2.536,1313,2.536,1314,3.688,1315,2.536,1316,2.536,1317,2.958]],["title/dependencies.html",[132,2.259,1318,3.031]],["body/dependencies.html",[17,0.02,34,0.442,35,1.676,36,2.186,52,0.013,53,0.016,54,0.013,132,2.614,134,3.182,156,5.289,157,4.277,172,2.791,274,4.344,275,4.344,651,3.868,653,3.229,654,3.513,744,3.868,1319,5.066,1320,7.371,1321,5.066,1322,6.168,1323,5.066,1324,5.066,1325,5.066,1326,5.066,1327,5.066,1328,5.066,1329,5.066,1330,5.066,1331,5.066,1332,5.066,1333,5.066,1334,5.066]],["title/miscellaneous/enumerations.html",[1335,2.102,1336,3.755]],["body/miscellaneous/enumerations.html",[7,0.675,17,0.018,52,0.015,53,0.017,54,0.015,76,1.812,277,4.617,1335,3.996,1336,4.941,1337,5.763,1338,5.763,1339,5.763,1340,5.763]],["title/index.html",[7,0.355,1341,3.031,1342,3.031]],["body/index.html",[4,0.271,17,0.015,52,0.012,53,0.015,54,0.012,66,1.692,70,1.984,98,1.055,201,4.495,322,4.132,323,4.132,392,1.953,653,3.049,705,4.95,1047,4.546,1050,3.652,1343,4.783,1344,4.783,1345,4.783,1346,4.783,1347,5.954,1348,4.783,1349,6.784,1350,7.115,1351,6.483,1352,5.559,1353,6.483,1354,6.483,1355,6.483,1356,6.483,1357,6.483,1358,5.954,1359,4.783,1360,4.783,1361,4.783,1362,4.783,1363,4.783,1364,4.783,1365,4.783,1366,4.783,1367,4.783,1368,4.783,1369,4.783,1370,4.783,1371,4.783]],["title/modules.html",[131,1.926]],["body/modules.html",[17,0.016,52,0.014,53,0.016,54,0.014,130,3.625,131,2.022,141,3.332,142,3.332,143,3.088,144,3.088,145,3.088,146,3.332,147,3.332,148,3.088,149,2.88,157,4.962,1372,7.156,1373,7.156,1374,7.502,1375,7.156,1376,7.156]],["title/overview.html",[1377,4.269]],["body/overview.html",[2,2.47,17,0.02,52,0.008,53,0.012,54,0.008,56,1.302,57,0.967,84,0.751,91,1.681,93,1.302,95,1.302,97,1.302,99,1.37,102,1.681,104,1.681,106,1.302,108,1.302,109,1.681,112,1.598,114,1.681,116,1.302,118,1.302,120,1.681,122,1.302,129,1.07,130,5.145,131,1.251,132,1.669,133,1.782,134,1.669,135,1.782,136,1.478,137,2.774,138,2.774,139,2.774,140,2.774,141,3.398,142,4.26,143,3.427,144,4.384,145,3.427,146,3.398,147,4.73,148,3.427,149,3.963,150,2.71,151,1.782,152,1.911,181,1.911,194,1.782,207,2.47,230,2.774,231,2.774,233,2.774,242,1.782,738,2.774,739,2.774,741,2.774,791,3.398,875,3.398,1042,2.774,1107,2.774,1108,2.774,1170,2.774,1171,2.774,1172,2.774,1173,2.774,1298,2.774,1377,2.774,1378,3.235,1379,3.235,1380,3.235,1381,3.235,1382,3.235]],["title/routes.html",[194,2.742]],["body/routes.html",[17,0.018,52,0.015,53,0.018,54,0.015,194,3.27]],["title/miscellaneous/variables.html",[1335,2.102,1383,3.755]],["body/miscellaneous/variables.html",[7,0.403,17,0.02,19,0.919,49,1.921,51,2.133,52,0.009,53,0.012,54,0.009,75,2.355,76,2.238,123,1.232,173,3.191,177,2.388,209,3.324,255,1.897,321,3.324,322,3.801,323,3.056,324,3.324,325,2.832,326,3.324,327,3.056,328,3.324,335,2.573,342,1.897,349,1.855,375,1.957,471,2.641,909,3.66,922,2.388,923,2.63,926,2.63,932,3.66,1044,3.824,1045,2.953,1046,2.953,1047,3.66,1048,2.953,1049,2.953,1050,2.63,1051,2.63,1052,2.63,1053,2.63,1055,3.66,1208,5.374,1288,2.953,1289,2.953,1309,2.953,1310,4.111,1311,2.953,1312,2.953,1313,2.953,1314,2.953,1315,4.111,1316,4.111,1335,2.388,1352,2.953,1383,2.953,1384,6.268,1385,4.794,1386,3.444,1387,3.444,1388,3.444,1389,3.444,1390,4.794,1391,3.444,1392,3.444,1393,3.444,1394,3.444,1395,3.444,1396,3.444,1397,3.444,1398,3.444,1399,5.962,1400,5.962,1401,4.794,1402,5.514,1403,5.962,1404,4.794,1405,5.962,1406,5.962,1407,4.794,1408,4.794,1409,3.444,1410,4.794,1411,3.444,1412,3.444,1413,3.444,1414,3.444,1415,3.444,1416,3.444,1417,3.444,1418,4.794,1419,3.444,1420,3.444,1421,3.444,1422,4.794,1423,3.444,1424,3.444,1425,3.444,1426,3.444]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponse.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Client.html":{},"injectables/ClientService.html":{},"components/ClientsComponent.html":{},"classes/Config.html":{},"components/ConfigSelectionPageComponent.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"modules/CoreModule.html":{},"modules/CoreRoutingModule.html":{},"components/DropDownComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{},"modules/MockModule.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"classes/Project.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"modules/SharedModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":506,"title":{},"body":{"injectables/ConfigService.html":{},"coverage.html":{}}}],["0.8em",{"_index":835,"title":{},"body":{"components/FooterComponent.html":{}}}],["0.9.1",{"_index":1334,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1276,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1295,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1291,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1283,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1290,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":1292,"title":{},"body":{"coverage.html":{}}}],["0/25",{"_index":1293,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1275,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1280,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1285,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1277,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1278,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1300,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1294,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":809,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/MockInterceptor.html":{}}}],["1.10.0",{"_index":1332,"title":{},"body":{"dependencies.html":{}}}],["1.1rem",{"_index":1098,"title":{},"body":{"components/NavbarComponent.html":{}}}],["1.25rem",{"_index":1096,"title":{},"body":{"components/NavbarComponent.html":{}}}],["1/1",{"_index":1284,"title":{},"body":{"coverage.html":{}}}],["1/18",{"_index":1299,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1282,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1305,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1308,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":1297,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":1303,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1378,"title":{},"body":{"overview.html":{}}}],["100",{"_index":828,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["11",{"_index":1302,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":1296,"title":{},"body":{"coverage.html":{}}}],["12346",{"_index":1409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16",{"_index":1307,"title":{},"body":{"coverage.html":{}}}],["17",{"_index":1379,"title":{},"body":{"overview.html":{}}}],["1em",{"_index":832,"title":{},"body":{"components/FooterComponent.html":{}}}],["1px",{"_index":843,"title":{},"body":{"components/FooterComponent.html":{}}}],["1rem",{"_index":1095,"title":{},"body":{"components/NavbarComponent.html":{}}}],["2",{"_index":1381,"title":{},"body":{"overview.html":{}}}],["2.0.8",{"_index":1328,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":1329,"title":{},"body":{"dependencies.html":{}}}],["2/9",{"_index":1287,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":1030,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["2000",{"_index":1214,"title":{},"body":{"injectables/ToastService.html":{}}}],["22",{"_index":1286,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":1304,"title":{},"body":{"coverage.html":{}}}],["2k1yo1ibbjgb_o6xdiiag",{"_index":1416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":1042,"title":{},"body":{"interceptors/MockInterceptor.html":{},"overview.html":{}}}],["3.75em",{"_index":830,"title":{},"body":{"components/FooterComponent.html":{}}}],["3000",{"_index":1227,"title":{},"body":{"injectables/ToastService.html":{}}}],["4.4.1",{"_index":1326,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1301,"title":{},"body":{"coverage.html":{}}}],["401",{"_index":807,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/MockInterceptor.html":{}}}],["403].indexof(err.status",{"_index":808,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["5",{"_index":1298,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["5.2.1",{"_index":1325,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":1281,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":1380,"title":{},"body":{"overview.html":{}}}],["6.4.0",{"_index":1330,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":1306,"title":{},"body":{"coverage.html":{}}}],["8.2.14",{"_index":1320,"title":{},"body":{"dependencies.html":{}}}],["8.2.3",{"_index":1322,"title":{},"body":{"dependencies.html":{}}}],["8.3.24",{"_index":1348,"title":{},"body":{"index.html":{}}}],["84936",{"_index":1413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9",{"_index":1382,"title":{},"body":{"overview.html":{}}}],["9_",{"_index":954,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["__",{"_index":74,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/UsersComponent.html":{}}}],["__.allprojects",{"_index":83,"title":{},"body":{"components/AdminSelectionPageComponent.html":{}}}],["__.appconfig",{"_index":1079,"title":{},"body":{"components/NavbarComponent.html":{}}}],["__.application",{"_index":466,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{}}}],["__.cancel",{"_index":732,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["__.configurations",{"_index":467,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/GlobalConfigsComponent.html":{}}}],["__.defaultvalue",{"_index":727,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["__.footer",{"_index":821,"title":{},"body":{"components/FooterComponent.html":{}}}],["__.globalapplications",{"_index":854,"title":{},"body":{"components/GlobalClientsComponent.html":{}}}],["__.globalconfigurations",{"_index":82,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/NavbarComponent.html":{}}}],["__.loading",{"_index":422,"title":{},"body":{"components/ClientsComponent.html":{},"components/ConfigsComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LoginComponent.html":{},"components/ProjectsComponent.html":{},"components/UsersComponent.html":{}}}],["__.location",{"_index":1168,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["__.login",{"_index":920,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["__.loginwithmanagementportaladmin",{"_index":921,"title":{},"body":{"components/LoginComponent.html":{}}}],["__.logout",{"_index":1084,"title":{},"body":{"components/NavbarComponent.html":{}}}],["__.name",{"_index":725,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["__.organization",{"_index":1166,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["__.pagenotfound",{"_index":1106,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["__.project",{"_index":465,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{}}}],["__.projects",{"_index":1081,"title":{},"body":{"components/NavbarComponent.html":{}}}],["__.publish",{"_index":730,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["__.radarbase",{"_index":1078,"title":{},"body":{"components/NavbarComponent.html":{}}}],["__.reset",{"_index":731,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["__.selectanapplication",{"_index":421,"title":{},"body":{"components/ClientsComponent.html":{},"components/GlobalClientsComponent.html":{}}}],["__.selectaproject",{"_index":1163,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["__.selectauser",{"_index":1268,"title":{},"body":{"components/UsersComponent.html":{}}}],["__.value",{"_index":726,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["_modalservice",{"_index":611,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["access_token",{"_index":213,"title":{},"body":{"interfaces/AuthData.html":{},"interfaces/AuthResponse.html":{}}}],["accessors",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{},"components/ConfigsTableComponent.html":{}}}],["activate",{"_index":707,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["activatedroute",{"_index":385,"title":{},"body":{"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LoginComponent.html":{},"components/UsersComponent.html":{}}}],["activatedroutesnapshot",{"_index":22,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["actual_component",{"_index":125,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{}}}],["add_circle{{__.addanamevalueconfiguration",{"_index":729,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["addconfig",{"_index":590,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["admin",{"_index":66,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"modules/CoreRoutingModule.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["adminguard",{"_index":1,"title":{"guards/AdminGuard.html":{}},"body":{"guards/AdminGuard.html":{},"modules/CoreRoutingModule.html":{},"modules/PagesRoutingModule.html":{},"coverage.html":{}}}],["adminselectionpagecomponent",{"_index":56,"title":{"components/AdminSelectionPageComponent.html":{}},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"modules/CoreModule.html":{},"modules/CoreRoutingModule.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["align",{"_index":1088,"title":{},"body":{"components/NavbarComponent.html":{}}}],["angular",{"_index":1345,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1319,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1321,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/MockModule.html":{},"modules/PagesModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":238,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/ClientService.html":{},"injectables/ConfigService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"interceptors/MockInterceptor.html":{},"injectables/ProjectService.html":{},"modules/SharedModule.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":1323,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":34,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/ClientService.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"modules/CoreModule.html":{},"modules/CoreRoutingModule.html":{},"components/DropDownComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{},"modules/MockModule.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"modules/SharedModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":651,"title":{},"body":{"components/ConfigsTableComponent.html":{},"modules/PagesModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":744,"title":{},"body":{"modules/CoreModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/material/button",{"_index":754,"title":{},"body":{"modules/CoreModule.html":{},"modules/PagesModule.html":{}}}],["angular/material/icon",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"modules/PagesModule.html":{}}}],["angular/platform",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":35,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthRoutingModule.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"modules/CoreRoutingModule.html":{},"components/GlobalConfigsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/UsersComponent.html":{},"dependencies.html":{}}}],["api",{"_index":1426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":70,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["app.component",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":128,"title":{},"body":{"components/AppComponent.html":{}}}],["app/_models",{"_index":931,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["app/auth/auth",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["app/auth/containers/login/login.component",{"_index":240,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["app/auth/enums/roles.enum",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{}}}],["app/auth/helpers",{"_index":758,"title":{},"body":{"modules/CoreRoutingModule.html":{},"modules/PagesRoutingModule.html":{}}}],["app/auth/models/auth",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{}}}],["app/auth/models/user",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["app/auth/services/auth.service",{"_index":37,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["app/core/containers/admin",{"_index":756,"title":{},"body":{"modules/CoreRoutingModule.html":{}}}],["app/core/containers/config",{"_index":757,"title":{},"body":{"modules/CoreRoutingModule.html":{}}}],["app/core/containers/page",{"_index":196,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["app/core/core",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{}}}],["app/core/core.module",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"modules/PagesModule.html":{}}}],["app/mock/mock.module",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["app/mock/services/mock.service",{"_index":1054,"title":{},"body":{"modules/MockModule.html":{}}}],["app/pages/containers/clients/clients.component",{"_index":1116,"title":{},"body":{"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{}}}],["app/pages/containers/configs",{"_index":1119,"title":{},"body":{"modules/PagesModule.html":{}}}],["app/pages/containers/configs/configs.component",{"_index":1117,"title":{},"body":{"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{}}}],["app/pages/containers/global",{"_index":1115,"title":{},"body":{"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{}}}],["app/pages/containers/projects/projects.component",{"_index":1123,"title":{},"body":{"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{}}}],["app/pages/containers/users/users.component",{"_index":1126,"title":{},"body":{"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{}}}],["app/pages/models/client",{"_index":351,"title":{},"body":{"injectables/ClientService.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/UsersComponent.html":{}}}],["app/pages/models/config",{"_index":497,"title":{},"body":{"injectables/ConfigService.html":{}}}],["app/pages/models/project",{"_index":403,"title":{},"body":{"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/UsersComponent.html":{}}}],["app/pages/models/user",{"_index":556,"title":{},"body":{"components/ConfigsComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["app/pages/pages",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"modules/PagesModule.html":{}}}],["app/pages/pages.module",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["app/pages/project/project",{"_index":1125,"title":{},"body":{"modules/PagesModule.html":{}}}],["app/pages/services/client.service",{"_index":405,"title":{},"body":{"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/UsersComponent.html":{}}}],["app/pages/services/config.service",{"_index":454,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/GlobalConfigsComponent.html":{}}}],["app/pages/services/project.service",{"_index":404,"title":{},"body":{"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ProjectsComponent.html":{},"components/UsersComponent.html":{}}}],["app/pages/services/user.service",{"_index":555,"title":{},"body":{"components/ConfigsComponent.html":{},"components/UsersComponent.html":{}}}],["app/shared/helpers/error.interceptor",{"_index":1180,"title":{},"body":{"modules/SharedModule.html":{}}}],["app/shared/helpers/jwt.interceptor",{"_index":1179,"title":{},"body":{"modules/SharedModule.html":{}}}],["app/shared/services/toast.service",{"_index":352,"title":{},"body":{"injectables/ClientService.html":{},"components/ConfigSelectionPageComponent.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"components/GlobalConfigsComponent.html":{},"injectables/ProjectService.html":{},"components/ToastComponent.html":{},"injectables/UserService.html":{}}}],["app/shared/shared.module",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{}}}],["app_base_href",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["appcomponent",{"_index":91,"title":{"components/AppComponent.html":{}},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appconfig",{"_index":1343,"title":{},"body":{"index.html":{}}}],["appconfig_frontend",{"_index":1405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["append('client_id",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{}}}],["append('code",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{}}}],["append('grant_type",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{}}}],["append('redirect_uri",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{}}}],["application",{"_index":469,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{}}}],["application/json",{"_index":516,"title":{},"body":{"injectables/ConfigService.html":{}}}],["application/x",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{}}}],["applications",{"_index":464,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/UsersComponent.html":{}}}],["appmodule",{"_index":130,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":180,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["approutingmodule",{"_index":141,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appurl",{"_index":1401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["args",{"_index":1207,"title":{},"body":{"injectables/ToastService.html":{}}}],["arialabelledby",{"_index":681,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["array",{"_index":770,"title":{},"body":{"components/DropDownComponent.html":{}}}],["async",{"_index":343,"title":{},"body":{"injectables/ClientService.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["auth/auth.module",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["authapi",{"_index":1403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authcallback",{"_index":1406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authcode",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{}}}],["authdata",{"_index":206,"title":{"interfaces/AuthData.html":{}},"body":{"interfaces/AuthData.html":{},"interfaces/AuthResponse.html":{},"coverage.html":{}}}],["authenticationservice",{"_index":879,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["authguard",{"_index":220,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"modules/CoreRoutingModule.html":{},"modules/PagesRoutingModule.html":{},"coverage.html":{}}}],["authheader",{"_index":1032,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["authheader.startswith(`bearer",{"_index":1034,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["authmodule",{"_index":142,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authorization",{"_index":884,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["authorization_code",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{}}}],["authorize",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{}}}],["authorize?client_id=${environment.clientid}&response_type=code&redirect_uri=${environment.authcallback",{"_index":964,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["authresponse",{"_index":212,"title":{"interfaces/AuthResponse.html":{}},"body":{"interfaces/AuthData.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["authroutingmodule",{"_index":143,"title":{"modules/AuthRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["authservice",{"_index":13,"title":{"injectables/AuthService.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"coverage.html":{}}}],["autohide",{"_index":1215,"title":{},"body":{"injectables/ToastService.html":{}}}],["automatically",{"_index":1355,"title":{},"body":{"index.html":{}}}],["available",{"_index":1376,"title":{},"body":{"modules.html":{}}}],["await",{"_index":356,"title":{},"body":{"injectables/ClientService.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["b",{"_index":1022,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["backbutton",{"_index":891,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["backbuttonobject",{"_index":868,"title":{},"body":{"components/GlobalConfigsComponent.html":{}}}],["backdrop",{"_index":724,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["backend",{"_index":1047,"title":{},"body":{"interceptors/MockInterceptor.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["backendurl",{"_index":1422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["background",{"_index":836,"title":{},"body":{"components/FooterComponent.html":{}}}],["base",{"_index":1370,"title":{},"body":{"index.html":{}}}],["base/radar",{"_index":1364,"title":{},"body":{"index.html":{}}}],["baseurl",{"_index":1418,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basic",{"_index":682,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["bearer",{"_index":885,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["behaviorsubject",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{}}}],["behaviorsubject(json.parse(localstorage.getitem('currentuser",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{}}}],["bg",{"_index":1211,"title":{},"body":{"injectables/ToastService.html":{}}}],["body",{"_index":941,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["bold",{"_index":1100,"title":{},"body":{"components/NavbarComponent.html":{}}}],["boolean",{"_index":30,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/NavbarComponent.html":{},"components/ToastComponent.html":{}}}],["boolean(currentuser",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{}}}],["bootstrap",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"components/ConfigsTableComponent.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":654,"title":{},"body":{"components/ConfigsTableComponent.html":{},"modules/PagesModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["border",{"_index":839,"title":{},"body":{"components/FooterComponent.html":{}}}],["branding",{"_index":1087,"title":{},"body":{"components/NavbarComponent.html":{}}}],["browse",{"_index":1374,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get(browser.baseurl",{"_index":188,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/animations",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["c",{"_index":658,"title":{},"body":{"components/ConfigsTableComponent.html":{},"interceptors/MockInterceptor.html":{}}}],["c.clientid",{"_index":363,"title":{},"body":{"injectables/ClientService.html":{},"interceptors/MockInterceptor.html":{}}}],["c.default",{"_index":507,"title":{},"body":{"injectables/ConfigService.html":{},"components/ConfigsTableComponent.html":{}}}],["c.id",{"_index":361,"title":{},"body":{"injectables/ClientService.html":{}}}],["c.name",{"_index":362,"title":{},"body":{"injectables/ClientService.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/GlobalConfigsComponent.html":{}}}],["c.scope",{"_index":662,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["c.value",{"_index":572,"title":{},"body":{"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/GlobalConfigsComponent.html":{}}}],["canactivate",{"_index":9,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"modules/CoreRoutingModule.html":{},"modules/PagesRoutingModule.html":{}}}],["canactivate(route",{"_index":21,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["cancel",{"_index":702,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["case",{"_index":577,"title":{},"body":{"components/ConfigsComponent.html":{},"interceptors/MockInterceptor.html":{}}}],["catch(e",{"_index":366,"title":{},"body":{"injectables/ClientService.html":{},"injectables/ConfigService.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{}}}],["catcherror",{"_index":805,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["center",{"_index":826,"title":{},"body":{"components/FooterComponent.html":{},"components/NavbarComponent.html":{}}}],["change",{"_index":705,"title":{},"body":{"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"index.html":{}}}],["changed",{"_index":574,"title":{},"body":{"components/ConfigsComponent.html":{},"components/GlobalConfigsComponent.html":{}}}],["check",{"_index":710,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["class",{"_index":41,"title":{"classes/AppPage.html":{},"classes/Client.html":{},"classes/Config.html":{},"classes/Project.html":{},"classes/User.html":{}},"body":{"guards/AdminGuard.html":{},"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Client.html":{},"injectables/ClientService.html":{},"components/ClientsComponent.html":{},"classes/Config.html":{},"components/ConfigSelectionPageComponent.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"modules/CoreModule.html":{},"modules/CoreRoutingModule.html":{},"components/DropDownComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{},"modules/MockModule.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"classes/Project.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"modules/SharedModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["class.ngb",{"_index":1192,"title":{},"body":{"components/ToastComponent.html":{}}}],["classes",{"_index":181,"title":{},"body":{"classes/AppPage.html":{},"classes/Client.html":{},"classes/Config.html":{},"classes/Project.html":{},"classes/User.html":{},"overview.html":{}}}],["classname",{"_index":1210,"title":{},"body":{"injectables/ToastService.html":{}}}],["cli",{"_index":1346,"title":{},"body":{"index.html":{}}}],["click",{"_index":783,"title":{},"body":{"components/DropDownComponent.html":{},"components/NavbarComponent.html":{}}}],["clicking",{"_index":723,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["client",{"_index":333,"title":{"classes/Client.html":{}},"body":{"classes/Client.html":{},"injectables/ClientService.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["client.clientid",{"_index":423,"title":{},"body":{"components/ClientsComponent.html":{},"components/GlobalClientsComponent.html":{}}}],["clientid",{"_index":335,"title":{},"body":{"classes/Client.html":{},"components/ClientsComponent.html":{},"classes/Config.html":{},"components/ConfigSelectionPageComponent.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"interceptors/MockInterceptor.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["clientid).topromise",{"_index":512,"title":{},"body":{"injectables/ConfigService.html":{}}}],["clientid)[0",{"_index":1002,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["clientidfromurl",{"_index":1018,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["clients",{"_index":349,"title":{},"body":{"injectables/ClientService.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{},"modules/PagesRoutingModule.html":{},"components/UsersComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["clients'},{'name",{"_index":94,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{}}}],["clients.clients.filter(c",{"_index":1001,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["clients.component",{"_index":1113,"title":{},"body":{"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{}}}],["clients.component.html",{"_index":372,"title":{},"body":{"components/ClientsComponent.html":{},"components/GlobalClientsComponent.html":{}}}],["clients.component.scss",{"_index":406,"title":{},"body":{"components/ClientsComponent.html":{},"components/GlobalClientsComponent.html":{}}}],["clients.component.ts",{"_index":846,"title":{},"body":{"components/GlobalClientsComponent.html":{},"coverage.html":{}}}],["clients.component.ts:13",{"_index":852,"title":{},"body":{"components/GlobalClientsComponent.html":{}}}],["clients.component.ts:14",{"_index":853,"title":{},"body":{"components/GlobalClientsComponent.html":{}}}],["clients.component.ts:15",{"_index":847,"title":{},"body":{"components/GlobalClientsComponent.html":{}}}],["clients.component.ts:19",{"_index":850,"title":{},"body":{"components/GlobalClientsComponent.html":{}}}],["clients.component.ts:23",{"_index":851,"title":{},"body":{"components/GlobalClientsComponent.html":{}}}],["clients.component.ts:29",{"_index":849,"title":{},"body":{"components/GlobalClientsComponent.html":{}}}],["clients.component.ts:33",{"_index":848,"title":{},"body":{"components/GlobalClientsComponent.html":{}}}],["clients.foreach(c",{"_index":360,"title":{},"body":{"injectables/ClientService.html":{}}}],["clients/global",{"_index":845,"title":{},"body":{"components/GlobalClientsComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"coverage.html":{}}}],["clientscomponent",{"_index":93,"title":{"components/ClientsComponent.html":{}},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["clientservice",{"_index":340,"title":{"injectables/ClientService.html":{}},"body":{"injectables/ClientService.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["clientslist",{"_index":999,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["clientsofselectedproject",{"_index":996,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["clientsofselectedproject.map(clientid",{"_index":1000,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["closed",{"_index":718,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["closenavbar",{"_index":1062,"title":{},"body":{"components/NavbarComponent.html":{}}}],["cls",{"_index":1392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster_appmodule",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":230,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declarations",{"_index":231,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":233,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":232,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_coremodule",{"_index":738,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_declarations",{"_index":739,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_exports",{"_index":741,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":740,"title":{},"body":{"modules/CoreModule.html":{}}}],["cluster_pagesmodule",{"_index":1107,"title":{},"body":{"modules/PagesModule.html":{},"overview.html":{}}}],["cluster_pagesmodule_declarations",{"_index":1108,"title":{},"body":{"modules/PagesModule.html":{},"overview.html":{}}}],["cluster_pagesmodule_imports",{"_index":1109,"title":{},"body":{"modules/PagesModule.html":{}}}],["cluster_sharedmodule",{"_index":1170,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":1171,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":1172,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_providers",{"_index":1173,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["code",{"_index":909,"title":{},"body":{"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{},"miscellaneous/variables.html":{}}}],["color",{"_index":837,"title":{},"body":{"components/FooterComponent.html":{}}}],["color__accent_bg_semi_transparent",{"_index":841,"title":{},"body":{"components/FooterComponent.html":{}}}],["color__main_bg",{"_index":838,"title":{},"body":{"components/FooterComponent.html":{}}}],["commonmodule",{"_index":235,"title":{},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/MockModule.html":{},"modules/PagesModule.html":{},"modules/SharedModule.html":{}}}],["component",{"_index":55,"title":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{}},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"modules/CoreRoutingModule.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesRoutingModule.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":89,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{}}}],["components",{"_index":57,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{},"overview.html":{}}}],["components/drop",{"_index":1177,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/toast/toast.component",{"_index":1176,"title":{},"body":{"modules/SharedModule.html":{}}}],["config",{"_index":98,"title":{"classes/Config.html":{}},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"classes/Config.html":{},"components/ConfigSelectionPageComponent.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"modules/CoreRoutingModule.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"index.html":{}}}],["config#docker",{"_index":1365,"title":{},"body":{"index.html":{}}}],["config.foreach(c",{"_index":501,"title":{},"body":{"injectables/ConfigService.html":{}}}],["config\\/[a",{"_index":960,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["configform",{"_index":586,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["configobject",{"_index":604,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["configs",{"_index":100,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesRoutingModule.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{}}}],["configs'},{'name",{"_index":96,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{}}}],["configs.component",{"_index":1118,"title":{},"body":{"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{}}}],["configs.component.html",{"_index":520,"title":{},"body":{"components/ConfigsComponent.html":{},"components/GlobalConfigsComponent.html":{}}}],["configs.component.scss",{"_index":557,"title":{},"body":{"components/ConfigsComponent.html":{},"components/GlobalConfigsComponent.html":{}}}],["configs.component.ts",{"_index":856,"title":{},"body":{"components/GlobalConfigsComponent.html":{},"coverage.html":{}}}],["configs.component.ts:17",{"_index":864,"title":{},"body":{"components/GlobalConfigsComponent.html":{}}}],["configs.component.ts:19",{"_index":865,"title":{},"body":{"components/GlobalConfigsComponent.html":{}}}],["configs.component.ts:20",{"_index":867,"title":{},"body":{"components/GlobalConfigsComponent.html":{}}}],["configs.component.ts:21",{"_index":866,"title":{},"body":{"components/GlobalConfigsComponent.html":{}}}],["configs.component.ts:22",{"_index":857,"title":{},"body":{"components/GlobalConfigsComponent.html":{}}}],["configs.component.ts:32",{"_index":860,"title":{},"body":{"components/GlobalConfigsComponent.html":{}}}],["configs.component.ts:38",{"_index":858,"title":{},"body":{"components/GlobalConfigsComponent.html":{}}}],["configs.component.ts:44",{"_index":861,"title":{},"body":{"components/GlobalConfigsComponent.html":{}}}],["configs.component.ts:51",{"_index":863,"title":{},"body":{"components/GlobalConfigsComponent.html":{}}}],["configs.component.ts:57",{"_index":862,"title":{},"body":{"components/GlobalConfigsComponent.html":{}}}],["configs.component.ts:64",{"_index":859,"title":{},"body":{"components/GlobalConfigsComponent.html":{}}}],["configs/global",{"_index":855,"title":{},"body":{"components/GlobalConfigsComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"coverage.html":{}}}],["configscomponent",{"_index":95,"title":{"components/ConfigsComponent.html":{}},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["configselectionpagecomponent",{"_index":97,"title":{"components/ConfigSelectionPageComponent.html":{}},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"modules/CoreModule.html":{},"modules/CoreRoutingModule.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["configservice",{"_index":437,"title":{"injectables/ConfigService.html":{}},"body":{"components/ConfigSelectionPageComponent.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"components/GlobalConfigsComponent.html":{},"coverage.html":{}}}],["configstablecomponent",{"_index":99,"title":{"components/ConfigsTableComponent.html":{}},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["configstablecomponent.getdismissreason(reason",{"_index":686,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["configuration",{"_index":470,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{},"components/ConfigsTableComponent.html":{}}}],["configurations",{"_index":420,"title":{},"body":{"components/ClientsComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/ProjectsComponent.html":{},"components/UsersComponent.html":{}}}],["configvalue",{"_index":711,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["console.log(\"change",{"_index":869,"title":{},"body":{"components/GlobalConfigsComponent.html":{}}}],["console.log('cons",{"_index":558,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["console.log('onblur',event",{"_index":714,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["console.log(888",{"_index":975,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["console.log(`closed",{"_index":684,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["console.log(`dismissed",{"_index":685,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["console.log(clientslist",{"_index":1003,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["console.log(clientsofselectedproject",{"_index":998,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["console.log(configvalue",{"_index":713,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["console.log(d",{"_index":414,"title":{},"body":{"components/ClientsComponent.html":{}}}],["console.log(e",{"_index":368,"title":{},"body":{"injectables/ClientService.html":{},"injectables/ConfigService.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{}}}],["console.log(error",{"_index":918,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log(projectid",{"_index":992,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["console.log(selectedproject",{"_index":995,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["console.log(this.configform.value.config",{"_index":716,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["console.log(this.configobject",{"_index":715,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["console.log(this.global",{"_index":699,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["const",{"_index":45,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/ClientService.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"modules/CoreRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/GlobalConfigsComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{},"modules/MockModule.html":{},"modules/PagesRoutingModule.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["constructor",{"_index":10,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ClientService.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["constructor(authenticationservice",{"_index":877,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["constructor(authservice",{"_index":795,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["constructor(clientservice",{"_index":383,"title":{},"body":{"components/ClientsComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{}}}],["constructor(configservice",{"_index":436,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{}}}],["constructor(http",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ClientService.html":{},"injectables/ConfigService.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":43,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ClientService.html":{},"injectables/ConfigService.html":{},"components/ConfigsTableComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/GlobalClientsComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/NavbarComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"injectables/UserService.html":{}}}],["constructor(projectservice",{"_index":527,"title":{},"body":{"components/ConfigsComponent.html":{},"components/ProjectsComponent.html":{}}}],["constructor(public",{"_index":1193,"title":{},"body":{"components/ToastComponent.html":{}}}],["constructor(route",{"_index":608,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["constructor(router",{"_index":11,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["constructor(toastservice",{"_index":1186,"title":{},"body":{"components/ToastComponent.html":{}}}],["constructor(userservice",{"_index":1247,"title":{},"body":{"components/UsersComponent.html":{}}}],["container",{"_index":895,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["containers/admin",{"_index":747,"title":{},"body":{"modules/CoreModule.html":{}}}],["containers/clients/clients.component",{"_index":1111,"title":{},"body":{"modules/PagesModule.html":{}}}],["containers/config",{"_index":752,"title":{},"body":{"modules/CoreModule.html":{}}}],["containers/footer/footer.component",{"_index":745,"title":{},"body":{"modules/CoreModule.html":{}}}],["containers/global",{"_index":1112,"title":{},"body":{"modules/PagesModule.html":{}}}],["containers/left",{"_index":749,"title":{},"body":{"modules/CoreModule.html":{}}}],["containers/login/login.component",{"_index":236,"title":{},"body":{"modules/AuthModule.html":{}}}],["containers/navbar/navbar.component",{"_index":743,"title":{},"body":{"modules/CoreModule.html":{}}}],["containers/page",{"_index":746,"title":{},"body":{"modules/CoreModule.html":{}}}],["content",{"_index":190,"title":{},"body":{"classes/AppPage.html":{},"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"components/ConfigsTableComponent.html":{},"components/FooterComponent.html":{}}}],["context",{"_index":1315,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["control",{"_index":656,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["control.push(grp",{"_index":663,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["control.push(this.initialform",{"_index":664,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["control.removeat(index",{"_index":665,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["coremodule",{"_index":144,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules.html":{},"overview.html":{}}}],["coreroutingmodule",{"_index":145,"title":{"modules/CoreRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/CoreRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["coverage",{"_index":1271,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["current",{"_index":1080,"title":{},"body":{"components/NavbarComponent.html":{}}}],["currentdecodeduservalue",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["currentuser",{"_index":224,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{},"components/NavbarComponent.html":{}}}],["currentuser().role",{"_index":1036,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["currentuser.access_token",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/JwtInterceptor.html":{}}}],["currentuser.role",{"_index":915,"title":{},"body":{"components/LoginComponent.html":{}}}],["currentuser.username",{"_index":1083,"title":{},"body":{"components/NavbarComponent.html":{}}}],["currentusersubject",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{}}}],["currentuservalue",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{}}}],["d",{"_index":397,"title":{},"body":{"components/ClientsComponent.html":{},"interceptors/MockInterceptor.html":{}}}],["d.id",{"_index":1242,"title":{},"body":{"injectables/UserService.html":{}}}],["d.name",{"_index":415,"title":{},"body":{"components/ClientsComponent.html":{},"injectables/ConfigService.html":{},"injectables/UserService.html":{}}}],["d.scope",{"_index":504,"title":{},"body":{"injectables/ConfigService.html":{}}}],["danger",{"_index":1212,"title":{},"body":{"injectables/ToastService.html":{}}}],["data",{"_index":500,"title":{},"body":{"injectables/ConfigService.html":{},"components/DropDownComponent.html":{},"interceptors/MockInterceptor.html":{}}}],["data.clients",{"_index":359,"title":{},"body":{"injectables/ClientService.html":{}}}],["data.projects",{"_index":1148,"title":{},"body":{"injectables/ProjectService.html":{}}}],["data.users",{"_index":1240,"title":{},"body":{"injectables/UserService.html":{}}}],["data/index.ts",{"_index":1289,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["declarations",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/MockModule.html":{},"modules/PagesModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["decode",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["default",{"_index":75,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/ClientsComponent.html":{},"classes/Config.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{},"components/NavbarComponent.html":{},"components/ProjectsComponent.html":{},"injectables/ToastService.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":425,"title":{},"body":{"classes/Config.html":{},"injectables/ConfigService.html":{},"interceptors/MockInterceptor.html":{}}}],["defaults.filter(d",{"_index":503,"title":{},"body":{"injectables/ConfigService.html":{}}}],["defaultvalues",{"_index":502,"title":{},"body":{"injectables/ConfigService.html":{}}}],["defaultvalues.length",{"_index":505,"title":{},"body":{"injectables/ConfigService.html":{}}}],["defaultvalues[0].value",{"_index":508,"title":{},"body":{"injectables/ConfigService.html":{}}}],["defined",{"_index":14,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminSelectionPageComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Client.html":{},"injectables/ClientService.html":{},"components/ClientsComponent.html":{},"classes/Config.html":{},"components/ConfigSelectionPageComponent.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{},"components/NavbarComponent.html":{},"classes/Project.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["delay",{"_index":927,"title":{},"body":{"interceptors/MockInterceptor.html":{},"injectables/ToastService.html":{}}}],["delete",{"_index":697,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["dematerialize",{"_index":930,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["dependencies",{"_index":132,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":65,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"injectables/ClientService.html":{},"injectables/ConfigService.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Project.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"injectables/ToastService.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["dev",{"_index":1352,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["development",{"_index":1050,"title":{},"body":{"interceptors/MockInterceptor.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["directive",{"_index":87,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{}}}],["directives",{"_index":124,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{}}}],["dismissed",{"_index":688,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["display",{"_index":823,"title":{},"body":{"components/FooterComponent.html":{},"components/NavbarComponent.html":{}}}],["displayed",{"_index":774,"title":{},"body":{"components/DropDownComponent.html":{}}}],["documentation",{"_index":1272,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":59,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{}}}],["down.component",{"_index":1178,"title":{},"body":{"modules/SharedModule.html":{}}}],["down.component.html",{"_index":765,"title":{},"body":{"components/DropDownComponent.html":{}}}],["down.component.scss",{"_index":786,"title":{},"body":{"components/DropDownComponent.html":{}}}],["down.component.ts",{"_index":762,"title":{},"body":{"components/DropDownComponent.html":{},"coverage.html":{}}}],["down.component.ts:16",{"_index":769,"title":{},"body":{"components/DropDownComponent.html":{}}}],["down.component.ts:21",{"_index":778,"title":{},"body":{"components/DropDownComponent.html":{}}}],["down.component.ts:26",{"_index":777,"title":{},"body":{"components/DropDownComponent.html":{}}}],["down.component.ts:31",{"_index":772,"title":{},"body":{"components/DropDownComponent.html":{}}}],["down.component.ts:36",{"_index":779,"title":{},"body":{"components/DropDownComponent.html":{}}}],["down.component.ts:42",{"_index":782,"title":{},"body":{"components/DropDownComponent.html":{}}}],["down/drop",{"_index":761,"title":{},"body":{"components/DropDownComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["drop",{"_index":764,"title":{},"body":{"components/DropDownComponent.html":{}}}],["dropdown",{"_index":763,"title":{},"body":{"components/DropDownComponent.html":{}}}],["dropdown'},{'name",{"_index":103,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{}}}],["dropdowncomponent",{"_index":102,"title":{"components/DropDownComponent.html":{}},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"modules/SharedModule.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dynamic",{"_index":1324,"title":{},"body":{"dependencies.html":{}}}],["e.g",{"_index":775,"title":{},"body":{"components/DropDownComponent.html":{}}}],["e2e/src/app.po.ts",{"_index":182,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":186,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":185,"title":{},"body":{"classes/AppPage.html":{}}}],["edit",{"_index":468,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{}}}],["element",{"_index":86,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{}}}],["element(by.css('app",{"_index":189,"title":{},"body":{"classes/AppPage.html":{}}}],["emit",{"_index":784,"title":{},"body":{"components/DropDownComponent.html":{}}}],["emitter",{"_index":780,"title":{},"body":{"components/DropDownComponent.html":{}}}],["enumerations",{"_index":1336,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":933,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["env.envname",{"_index":937,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["envadmin",{"_index":934,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["environment",{"_index":173,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/ClientService.html":{},"injectables/ConfigService.html":{},"interceptors/MockInterceptor.html":{},"modules/MockModule.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.authapi}/authorize?client_id=${environment.clientid}&response_type=code&redirect_uri=${environment.authcallback",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{}}}],["environment.authcallback",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{}}}],["environment.authcallback}?code=${code",{"_index":973,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["environment.baseurl",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["environment.clientid",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{}}}],["environment.envname",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/MockInterceptor.html":{},"modules/MockModule.html":{},"miscellaneous/variables.html":{}}}],["environment.fakecode.code",{"_index":972,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["environment.fakejwttoken.token",{"_index":1035,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["environments/environment",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/ClientService.html":{},"injectables/ConfigService.html":{},"interceptors/MockInterceptor.html":{},"modules/MockModule.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{}}}],["environments/environment.mock",{"_index":935,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["envname",{"_index":1399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["envresearcher",{"_index":936,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["err.error.message",{"_index":813,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["err.statustext",{"_index":814,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["error",{"_index":812,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{}}}],["errorinterceptor",{"_index":791,"title":{"interceptors/ErrorInterceptor.html":{}},"body":{"interceptors/ErrorInterceptor.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["esc",{"_index":721,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["event",{"_index":447,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/UsersComponent.html":{}}}],["event.config.map(c",{"_index":571,"title":{},"body":{"components/ConfigsComponent.html":{},"components/GlobalConfigsComponent.html":{}}}],["event.id",{"_index":458,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/UsersComponent.html":{}}}],["event.name",{"_index":567,"title":{},"body":{"components/ConfigsComponent.html":{},"components/UsersComponent.html":{}}}],["eventemitter",{"_index":616,"title":{},"body":{"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{}}}],["expires_in",{"_index":214,"title":{},"body":{"interfaces/AuthData.html":{},"interfaces/AuthResponse.html":{}}}],["export",{"_index":40,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponse.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Client.html":{},"injectables/ClientService.html":{},"components/ClientsComponent.html":{},"classes/Config.html":{},"components/ConfigSelectionPageComponent.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"modules/CoreModule.html":{},"modules/CoreRoutingModule.html":{},"components/DropDownComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{},"modules/MockModule.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"classes/Project.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"modules/SharedModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["exports",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/CoreRoutingModule.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["extraproviders",{"_index":1055,"title":{},"body":{"modules/MockModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["eyj0exaioijkv1qilcjhbgcioijfuzi1nij9.eyjhdwqioijyzxnfyxbwy29uzmlniiwic3viijoicgv5bwfuiiwic291cmnlcyi6w10simdyyw50x3r5cguioijwyxnzd29yzcisinvzzxjfbmftzsi6inblew1hbiisinjvbgvzijpbxswic2nvcguiolsiu1vcskvdvc5vuerbveuilcjquk9krunulknsrufursisilbst0pfq1quvvbeqvrfiiwituvbu1vsru1ftlquq1jfqvrfiiwiufjpskvdvc5srufeiiwit0fvvehdtelftlrtlljfquqilcjtvujkrunulljfquqixswiaxnzijoitwfuywdlbwvudfbvcnrhbcisimv4cci6mtu4mdi5nzm2mswiawf0ijoxntgwmjkznzyxlcjhdxrob3jpdgllcyi6wyjst0xfx1nzu19bre1jtijdlcjjbgllbnrfawqioijhchbjb25mawdfznjvbnrlbmqifq.hf2kzum0b1cimedmiundyvapg72pptxsgdswx",{"_index":1414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjhdwqioijyzxnfyxbwy29uzmlniiwic3viijoicgv5bwfuiiwic291cmnlcyi6w10simdyyw50x3r5cguioijwyxnzd29yzcisinvzzxjfbmftzsi6ikpvag4ilcjyb2xlcyi6w10sinnjb3blijpbilnvqkpfq1quvvbeqvrfiiwiufjpskvdvc5dukvbveuilcjquk9krunullvqrefursisik1fqvnvukvnru5ulknsrufursisilbst0pfq1quukvbrcisik9bvvriq0xjru5uuy5srufeiiwiu1vcskvdvc5srufeil0simlzcyi6ik1hbmfnzw1lbnrqb3j0ywwilcjlehaioje1odayotcznjesimlhdci6mtu4mdi5mzc2mswiyxv0ag9yaxrpzxmiolsiuk9mrv9srvnfqvjdsevsil0simnsawvudf9pzci6imfwcgnvbmzpz19mcm9udgvuzcj9.ilqxcmkxr8jcy9r6xg7dv",{"_index":1411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fake",{"_index":1046,"title":{},"body":{"interceptors/MockInterceptor.html":{},"miscellaneous/variables.html":{}}}],["fakeclientid",{"_index":1015,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["fakecode",{"_index":1408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fakejwttoken",{"_index":1410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["false",{"_index":51,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClientsComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectsComponent.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["fb",{"_index":609,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["field",{"_index":767,"title":{},"body":{"components/DropDownComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponse.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Client.html":{},"injectables/ClientService.html":{},"components/ClientsComponent.html":{},"classes/Config.html":{},"components/ConfigSelectionPageComponent.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"modules/CoreModule.html":{},"modules/CoreRoutingModule.html":{},"components/DropDownComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{},"modules/MockModule.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"classes/Project.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"modules/SharedModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["files",{"_index":1357,"title":{},"body":{"index.html":{}}}],["finally",{"_index":369,"title":{},"body":{"injectables/ClientService.html":{},"injectables/ConfigService.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{}}}],["first",{"_index":907,"title":{},"body":{"components/LoginComponent.html":{}}}],["firstline",{"_index":670,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["flex",{"_index":824,"title":{},"body":{"components/FooterComponent.html":{},"components/NavbarComponent.html":{}}}],["focus",{"_index":708,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["font",{"_index":833,"title":{},"body":{"components/FooterComponent.html":{},"components/NavbarComponent.html":{}}}],["footer",{"_index":817,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":105,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{}}}],["footer.component.html",{"_index":819,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":818,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercomponent",{"_index":104,"title":{"components/FooterComponent.html":{}},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"modules/CoreModule.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["form",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{}}}],["formarray",{"_index":650,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["formbuilder",{"_index":610,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["formgroup",{"_index":625,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["formsmodule",{"_index":1121,"title":{},"body":{"modules/PagesModule.html":{}}}],["found",{"_index":1103,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found'},{'name",{"_index":117,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{}}}],["found.component",{"_index":198,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{}}}],["found.component.html",{"_index":1104,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.scss",{"_index":1105,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts",{"_index":1102,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["found/page",{"_index":197,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["full",{"_index":203,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":947,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["functions",{"_index":969,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["generatecode",{"_index":962,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["generatecode('researcher",{"_index":965,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["generated",{"_index":1344,"title":{},"body":{"index.html":{}}}],["generatetoken",{"_index":967,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["generatetoken('researcher",{"_index":968,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["getallclients",{"_index":344,"title":{},"body":{"injectables/ClientService.html":{}}}],["getallclientsobservable",{"_index":345,"title":{},"body":{"injectables/ClientService.html":{}}}],["getallprojects",{"_index":1141,"title":{},"body":{"injectables/ProjectService.html":{}}}],["getallprojectsobservable",{"_index":1142,"title":{},"body":{"injectables/ProjectService.html":{}}}],["getclients",{"_index":434,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/GlobalConfigsComponent.html":{},"interceptors/MockInterceptor.html":{},"components/UsersComponent.html":{}}}],["getclientsbyprojectid(getprojectidfromurl",{"_index":955,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["getclientsbyprojectid(projectid",{"_index":991,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["getconfigbyclientid",{"_index":958,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["getconfigbyclientidandprojectid",{"_index":959,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["getconfigbyprojectidclientid",{"_index":474,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getconfigbyprojectidclientid(projectid",{"_index":482,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getconfigbyprojectidclientidobservable",{"_index":475,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getconfigbyprojectidclientidobservable(projectid",{"_index":484,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getconfigbyprojectidclientiduserid(projectid",{"_index":514,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getconfigbyprojectidclientiduseridobservable(projectid",{"_index":513,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getconfigformvalue",{"_index":591,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["getconfigs",{"_index":592,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["getcurrentdecodeduservalue",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcurrentuservalue",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{}}}],["getdismissreason",{"_index":594,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["getdismissreason(reason",{"_index":621,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["getformdata",{"_index":607,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["getgetformdata",{"_index":646,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["getglobalconfigbyclientid",{"_index":476,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getglobalconfigbyclientid(clientid",{"_index":486,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getglobalconfigbyclientidobservable",{"_index":477,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getglobalconfigbyclientidobservable(clientid",{"_index":488,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getisadmin",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{}}}],["getprojectidandclientidfromurl",{"_index":1043,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["getprojectidfromurl",{"_index":1041,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["getprojects",{"_index":376,"title":{},"body":{"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"interceptors/MockInterceptor.html":{},"components/UsersComponent.html":{}}}],["getting",{"_index":1341,"title":{"index.html":{}},"body":{}}],["gettitletext",{"_index":183,"title":{},"body":{"classes/AppPage.html":{}}}],["getusers",{"_index":521,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["getusersbyprojectid",{"_index":1232,"title":{},"body":{"injectables/UserService.html":{}}}],["getusersbyprojectid(getprojectidfromurl",{"_index":956,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["getusersbyprojectid(projectid",{"_index":1005,"title":{},"body":{"interceptors/MockInterceptor.html":{},"injectables/UserService.html":{}}}],["getusersbyprojectidobservable",{"_index":1233,"title":{},"body":{"injectables/UserService.html":{}}}],["getusersbyprojectidobservable(projectid",{"_index":1236,"title":{},"body":{"injectables/UserService.html":{}}}],["global",{"_index":107,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesRoutingModule.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{}}}],["globalclientscomponent",{"_index":106,"title":{"components/GlobalClientsComponent.html":{}},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["globalconfigs.find(c",{"_index":1017,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["globalconfigscomponent",{"_index":108,"title":{"components/GlobalConfigsComponent.html":{}},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["going",{"_index":671,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["graph",{"_index":1375,"title":{},"body":{"modules.html":{}}}],["group",{"_index":578,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["group.value.default",{"_index":728,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["groups",{"_index":471,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"interceptors/MockInterceptor.html":{},"components/UsersComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["grp",{"_index":660,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["grs",{"_index":1393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["guard",{"_index":0,"title":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":2,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"overview.html":{}}}],["hammerjs",{"_index":1327,"title":{},"body":{"dependencies.html":{}}}],["handler",{"_index":1067,"title":{},"body":{"components/NavbarComponent.html":{}}}],["handleroute",{"_index":948,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["happens",{"_index":709,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["header",{"_index":643,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["headers",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"interceptors/MockInterceptor.html":{}}}],["headers.get('authorization",{"_index":1033,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["height",{"_index":829,"title":{},"body":{"components/FooterComponent.html":{},"components/NavbarComponent.html":{}}}],["hello",{"_index":1082,"title":{},"body":{"components/NavbarComponent.html":{}}}],["help",{"_index":1085,"title":{},"body":{"components/NavbarComponent.html":{}}}],["helper",{"_index":1023,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["history.state",{"_index":412,"title":{},"body":{"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/UsersComponent.html":{}}}],["host",{"_index":1182,"title":{},"body":{"components/ToastComponent.html":{}}}],["hostbinding",{"_index":897,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["hostbinding('class",{"_index":899,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["hostbindings",{"_index":892,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["href=/appconfig",{"_index":1371,"title":{},"body":{"index.html":{}}}],["html",{"_index":85,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{}}}],["http",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ClientService.html":{},"injectables/ConfigService.html":{},"interceptors/MockInterceptor.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":1402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200/appconfig",{"_index":1354,"title":{},"body":{"index.html":{}}}],["http://localhost:4200/appconfig/login",{"_index":1407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200/appconfig/managementportal/oauth",{"_index":1404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200/login",{"_index":1425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:8080/managementportal/oauth",{"_index":1424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http_interceptors",{"_index":926,"title":{},"body":{"interceptors/MockInterceptor.html":{},"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["httpclient",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ClientService.html":{},"injectables/ConfigService.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{}}}],["httpclientmodule",{"_index":237,"title":{},"body":{"modules/AuthModule.html":{}}}],["httpevent",{"_index":802,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"interceptors/MockInterceptor.html":{}}}],["httphandler",{"_index":799,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"interceptors/MockInterceptor.html":{}}}],["httpinterceptor",{"_index":803,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"interceptors/MockInterceptor.html":{}}}],["httpparams",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{}}}],["httprequest",{"_index":798,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"interceptors/MockInterceptor.html":{}}}],["httpresponse",{"_index":925,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["https://github.com/radar",{"_index":1363,"title":{},"body":{"index.html":{}}}],["humanreadableprojectname",{"_index":1130,"title":{},"body":{"classes/Project.html":{}}}],["i18n/en.json",{"_index":79,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/UsersComponent.html":{}}}],["i=0;i",{"_index":717,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["iat",{"_index":216,"title":{},"body":{"interfaces/AuthData.html":{},"interfaces/AuthResponse.html":{}}}],["id",{"_index":336,"title":{},"body":{"classes/Client.html":{},"classes/Project.html":{},"classes/User.html":{}}}],["identifier",{"_index":1273,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":820,"title":{},"body":{"components/FooterComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["img{height:3em",{"_index":1093,"title":{},"body":{"components/NavbarComponent.html":{}}}],["implements",{"_index":42,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{},"components/ProjectsComponent.html":{},"components/UsersComponent.html":{}}}],["import",{"_index":32,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponse.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/ClientService.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"modules/CoreModule.html":{},"modules/CoreRoutingModule.html":{},"components/DropDownComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{},"modules/MockModule.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"modules/SharedModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["imports",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/CoreRoutingModule.html":{},"modules/MockModule.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"modules/SharedModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"guards/AdminGuard.html":{},"components/AdminSelectionPageComponent.html":{},"classes/AppPage.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"classes/Client.html":{},"injectables/ClientService.html":{},"components/ClientsComponent.html":{},"classes/Config.html":{},"components/ConfigSelectionPageComponent.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{},"components/NavbarComponent.html":{},"classes/Project.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponse.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Client.html":{},"injectables/ClientService.html":{},"components/ClientsComponent.html":{},"classes/Config.html":{},"components/ConfigSelectionPageComponent.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"modules/CoreModule.html":{},"modules/CoreRoutingModule.html":{},"components/DropDownComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{},"modules/MockModule.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"classes/Project.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"modules/SharedModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["init",{"_index":522,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["initialform",{"_index":595,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["initialize",{"_index":596,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["injectable",{"_index":33,"title":{"injectables/AuthService.html":{},"injectables/ClientService.html":{},"injectables/ConfigService.html":{},"injectables/ProjectService.html":{},"injectables/ToastService.html":{},"injectables/UserService.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ClientService.html":{},"injectables/ConfigService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"interceptors/MockInterceptor.html":{},"injectables/ProjectService.html":{},"injectables/ToastService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ClientService.html":{},"injectables/ConfigService.html":{},"injectables/ProjectService.html":{},"injectables/ToastService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["input",{"_index":648,"title":{},"body":{"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/LeftSidebarComponent.html":{}}}],["inputs",{"_index":603,"title":{},"body":{"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/LeftSidebarComponent.html":{}}}],["instanceof",{"_index":1195,"title":{},"body":{"components/ToastComponent.html":{}}}],["intercept",{"_index":794,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"interceptors/MockInterceptor.html":{}}}],["intercept(request",{"_index":797,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"interceptors/MockInterceptor.html":{}}}],["interceptor",{"_index":790,"title":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"interceptors/MockInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":792,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"interceptors/MockInterceptor.html":{}}}],["interface",{"_index":205,"title":{"interfaces/AuthData.html":{},"interfaces/AuthResponse.html":{}},"body":{"interfaces/AuthData.html":{},"interfaces/AuthResponse.html":{},"coverage.html":{}}}],["interfaces",{"_index":207,"title":{},"body":{"interfaces/AuthData.html":{},"interfaces/AuthResponse.html":{},"overview.html":{}}}],["isactive",{"_index":523,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["isactive(name",{"_index":534,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["isadmin",{"_index":46,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AuthService.html":{},"interceptors/MockInterceptor.html":{},"components/NavbarComponent.html":{}}}],["isloggedin",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/JwtInterceptor.html":{},"interceptors/MockInterceptor.html":{}}}],["isnavmenuactive",{"_index":1060,"title":{},"body":{"components/NavbarComponent.html":{}}}],["iss",{"_index":217,"title":{},"body":{"interfaces/AuthData.html":{},"interfaces/AuthResponse.html":{}}}],["istemplate",{"_index":1185,"title":{},"body":{"components/ToastComponent.html":{}}}],["istemplate(toast",{"_index":1188,"title":{},"body":{"components/ToastComponent.html":{}}}],["item",{"_index":773,"title":{},"body":{"components/DropDownComponent.html":{}}}],["item[field",{"_index":789,"title":{},"body":{"components/DropDownComponent.html":{}}}],["items",{"_index":771,"title":{},"body":{"components/DropDownComponent.html":{},"components/NavbarComponent.html":{}}}],["json.stringify(user",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{}}}],["jti",{"_index":218,"title":{},"body":{"interfaces/AuthData.html":{},"interfaces/AuthResponse.html":{}}}],["justify",{"_index":825,"title":{},"body":{"components/FooterComponent.html":{}}}],["jwt",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["jwt_decode",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwt_decode(currentuser.access_token",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtdecoded",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtdecoded.authorities[0",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtdecoded.user_name",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtinterceptor",{"_index":875,"title":{"interceptors/JwtInterceptor.html":{}},"body":{"interceptors/JwtInterceptor.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["keyboard_arrow_left{{__.backto}}{{backbutton.name",{"_index":900,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["kstjcsby0y09e8xe9sfbs",{"_index":1412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["label",{"_index":768,"title":{},"body":{"components/DropDownComponent.html":{}}}],["left",{"_index":110,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{}}}],["leftsidebarcomponent",{"_index":109,"title":{"components/LeftSidebarComponent.html":{}},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"modules/CoreModule.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["legend",{"_index":84,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"modules/CoreModule.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"components/ProjectsComponent.html":{},"modules/SharedModule.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{},"overview.html":{}}}],["length",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{},"components/ConfigsComponent.html":{},"interceptors/MockInterceptor.html":{},"miscellaneous/variables.html":{}}}],["less",{"_index":1049,"title":{},"body":{"interceptors/MockInterceptor.html":{},"miscellaneous/variables.html":{}}}],["light",{"_index":1213,"title":{},"body":{"injectables/ToastService.html":{}}}],["line",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{},"components/ConfigsComponent.html":{},"interceptors/MockInterceptor.html":{},"components/NavbarComponent.html":{},"miscellaneous/variables.html":{}}}],["line:max",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{},"components/ConfigsComponent.html":{},"interceptors/MockInterceptor.html":{},"miscellaneous/variables.html":{}}}],["line:no",{"_index":1024,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["link",{"_index":1362,"title":{},"body":{"index.html":{}}}],["literal",{"_index":428,"title":{},"body":{"classes/Config.html":{},"components/LeftSidebarComponent.html":{}}}],["loaded",{"_index":365,"title":{},"body":{"injectables/ClientService.html":{},"injectables/ConfigService.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{}}}],["loading",{"_index":373,"title":{},"body":{"components/ClientsComponent.html":{},"components/ConfigsComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LoginComponent.html":{},"components/ProjectsComponent.html":{},"components/UsersComponent.html":{}}}],["local",{"_index":1358,"title":{},"body":{"index.html":{}}}],["localstorage.getitem('returnurl",{"_index":913,"title":{},"body":{"components/LoginComponent.html":{}}}],["localstorage.removeitem('currentuser",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem('returnurl",{"_index":1074,"title":{},"body":{"components/NavbarComponent.html":{}}}],["localstorage.setitem('currentuser",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('returnurl",{"_index":910,"title":{},"body":{"components/LoginComponent.html":{}}}],["location",{"_index":1131,"title":{},"body":{"classes/Project.html":{}}}],["location.reload(true",{"_index":811,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["login",{"_index":201,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["login'},{'name",{"_index":113,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{}}}],["login.component.html",{"_index":902,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":112,"title":{"components/LoginComponent.html":{}},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logo",{"_index":1092,"title":{},"body":{"components/NavbarComponent.html":{}}}],["logout",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["main",{"_index":759,"title":{},"body":{"modules/CoreRoutingModule.html":{}}}],["makebackbutton",{"_index":377,"title":{},"body":{"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/UsersComponent.html":{}}}],["makequeryparams",{"_index":378,"title":{},"body":{"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/GlobalClientsComponent.html":{},"components/ProjectsComponent.html":{},"components/UsersComponent.html":{}}}],["makequeryparams(clientid",{"_index":390,"title":{},"body":{"components/ClientsComponent.html":{},"components/GlobalClientsComponent.html":{}}}],["makequeryparams(projectid",{"_index":1156,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["makequeryparams(userid",{"_index":1252,"title":{},"body":{"components/UsersComponent.html":{}}}],["makestate",{"_index":379,"title":{},"body":{"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/GlobalClientsComponent.html":{},"components/ProjectsComponent.html":{},"components/UsersComponent.html":{}}}],["managementportal",{"_index":1360,"title":{},"body":{"index.html":{}}}],["map",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{}}}],["matbuttonmodule",{"_index":753,"title":{},"body":{"modules/CoreModule.html":{},"modules/PagesModule.html":{}}}],["matching",{"_index":53,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponse.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Client.html":{},"injectables/ClientService.html":{},"components/ClientsComponent.html":{},"classes/Config.html":{},"components/ConfigSelectionPageComponent.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"modules/CoreModule.html":{},"modules/CoreRoutingModule.html":{},"components/DropDownComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{},"modules/MockModule.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"classes/Project.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"modules/SharedModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["materialize",{"_index":929,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["maticonmodule",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/SharedModule.html":{}}}],["mergemap",{"_index":928,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["message",{"_index":1031,"title":{},"body":{"interceptors/MockInterceptor.html":{},"injectables/ToastService.html":{}}}],["metadata",{"_index":68,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{}}}],["method",{"_index":940,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["methods",{"_index":8,"title":{},"body":{"guards/AdminGuard.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ClientService.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{},"components/NavbarComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["miscellaneous",{"_index":1335,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mock",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/MockInterceptor.html":{},"modules/MockModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["mockbackendprovider",{"_index":1044,"title":{},"body":{"interceptors/MockInterceptor.html":{},"modules/MockModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockinterceptor",{"_index":922,"title":{"interceptors/MockInterceptor.html":{}},"body":{"interceptors/MockInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockmodule",{"_index":146,"title":{"modules/MockModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MockModule.html":{},"modules.html":{},"overview.html":{}}}],["modal",{"_index":642,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["modaldescription",{"_index":587,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["modaldescription.firstline",{"_index":734,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["modaldescription.secondline",{"_index":735,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["modaldescription.thirdline",{"_index":736,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["modaldismissreasons",{"_index":652,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["modaldismissreasons.backdrop_click",{"_index":722,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["modaldismissreasons.esc",{"_index":719,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["modalheader",{"_index":588,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["module",{"_index":129,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/CoreRoutingModule.html":{},"modules/MockModule.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["modules",{"_index":131,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/CoreRoutingModule.html":{},"modules/MockModule.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["multi",{"_index":1052,"title":{},"body":{"interceptors/MockInterceptor.html":{},"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["name",{"_index":18,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Client.html":{},"injectables/ClientService.html":{},"components/ClientsComponent.html":{},"classes/Config.html":{},"components/ConfigSelectionPageComponent.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Project.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["navbar",{"_index":1057,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":115,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{}}}],["navbar.component.html",{"_index":1059,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.scss",{"_index":1058,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbarcomponent",{"_index":114,"title":{"components/NavbarComponent.html":{}},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"modules/CoreModule.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navbaropen",{"_index":1061,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navigate",{"_index":1353,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":184,"title":{},"body":{"classes/AppPage.html":{}}}],["new",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"coverage.html":{}}}],["newconfigarray",{"_index":570,"title":{},"body":{"components/ConfigsComponent.html":{},"components/GlobalConfigsComponent.html":{}}}],["newconfigarray}).subscribe",{"_index":873,"title":{},"body":{"components/GlobalConfigsComponent.html":{}}}],["next",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{},"components/ConfigsComponent.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"interceptors/MockInterceptor.html":{},"miscellaneous/variables.html":{}}}],["next.handle(request",{"_index":886,"title":{},"body":{"interceptors/JwtInterceptor.html":{},"interceptors/MockInterceptor.html":{}}}],["next.handle(request).pipe(catcherror(err",{"_index":806,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["ng",{"_index":653,"title":{},"body":{"components/ConfigsTableComponent.html":{},"modules/PagesModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"index.html":{}}}],["ngbdropdownmodule",{"_index":1114,"title":{},"body":{"modules/PagesModule.html":{}}}],["ngbmodal",{"_index":612,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["ngbmodule",{"_index":1175,"title":{},"body":{"modules/SharedModule.html":{}}}],["ngmodule",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/CoreRoutingModule.html":{},"modules/MockModule.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"modules/SharedModule.html":{}}}],["ngoninit",{"_index":380,"title":{},"body":{"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LoginComponent.html":{},"components/ProjectsComponent.html":{},"components/UsersComponent.html":{}}}],["nonglobalconfigs.find(c",{"_index":1020,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["npm",{"_index":1351,"title":{},"body":{"index.html":{}}}],["null",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{},"components/ConfigsComponent.html":{},"components/GlobalConfigsComponent.html":{},"interceptors/MockInterceptor.html":{},"components/NavbarComponent.html":{}}}],["number",{"_index":215,"title":{},"body":{"interfaces/AuthData.html":{},"interfaces/AuthResponse.html":{},"components/ConfigsTableComponent.html":{},"classes/Project.html":{}}}],["object",{"_index":1208,"title":{},"body":{"injectables/ToastService.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":28,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ClientService.html":{},"injectables/ConfigService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"interceptors/MockInterceptor.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{}}}],["occurred",{"_index":706,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["of(new",{"_index":1028,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["of(null",{"_index":942,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["ok",{"_index":737,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["ok(body",{"_index":1027,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["ok(clients",{"_index":988,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["ok(config",{"_index":1019,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["ok(null",{"_index":989,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["ok(projects",{"_index":987,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["ok(user",{"_index":971,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["ok(user.projects.map(projectid",{"_index":986,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["ok({clients",{"_index":1004,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["ok({projects",{"_index":979,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["ok({users",{"_index":1014,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["onblur",{"_index":597,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["onblur(event",{"_index":628,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["oncancel",{"_index":598,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["oncancel(content",{"_index":630,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["onchange",{"_index":766,"title":{},"body":{"components/DropDownComponent.html":{}}}],["onchange(item",{"_index":781,"title":{},"body":{"components/DropDownComponent.html":{}}}],["onclientchange",{"_index":435,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/UsersComponent.html":{}}}],["onclientchange(event",{"_index":445,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/UsersComponent.html":{}}}],["one",{"_index":695,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["oninit",{"_index":371,"title":{},"body":{"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LoginComponent.html":{},"components/ProjectsComponent.html":{},"components/UsersComponent.html":{}}}],["onprojectchange",{"_index":381,"title":{},"body":{"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/UsersComponent.html":{}}}],["onprojectchange(d",{"_index":395,"title":{},"body":{"components/ClientsComponent.html":{}}}],["onprojectchange(event",{"_index":448,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/UsersComponent.html":{}}}],["onpublish",{"_index":599,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["onpublish(content",{"_index":632,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["onreset",{"_index":600,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["onreset(content",{"_index":634,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["onsave",{"_index":524,"title":{},"body":{"components/ConfigsComponent.html":{},"components/GlobalConfigsComponent.html":{}}}],["onsave(event",{"_index":542,"title":{},"body":{"components/ConfigsComponent.html":{},"components/GlobalConfigsComponent.html":{}}}],["onuserchange",{"_index":525,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["onuserchange(event",{"_index":544,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["open",{"_index":601,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["open(content",{"_index":636,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["operation",{"_index":677,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["optional",{"_index":20,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ClientService.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{},"components/NavbarComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["options",{"_index":1203,"title":{},"body":{"injectables/ToastService.html":{}}}],["organization",{"_index":1132,"title":{},"body":{"classes/Project.html":{}}}],["out",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["output",{"_index":649,"title":{},"body":{"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{}}}],["outputs",{"_index":605,"title":{},"body":{"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{}}}],["overview",{"_index":1377,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwritten",{"_index":674,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["p.data",{"_index":978,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["p.data.id",{"_index":984,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["p.data.projectname",{"_index":1006,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["p.name",{"_index":1150,"title":{},"body":{"injectables/ProjectService.html":{}}}],["p.projectname",{"_index":1151,"title":{},"body":{"injectables/ProjectService.html":{}}}],["package",{"_index":1318,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":831,"title":{},"body":{"components/FooterComponent.html":{}}}],["page",{"_index":67,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{}}}],["page'},{'name",{"_index":90,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{}}}],["page.component",{"_index":748,"title":{},"body":{"modules/CoreModule.html":{},"modules/CoreRoutingModule.html":{}}}],["page.component.html",{"_index":72,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/ConfigSelectionPageComponent.html":{}}}],["page.component.scss",{"_index":81,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/ConfigSelectionPageComponent.html":{}}}],["page.component.ts",{"_index":64,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:13",{"_index":78,"title":{},"body":{"components/AdminSelectionPageComponent.html":{}}}],["page.component.ts:17",{"_index":450,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{}}}],["page.component.ts:19",{"_index":452,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{}}}],["page.component.ts:20",{"_index":451,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{}}}],["page.component.ts:21",{"_index":453,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{}}}],["page.component.ts:22",{"_index":438,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{}}}],["page.component.ts:32",{"_index":444,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{}}}],["page.component.ts:40",{"_index":440,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{}}}],["page.component.ts:46",{"_index":439,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{}}}],["page.component.ts:52",{"_index":449,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{}}}],["page.component.ts:59",{"_index":446,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{}}}],["page.component.ts:66",{"_index":443,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{}}}],["page.component.ts:70",{"_index":442,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{}}}],["page.component.ts:74",{"_index":441,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{}}}],["page/admin",{"_index":63,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"modules/CoreModule.html":{},"modules/CoreRoutingModule.html":{},"coverage.html":{}}}],["page/config",{"_index":433,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{},"modules/CoreModule.html":{},"modules/CoreRoutingModule.html":{},"coverage.html":{}}}],["pagenotfoundcomponent",{"_index":116,"title":{"components/PageNotFoundComponent.html":{}},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"modules/CoreModule.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pagesmodule",{"_index":147,"title":{"modules/PagesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PagesModule.html":{},"modules.html":{},"overview.html":{}}}],["pagesroutingmodule",{"_index":148,"title":{"modules/PagesRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["param",{"_index":787,"title":{},"body":{"components/DropDownComponent.html":{}}}],["parameters",{"_index":16,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ClientService.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{},"components/NavbarComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["params",{"_index":353,"title":{},"body":{"injectables/ClientService.html":{},"components/LoginComponent.html":{}}}],["parent",{"_index":785,"title":{},"body":{"components/DropDownComponent.html":{}}}],["participants",{"_index":932,"title":{},"body":{"interceptors/MockInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["participants.participants.filter(u",{"_index":1011,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["pas",{"_index":1394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["path",{"_index":199,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreRoutingModule.html":{},"modules/PagesRoutingModule.html":{}}}],["pathmatch",{"_index":202,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["payload",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ConfigService.html":{}}}],["permanently",{"_index":675,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["pipe(delay(500",{"_index":945,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["pipe(dematerialize",{"_index":946,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["pipe(map((user",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{}}}],["pipe(materialize",{"_index":944,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["pipe(mergemap(handleroute",{"_index":943,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["place",{"_index":1048,"title":{},"body":{"interceptors/MockInterceptor.html":{},"miscellaneous/variables.html":{}}}],["plugins",{"_index":1016,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["port=4200",{"_index":1369,"title":{},"body":{"index.html":{}}}],["postconfigbyprojectidandclientid",{"_index":478,"title":{},"body":{"injectables/ConfigService.html":{}}}],["postconfigbyprojectidandclientid(projectid",{"_index":490,"title":{},"body":{"injectables/ConfigService.html":{}}}],["postconfigbyprojectidandclientidanduserid",{"_index":479,"title":{},"body":{"injectables/ConfigService.html":{}}}],["postconfigbyprojectidandclientidanduserid(projectid",{"_index":492,"title":{},"body":{"injectables/ConfigService.html":{}}}],["postglobalconfigbyclientid",{"_index":480,"title":{},"body":{"injectables/ConfigService.html":{}}}],["postglobalconfigbyclientid(clientid",{"_index":495,"title":{},"body":{"injectables/ConfigService.html":{}}}],["pressing",{"_index":720,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["previous",{"_index":694,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["private",{"_index":44,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ClientService.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["processlogin",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["processlogin(authcode",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{}}}],["prod",{"_index":1417,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":1400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":392,"title":{"classes/Project.html":{}},"body":{"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"classes/Project.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"coverage.html":{},"index.html":{}}}],["project.description",{"_index":1165,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["project.fakeprojectid",{"_index":1021,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["project.location",{"_index":1169,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["project.organization",{"_index":1167,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["project.projectname",{"_index":1164,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["projectid",{"_index":374,"title":{},"body":{"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"interceptors/MockInterceptor.html":{},"components/ProjectsComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["projectname",{"_index":776,"title":{},"body":{"components/DropDownComponent.html":{},"classes/Project.html":{}}}],["projectroutingmodule",{"_index":1124,"title":{},"body":{"modules/PagesModule.html":{}}}],["projects",{"_index":375,"title":{},"body":{"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"interceptors/MockInterceptor.html":{},"modules/PagesRoutingModule.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects'},{'name",{"_index":119,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{}}}],["projects.component.html",{"_index":1154,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["projects.component.scss",{"_index":1162,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["projects.foreach(p",{"_index":1149,"title":{},"body":{"injectables/ProjectService.html":{}}}],["projects.projects.filter(p",{"_index":994,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["projects.projects.find(p",{"_index":983,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["projects.projects.map(p",{"_index":977,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["projectscomponent",{"_index":118,"title":{"components/ProjectsComponent.html":{}},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["projectscomponent,userscomponent",{"_index":1127,"title":{},"body":{"modules/PagesModule.html":{}}}],["projectservice",{"_index":384,"title":{"injectables/ProjectService.html":{}},"body":{"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["projectslist",{"_index":976,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["projectslists",{"_index":981,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["projectslists.map(p",{"_index":985,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["promise",{"_index":29,"title":{},"body":{"guards/AdminGuard.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"injectables/ClientService.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{}}}],["properties",{"_index":73,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"interfaces/AuthData.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"classes/Client.html":{},"components/ClientsComponent.html":{},"classes/Config.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"classes/Project.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"classes/User.html":{},"components/UsersComponent.html":{}}}],["protractor",{"_index":187,"title":{},"body":{"classes/AppPage.html":{}}}],["provide",{"_index":177,"title":{},"body":{"modules/AppModule.html":{},"interceptors/MockInterceptor.html":{},"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["providedin",{"_index":38,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ClientService.html":{},"injectables/ConfigService.html":{},"interceptors/MockInterceptor.html":{},"injectables/ProjectService.html":{},"injectables/ToastService.html":{},"injectables/UserService.html":{}}}],["providers",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/MockModule.html":{},"modules/PagesModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["prs",{"_index":1395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{},"components/ToastComponent.html":{}}}],["publish",{"_index":668,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["queryparams",{"_index":227,"title":{},"body":{"guards/AuthGuard.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/UsersComponent.html":{}}}],["racf_auth_api",{"_index":1420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["racf_auth_callback",{"_index":1421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["racf_backend_url",{"_index":1423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["racf_base_url",{"_index":1419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["radar",{"_index":1359,"title":{},"body":{"index.html":{}}}],["radix",{"_index":1039,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["reactiveformsmodule",{"_index":1122,"title":{},"body":{"modules/PagesModule.html":{}}}],["reason",{"_index":623,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["redirectto",{"_index":200,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reload",{"_index":1356,"title":{},"body":{"index.html":{}}}],["remove",{"_index":602,"title":{},"body":{"components/ConfigsTableComponent.html":{},"injectables/ToastService.html":{}}}],["remove(index",{"_index":638,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["remove(toast",{"_index":1200,"title":{},"body":{"injectables/ToastService.html":{}}}],["request",{"_index":801,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"interceptors/MockInterceptor.html":{}}}],["request.clone",{"_index":882,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["require",{"_index":1316,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["researcher",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/MockInterceptor.html":{},"modules/MockModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["researcher.ts",{"_index":1310,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["researcherclients",{"_index":990,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["reset",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"components/ConfigsTableComponent.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["result",{"_index":52,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponse.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Client.html":{},"injectables/ClientService.html":{},"components/ClientsComponent.html":{},"classes/Config.html":{},"components/ConfigSelectionPageComponent.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"modules/CoreModule.html":{},"modules/CoreRoutingModule.html":{},"components/DropDownComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{},"modules/MockModule.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"classes/Project.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"modules/SharedModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":54,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponse.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Client.html":{},"injectables/ClientService.html":{},"components/ClientsComponent.html":{},"classes/Config.html":{},"components/ConfigSelectionPageComponent.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"modules/CoreModule.html":{},"modules/CoreRoutingModule.html":{},"components/DropDownComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{},"modules/MockModule.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"classes/Project.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"modules/SharedModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results.foreach(d",{"_index":1241,"title":{},"body":{"injectables/UserService.html":{}}}],["return",{"_index":48,"title":{},"body":{"guards/AdminGuard.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ClientService.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"interceptors/JwtInterceptor.html":{},"interceptors/MockInterceptor.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["returns",{"_index":27,"title":{},"body":{"guards/AdminGuard.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ClientService.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{},"components/NavbarComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["returnurl",{"_index":228,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["role",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/MockInterceptor.html":{}}}],["role_sys_admin",{"_index":1340,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["roles",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{},"miscellaneous/enumerations.html":{}}}],["roles.system_admin",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{}}}],["root",{"_index":39,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ClientService.html":{},"injectables/ConfigService.html":{},"interceptors/MockInterceptor.html":{},"injectables/ProjectService.html":{},"injectables/ToastService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":92,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{}}}],["route",{"_index":26,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"components/ConfigsTableComponent.html":{},"interceptors/MockInterceptor.html":{}}}],["router",{"_index":12,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/UsersComponent.html":{}}}],["routerlink",{"_index":389,"title":{},"body":{"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/UsersComponent.html":{}}}],["routermodule",{"_index":195,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreRoutingModule.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":241,"title":{},"body":{"modules/AuthRoutingModule.html":{},"modules/CoreRoutingModule.html":{},"modules/PagesRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":204,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":24,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["routes",{"_index":194,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreRoutingModule.html":{},"modules/PagesRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{}}}],["routing.module.ts",{"_index":193,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreRoutingModule.html":{},"modules/PagesRoutingModule.html":{}}}],["run",{"_index":1350,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":36,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ClientService.html":{},"injectables/ConfigService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"interceptors/MockInterceptor.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{}}}],["save",{"_index":606,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["saved",{"_index":703,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["scope",{"_index":426,"title":{},"body":{"classes/Config.html":{},"components/ConfigsTableComponent.html":{},"interceptors/MockInterceptor.html":{}}}],["secondline",{"_index":673,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["see",{"_index":1361,"title":{},"body":{"index.html":{}}}],["selected",{"_index":472,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{},"components/DropDownComponent.html":{}}}],["selectedproject",{"_index":993,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["selectedproject[0].clients",{"_index":997,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["selectedproject[0].participants",{"_index":1008,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["selection",{"_index":62,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"modules/CoreModule.html":{},"modules/CoreRoutingModule.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["selector",{"_index":69,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{}}}],["serve",{"_index":1368,"title":{},"body":{"index.html":{}}}],["server",{"_index":1349,"title":{},"body":{"index.html":{}}}],["service",{"_index":342,"title":{},"body":{"injectables/ClientService.html":{},"injectables/ConfigService.html":{},"interceptors/MockInterceptor.html":{},"injectables/ProjectService.html":{},"injectables/ToastService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["setheaders",{"_index":883,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["shadowed",{"_index":1025,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["sharedmodule",{"_index":149,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["show",{"_index":1197,"title":{},"body":{"injectables/ToastService.html":{}}}],["show(textortpl",{"_index":1202,"title":{},"body":{"injectables/ToastService.html":{}}}],["showcustomtoast(customtpl",{"_index":1225,"title":{},"body":{"injectables/ToastService.html":{}}}],["showerror",{"_index":1198,"title":{},"body":{"injectables/ToastService.html":{}}}],["showerror(message",{"_index":1206,"title":{},"body":{"injectables/ToastService.html":{}}}],["showsuccess",{"_index":1199,"title":{},"body":{"injectables/ToastService.html":{}}}],["showsuccess(message",{"_index":1216,"title":{},"body":{"injectables/ToastService.html":{}}}],["sidebar",{"_index":889,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar'},{'name",{"_index":111,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{}}}],["sidebar.component",{"_index":751,"title":{},"body":{"modules/CoreModule.html":{}}}],["sidebar.component.html",{"_index":890,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar.component.scss",{"_index":898,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar.component.ts",{"_index":888,"title":{},"body":{"components/LeftSidebarComponent.html":{},"coverage.html":{}}}],["sidebar.component.ts:12",{"_index":896,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar.component.ts:13",{"_index":894,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar.component.ts:14",{"_index":893,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar/left",{"_index":750,"title":{},"body":{"modules/CoreModule.html":{},"components/LeftSidebarComponent.html":{},"coverage.html":{}}}],["site",{"_index":1086,"title":{},"body":{"components/NavbarComponent.html":{}}}],["size",{"_index":834,"title":{},"body":{"components/FooterComponent.html":{},"components/NavbarComponent.html":{}}}],["solid",{"_index":842,"title":{},"body":{"components/FooterComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponse.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Client.html":{},"injectables/ClientService.html":{},"components/ClientsComponent.html":{},"classes/Config.html":{},"components/ConfigSelectionPageComponent.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"modules/CoreModule.html":{},"modules/CoreRoutingModule.html":{},"components/DropDownComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{},"modules/MockModule.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"classes/Project.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"modules/SharedModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["span')).gettext",{"_index":191,"title":{},"body":{"classes/AppPage.html":{}}}],["spec\\.ts",{"_index":1398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.mock",{"_index":1386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.mock.ts",{"_index":1387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":1384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mock.module.ts",{"_index":1391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mock.service.ts",{"_index":1390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../roles.enum.ts",{"_index":1337,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../test.ts",{"_index":1385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":192,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.module.ts",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/auth/auth",{"_index":239,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["src/app/auth/auth.module.ts",{"_index":234,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/auth/containers/login/login.component.ts",{"_index":901,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/auth/containers/login/login.component.ts:15",{"_index":906,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/containers/login/login.component.ts:17",{"_index":903,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/containers/login/login.component.ts:25",{"_index":905,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/containers/login/login.component.ts:60",{"_index":904,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/enums/roles.enum.ts",{"_index":1338,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/auth/helpers/admin.guard.ts",{"_index":6,"title":{},"body":{"guards/AdminGuard.html":{},"coverage.html":{}}}],["src/app/auth/helpers/admin.guard.ts:10",{"_index":15,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/auth/helpers/admin.guard.ts:14",{"_index":25,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/auth/helpers/auth.guard.ts",{"_index":221,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/auth/helpers/auth.guard.ts:10",{"_index":222,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/helpers/auth.guard.ts:14",{"_index":223,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/models/auth.ts",{"_index":208,"title":{},"body":{"interfaces/AuthData.html":{},"interfaces/AuthResponse.html":{},"coverage.html":{}}}],["src/app/auth/models/user.ts",{"_index":1279,"title":{},"body":{"coverage.html":{}}}],["src/app/auth/services/auth.service.ts",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/auth/services/auth.service.ts:16",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:17",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:24",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:28",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:33",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:44",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:49",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:68",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/containers/admin",{"_index":61,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"coverage.html":{}}}],["src/app/core/containers/config",{"_index":432,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{},"coverage.html":{}}}],["src/app/core/containers/footer/footer.component.ts",{"_index":816,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/core/containers/left",{"_index":887,"title":{},"body":{"components/LeftSidebarComponent.html":{},"coverage.html":{}}}],["src/app/core/containers/navbar/navbar.component.ts",{"_index":1056,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/core/containers/navbar/navbar.component.ts:22",{"_index":1069,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/core/containers/navbar/navbar.component.ts:23",{"_index":1070,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/core/containers/navbar/navbar.component.ts:24",{"_index":1071,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/core/containers/navbar/navbar.component.ts:26",{"_index":1064,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/core/containers/navbar/navbar.component.ts:38",{"_index":1066,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/core/containers/navbar/navbar.component.ts:46",{"_index":1068,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/core/containers/navbar/navbar.component.ts:50",{"_index":1065,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/core/containers/page",{"_index":1101,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["src/app/core/core",{"_index":755,"title":{},"body":{"modules/CoreRoutingModule.html":{}}}],["src/app/core/core.module.ts",{"_index":742,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/mock/mock",{"_index":1288,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/mock/mock.module.ts",{"_index":1053,"title":{},"body":{"modules/MockModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/mock/services/mock.service.ts",{"_index":923,"title":{},"body":{"interceptors/MockInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/mock/services/mock.service.ts:24",{"_index":924,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["src/app/pages/containers/clients/clients.component.ts",{"_index":370,"title":{},"body":{"components/ClientsComponent.html":{},"coverage.html":{}}}],["src/app/pages/containers/clients/clients.component.ts:16",{"_index":399,"title":{},"body":{"components/ClientsComponent.html":{}}}],["src/app/pages/containers/clients/clients.component.ts:17",{"_index":401,"title":{},"body":{"components/ClientsComponent.html":{}}}],["src/app/pages/containers/clients/clients.component.ts:18",{"_index":402,"title":{},"body":{"components/ClientsComponent.html":{}}}],["src/app/pages/containers/clients/clients.component.ts:19",{"_index":400,"title":{},"body":{"components/ClientsComponent.html":{}}}],["src/app/pages/containers/clients/clients.component.ts:20",{"_index":386,"title":{},"body":{"components/ClientsComponent.html":{}}}],["src/app/pages/containers/clients/clients.component.ts:28",{"_index":394,"title":{},"body":{"components/ClientsComponent.html":{}}}],["src/app/pages/containers/clients/clients.component.ts:34",{"_index":387,"title":{},"body":{"components/ClientsComponent.html":{}}}],["src/app/pages/containers/clients/clients.component.ts:40",{"_index":396,"title":{},"body":{"components/ClientsComponent.html":{}}}],["src/app/pages/containers/clients/clients.component.ts:47",{"_index":398,"title":{},"body":{"components/ClientsComponent.html":{}}}],["src/app/pages/containers/clients/clients.component.ts:53",{"_index":393,"title":{},"body":{"components/ClientsComponent.html":{}}}],["src/app/pages/containers/clients/clients.component.ts:57",{"_index":391,"title":{},"body":{"components/ClientsComponent.html":{}}}],["src/app/pages/containers/clients/clients.component.ts:61",{"_index":388,"title":{},"body":{"components/ClientsComponent.html":{}}}],["src/app/pages/containers/configs",{"_index":580,"title":{},"body":{"components/ConfigsTableComponent.html":{},"coverage.html":{}}}],["src/app/pages/containers/configs/configs.component.ts",{"_index":519,"title":{},"body":{"components/ConfigsComponent.html":{},"coverage.html":{}}}],["src/app/pages/containers/configs/configs.component.ts:101",{"_index":546,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["src/app/pages/containers/configs/configs.component.ts:107",{"_index":543,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["src/app/pages/containers/configs/configs.component.ts:123",{"_index":535,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["src/app/pages/containers/configs/configs.component.ts:134",{"_index":538,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["src/app/pages/containers/configs/configs.component.ts:138",{"_index":537,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["src/app/pages/containers/configs/configs.component.ts:142",{"_index":536,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["src/app/pages/containers/configs/configs.component.ts:20",{"_index":547,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["src/app/pages/containers/configs/configs.component.ts:22",{"_index":551,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["src/app/pages/containers/configs/configs.component.ts:23",{"_index":548,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["src/app/pages/containers/configs/configs.component.ts:24",{"_index":553,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["src/app/pages/containers/configs/configs.component.ts:25",{"_index":550,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["src/app/pages/containers/configs/configs.component.ts:27",{"_index":552,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["src/app/pages/containers/configs/configs.component.ts:28",{"_index":549,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["src/app/pages/containers/configs/configs.component.ts:29",{"_index":554,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["src/app/pages/containers/configs/configs.component.ts:30",{"_index":529,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["src/app/pages/containers/configs/configs.component.ts:41",{"_index":539,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["src/app/pages/containers/configs/configs.component.ts:47",{"_index":533,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["src/app/pages/containers/configs/configs.component.ts:59",{"_index":531,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["src/app/pages/containers/configs/configs.component.ts:65",{"_index":530,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["src/app/pages/containers/configs/configs.component.ts:71",{"_index":532,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["src/app/pages/containers/configs/configs.component.ts:77",{"_index":541,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["src/app/pages/containers/configs/configs.component.ts:85",{"_index":540,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["src/app/pages/containers/configs/configs.component.ts:93",{"_index":545,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["src/app/pages/containers/global",{"_index":844,"title":{},"body":{"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"coverage.html":{}}}],["src/app/pages/containers/projects/projects.component.ts",{"_index":1153,"title":{},"body":{"components/ProjectsComponent.html":{},"coverage.html":{}}}],["src/app/pages/containers/projects/projects.component.ts:15",{"_index":1160,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["src/app/pages/containers/projects/projects.component.ts:16",{"_index":1161,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["src/app/pages/containers/projects/projects.component.ts:17",{"_index":1155,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["src/app/pages/containers/projects/projects.component.ts:21",{"_index":1159,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["src/app/pages/containers/projects/projects.component.ts:26",{"_index":1158,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["src/app/pages/containers/projects/projects.component.ts:30",{"_index":1157,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["src/app/pages/containers/users/users.component.ts",{"_index":1244,"title":{},"body":{"components/UsersComponent.html":{},"coverage.html":{}}}],["src/app/pages/containers/users/users.component.ts:21",{"_index":1259,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/pages/containers/users/users.component.ts:23",{"_index":1262,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/pages/containers/users/users.component.ts:24",{"_index":1260,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/pages/containers/users/users.component.ts:26",{"_index":1263,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/pages/containers/users/users.component.ts:27",{"_index":1261,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/pages/containers/users/users.component.ts:28",{"_index":1264,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/pages/containers/users/users.component.ts:30",{"_index":1248,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/pages/containers/users/users.component.ts:39",{"_index":1255,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/pages/containers/users/users.component.ts:49",{"_index":1250,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/pages/containers/users/users.component.ts:55",{"_index":1249,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/pages/containers/users/users.component.ts:61",{"_index":1257,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/pages/containers/users/users.component.ts:69",{"_index":1256,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/pages/containers/users/users.component.ts:77",{"_index":1258,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/pages/containers/users/users.component.ts:83",{"_index":1254,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/pages/containers/users/users.component.ts:87",{"_index":1253,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/pages/containers/users/users.component.ts:91",{"_index":1251,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/pages/models/client.ts",{"_index":334,"title":{},"body":{"classes/Client.html":{},"coverage.html":{}}}],["src/app/pages/models/client.ts:2",{"_index":338,"title":{},"body":{"classes/Client.html":{}}}],["src/app/pages/models/client.ts:3",{"_index":337,"title":{},"body":{"classes/Client.html":{}}}],["src/app/pages/models/client.ts:4",{"_index":339,"title":{},"body":{"classes/Client.html":{}}}],["src/app/pages/models/config.ts",{"_index":424,"title":{},"body":{"classes/Config.html":{},"coverage.html":{}}}],["src/app/pages/models/config.ts:2",{"_index":427,"title":{},"body":{"classes/Config.html":{}}}],["src/app/pages/models/config.ts:3",{"_index":431,"title":{},"body":{"classes/Config.html":{}}}],["src/app/pages/models/config.ts:4",{"_index":429,"title":{},"body":{"classes/Config.html":{}}}],["src/app/pages/models/config.ts:9",{"_index":430,"title":{},"body":{"classes/Config.html":{}}}],["src/app/pages/models/project.ts",{"_index":1129,"title":{},"body":{"classes/Project.html":{},"coverage.html":{}}}],["src/app/pages/models/project.ts:2",{"_index":1135,"title":{},"body":{"classes/Project.html":{}}}],["src/app/pages/models/project.ts:3",{"_index":1137,"title":{},"body":{"classes/Project.html":{}}}],["src/app/pages/models/project.ts:4",{"_index":1139,"title":{},"body":{"classes/Project.html":{}}}],["src/app/pages/models/project.ts:5",{"_index":1134,"title":{},"body":{"classes/Project.html":{}}}],["src/app/pages/models/project.ts:6",{"_index":1136,"title":{},"body":{"classes/Project.html":{}}}],["src/app/pages/models/project.ts:7",{"_index":1138,"title":{},"body":{"classes/Project.html":{}}}],["src/app/pages/models/project.ts:8",{"_index":1133,"title":{},"body":{"classes/Project.html":{}}}],["src/app/pages/models/user.ts",{"_index":1228,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/pages/models/user.ts:2",{"_index":1229,"title":{},"body":{"classes/User.html":{}}}],["src/app/pages/models/user.ts:3",{"_index":1230,"title":{},"body":{"classes/User.html":{}}}],["src/app/pages/pages",{"_index":1128,"title":{},"body":{"modules/PagesRoutingModule.html":{}}}],["src/app/pages/pages.module.ts",{"_index":1110,"title":{},"body":{"modules/PagesModule.html":{}}}],["src/app/pages/services/client.service.ts",{"_index":341,"title":{},"body":{"injectables/ClientService.html":{},"coverage.html":{}}}],["src/app/pages/services/client.service.ts:15",{"_index":347,"title":{},"body":{"injectables/ClientService.html":{}}}],["src/app/pages/services/client.service.ts:28",{"_index":350,"title":{},"body":{"injectables/ClientService.html":{}}}],["src/app/pages/services/client.service.ts:36",{"_index":348,"title":{},"body":{"injectables/ClientService.html":{}}}],["src/app/pages/services/config.service.ts",{"_index":473,"title":{},"body":{"injectables/ConfigService.html":{},"coverage.html":{}}}],["src/app/pages/services/config.service.ts:14",{"_index":481,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/pages/services/config.service.ts:18",{"_index":489,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/pages/services/config.service.ts:22",{"_index":487,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/pages/services/config.service.ts:45",{"_index":485,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/pages/services/config.service.ts:49",{"_index":483,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/pages/services/config.service.ts:76",{"_index":496,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/pages/services/config.service.ts:84",{"_index":491,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/pages/services/config.service.ts:92",{"_index":494,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/pages/services/project.service.ts",{"_index":1140,"title":{},"body":{"injectables/ProjectService.html":{},"coverage.html":{}}}],["src/app/pages/services/project.service.ts:14",{"_index":1143,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/pages/services/project.service.ts:18",{"_index":1145,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/pages/services/project.service.ts:22",{"_index":1144,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/pages/services/user.service.ts",{"_index":1231,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/pages/services/user.service.ts:14",{"_index":1234,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/pages/services/user.service.ts:18",{"_index":1237,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/pages/services/user.service.ts:22",{"_index":1235,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/shared/components/drop",{"_index":760,"title":{},"body":{"components/DropDownComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/toast/toast.component.ts",{"_index":1181,"title":{},"body":{"components/ToastComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/toast/toast.component.ts:10",{"_index":1190,"title":{},"body":{"components/ToastComponent.html":{}}}],["src/app/shared/components/toast/toast.component.ts:12",{"_index":1189,"title":{},"body":{"components/ToastComponent.html":{}}}],["src/app/shared/components/toast/toast.component.ts:9",{"_index":1187,"title":{},"body":{"components/ToastComponent.html":{}}}],["src/app/shared/helpers/error.interceptor.ts",{"_index":793,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"coverage.html":{}}}],["src/app/shared/helpers/error.interceptor.ts:11",{"_index":800,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/shared/helpers/error.interceptor.ts:8",{"_index":796,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/shared/helpers/jwt.interceptor.ts",{"_index":876,"title":{},"body":{"interceptors/JwtInterceptor.html":{},"coverage.html":{}}}],["src/app/shared/helpers/jwt.interceptor.ts:11",{"_index":880,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["src/app/shared/helpers/jwt.interceptor.ts:7",{"_index":878,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["src/app/shared/services/toast.service.ts",{"_index":1196,"title":{},"body":{"injectables/ToastService.html":{},"coverage.html":{}}}],["src/app/shared/services/toast.service.ts:10",{"_index":1219,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/shared/services/toast.service.ts:12",{"_index":1204,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/shared/services/toast.service.ts:16",{"_index":1201,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/shared/services/toast.service.ts:20",{"_index":1217,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/shared/services/toast.service.ts:29",{"_index":1209,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/shared/shared.module.ts",{"_index":1174,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/environments/environment.mock",{"_index":1309,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.mock.ts",{"_index":1311,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":1312,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1313,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1314,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":1367,"title":{},"body":{"index.html":{}}}],["started",{"_index":1342,"title":{"index.html":{}},"body":{}}],["state",{"_index":23,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["state.url",{"_index":229,"title":{},"body":{"guards/AuthGuard.html":{}}}],["statements",{"_index":1274,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":593,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["status",{"_index":1029,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["string",{"_index":211,"title":{},"body":{"interfaces/AuthData.html":{},"interfaces/AuthResponse.html":{},"classes/Client.html":{},"components/ClientsComponent.html":{},"classes/Config.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"classes/Project.html":{},"injectables/ToastService.html":{},"classes/User.html":{},"components/UsersComponent.html":{}}}],["strings",{"_index":77,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/UsersComponent.html":{}}}],["styles",{"_index":579,"title":{},"body":{"components/ConfigsTableComponent.html":{},"components/FooterComponent.html":{},"components/NavbarComponent.html":{}}}],["styles.scss",{"_index":822,"title":{},"body":{"components/FooterComponent.html":{},"components/NavbarComponent.html":{}}}],["styleurls",{"_index":80,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/UsersComponent.html":{}}}],["subscribe",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{},"components/ConfigsComponent.html":{},"components/LoginComponent.html":{}}}],["success",{"_index":1218,"title":{},"body":{"injectables/ToastService.html":{}}}],["support",{"_index":1372,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":672,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["svg",{"_index":1373,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":576,"title":{},"body":{"components/ConfigsComponent.html":{},"interceptors/MockInterceptor.html":{}}}],["system_admin",{"_index":1339,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["t",{"_index":1223,"title":{},"body":{"injectables/ToastService.html":{}}}],["table",{"_index":583,"title":{},"body":{"components/ConfigsTableComponent.html":{},"coverage.html":{}}}],["table'},{'name",{"_index":101,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{}}}],["table.component",{"_index":1120,"title":{},"body":{"modules/PagesModule.html":{}}}],["table.component.html",{"_index":585,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["table.component.scss",{"_index":584,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["table.component.ts",{"_index":582,"title":{},"body":{"components/ConfigsTableComponent.html":{},"coverage.html":{}}}],["table.component.ts:103",{"_index":635,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["table.component.ts:133",{"_index":631,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["table.component.ts:14",{"_index":640,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["table.component.ts:15",{"_index":615,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["table.component.ts:16",{"_index":614,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["table.component.ts:160",{"_index":629,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["table.component.ts:17",{"_index":617,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["table.component.ts:18",{"_index":641,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["table.component.ts:186",{"_index":619,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["table.component.ts:19",{"_index":645,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["table.component.ts:198",{"_index":637,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["table.component.ts:20",{"_index":644,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["table.component.ts:208",{"_index":622,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["table.component.ts:21",{"_index":613,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["table.component.ts:28",{"_index":627,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["table.component.ts:32",{"_index":620,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["table.component.ts:45",{"_index":624,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["table.component.ts:54",{"_index":647,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["table.component.ts:58",{"_index":618,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["table.component.ts:63",{"_index":639,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["table.component.ts:72",{"_index":633,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["table.component.ts:91",{"_index":626,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["table/configs",{"_index":581,"title":{},"body":{"components/ConfigsTableComponent.html":{},"modules/PagesModule.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1317,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":58,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{}}}],["templateref",{"_index":1191,"title":{},"body":{"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["templateurl",{"_index":71,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{}}}],["tempobject",{"_index":459,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/UsersComponent.html":{}}}],["tempobject.client",{"_index":463,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/UsersComponent.html":{}}}],["tempobject.project",{"_index":461,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/UsersComponent.html":{}}}],["text",{"_index":1089,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/ToastService.html":{}}}],["textortpl",{"_index":1205,"title":{},"body":{"injectables/ToastService.html":{}}}],["then((data",{"_index":358,"title":{},"body":{"injectables/ClientService.html":{},"injectables/ConfigService.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{}}}],["thirdline",{"_index":676,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["this._modalservice.open(content",{"_index":680,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["this._modalservice.open(modals[name",{"_index":704,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["this._modalservice.open(ngbdmodalconfirmautofocus",{"_index":679,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["this.activatedroute.queryparams.pipe(first()).subscribe(params",{"_index":908,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.activatedroute.queryparams.subscribe",{"_index":559,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["this.activatedroute.snapshot.queryparams",{"_index":460,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/UsersComponent.html":{}}}],["this.activatedroute.snapshot.queryparams.client",{"_index":456,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/UsersComponent.html":{}}}],["this.activatedroute.snapshot.queryparams.project",{"_index":408,"title":{},"body":{"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/UsersComponent.html":{}}}],["this.activatedroute.snapshot.queryparams.user",{"_index":562,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["this.authenticationservice.currentuservalue",{"_index":881,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["this.authservice.authorize",{"_index":919,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.currentdecodeduservalue",{"_index":912,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["this.authservice.currentuser.subscribe",{"_index":1072,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.authservice.currentuservalue",{"_index":225,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.authservice.isadmin",{"_index":47,"title":{},"body":{"guards/AdminGuard.html":{},"components/NavbarComponent.html":{}}}],["this.authservice.logout",{"_index":810,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/NavbarComponent.html":{}}}],["this.authservice.processlogin(code).pipe(first",{"_index":911,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.change.emit(item",{"_index":788,"title":{},"body":{"components/DropDownComponent.html":{}}}],["this.clientid",{"_index":455,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/UsersComponent.html":{}}}],["this.clientid}}).then",{"_index":870,"title":{},"body":{"components/GlobalConfigsComponent.html":{}}}],["this.clients",{"_index":418,"title":{},"body":{"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/UsersComponent.html":{}}}],["this.clientservice.getallclients",{"_index":419,"title":{},"body":{"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/UsersComponent.html":{}}}],["this.closeresult",{"_index":687,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["this.configform",{"_index":690,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["this.configform.get('config",{"_index":657,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["this.configobject",{"_index":659,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["this.configs",{"_index":568,"title":{},"body":{"components/ConfigsComponent.html":{},"components/GlobalConfigsComponent.html":{}}}],["this.configservice.getconfigbyprojectidclientid(this.projectid",{"_index":569,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["this.configservice.getglobalconfigbyclientid(this.clientid",{"_index":871,"title":{},"body":{"components/GlobalConfigsComponent.html":{}}}],["this.configservice.postconfigbyprojectidandclientid(this.projectid",{"_index":575,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["this.configservice.postconfigbyprojectidandclientidanduserid(this.projectid",{"_index":573,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["this.configservice.postglobalconfigbyclientid(this.clientid",{"_index":872,"title":{},"body":{"components/GlobalConfigsComponent.html":{}}}],["this.currentdecodeduservalue",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentdecodeduservalue.role",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentuser",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["this.currentusersubject",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentusersubject.asobservable",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentusersubject.next(null",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentusersubject.next(user",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentusersubject.value",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentuservalue",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.fb.array",{"_index":691,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["this.fb.group",{"_index":661,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["this.getallclientsobservable().topromise",{"_index":357,"title":{},"body":{"injectables/ClientService.html":{}}}],["this.getallprojectsobservable().topromise",{"_index":1147,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.getclients",{"_index":457,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/UsersComponent.html":{}}}],["this.getconfigbyprojectidclientidobservable(projectid",{"_index":511,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.getconfigformvalue().config",{"_index":712,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["this.getconfigs",{"_index":692,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["this.getdismissreason(reason",{"_index":689,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["this.getglobalconfigbyclientidobservable(clientid).topromise",{"_index":499,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.getprojects",{"_index":410,"title":{},"body":{"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/UsersComponent.html":{}}}],["this.getusers",{"_index":564,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["this.getusersbyprojectidobservable(projectid).topromise",{"_index":1239,"title":{},"body":{"injectables/UserService.html":{}}}],["this.global",{"_index":700,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["this.http.get(`${environment.authapi}/authorize?client_id=${environment.clientid}&response_type=code&redirect_uri=${environment.authcallback",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.get(`${environment.backendurl}/clients",{"_index":355,"title":{},"body":{"injectables/ClientService.html":{}}}],["this.http.get(`${environment.backendurl}/global/config/${clientid",{"_index":498,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.http.get(`${environment.backendurl}/projects",{"_index":1146,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.http.get(`${environment.backendurl}/projects/${projectid}/users",{"_index":1238,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(`/api/projects/${projectid}/config/${clientid",{"_index":510,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.http.post(`${environment.authapi}/token",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(`/api/global/config/${clientid",{"_index":515,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.http.post(`/api/projects/${projectid}/config/${clientid",{"_index":517,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.http.post(`/api/projects/${projectid}/users/${userid}/config/${clientid",{"_index":518,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.init",{"_index":560,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["this.initialize",{"_index":655,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["this.isadmin",{"_index":1073,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.isnavmenuactive",{"_index":1075,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.loading",{"_index":417,"title":{},"body":{"components/ClientsComponent.html":{},"components/ConfigsComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LoginComponent.html":{},"components/ProjectsComponent.html":{},"components/UsersComponent.html":{}}}],["this.modaldescription",{"_index":669,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["this.modalheader",{"_index":667,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["this.navbaropen",{"_index":1077,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.projectid",{"_index":407,"title":{},"body":{"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/UsersComponent.html":{}}}],["this.projects",{"_index":409,"title":{},"body":{"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ProjectsComponent.html":{},"components/UsersComponent.html":{}}}],["this.projectservice.getallprojects",{"_index":413,"title":{},"body":{"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ProjectsComponent.html":{},"components/UsersComponent.html":{}}}],["this.route.snapshot.queryparams",{"_index":696,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["this.router.navigate(['/clients",{"_index":416,"title":{},"body":{"components/ClientsComponent.html":{},"components/ConfigsTableComponent.html":{}}}],["this.router.navigate(['/configs",{"_index":462,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{}}}],["this.router.navigate(['/global",{"_index":701,"title":{},"body":{"components/ConfigsTableComponent.html":{},"components/GlobalConfigsComponent.html":{}}}],["this.router.navigate(['/login",{"_index":1076,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.router.navigate(['/users",{"_index":1267,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.router.navigate(['login",{"_index":226,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.navigate(['projects",{"_index":50,"title":{},"body":{"guards/AdminGuard.html":{}}}],["this.router.navigatebyurl('global",{"_index":917,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigatebyurl('projects",{"_index":916,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigatebyurl(returnurl",{"_index":914,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.save.emit(this.configform.value",{"_index":666,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["this.show(customtpl",{"_index":1226,"title":{},"body":{"injectables/ToastService.html":{}}}],["this.show(message",{"_index":1224,"title":{},"body":{"injectables/ToastService.html":{}}}],["this.toasts",{"_index":1221,"title":{},"body":{"injectables/ToastService.html":{}}}],["this.toasts.filter(t",{"_index":1222,"title":{},"body":{"injectables/ToastService.html":{}}}],["this.toasts.push",{"_index":1220,"title":{},"body":{"injectables/ToastService.html":{}}}],["this.toastservice.showerror(e",{"_index":367,"title":{},"body":{"injectables/ClientService.html":{},"injectables/ConfigService.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{}}}],["this.toastservice.showsuccess('clients",{"_index":364,"title":{},"body":{"injectables/ClientService.html":{}}}],["this.toastservice.showsuccess('projects",{"_index":1152,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.toastservice.showsuccess(`configurations",{"_index":509,"title":{},"body":{"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{}}}],["this.toastservice.showsuccess(`global",{"_index":874,"title":{},"body":{"components/GlobalConfigsComponent.html":{}}}],["this.toastservice.showsuccess(`users",{"_index":1243,"title":{},"body":{"injectables/UserService.html":{}}}],["this.updateclients",{"_index":411,"title":{},"body":{"components/ClientsComponent.html":{},"components/GlobalClientsComponent.html":{}}}],["this.updateconfigs",{"_index":565,"title":{},"body":{"components/ConfigsComponent.html":{},"components/GlobalConfigsComponent.html":{}}}],["this.updateenabled",{"_index":693,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["this.updateusers",{"_index":1266,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.userid",{"_index":561,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["this.users",{"_index":563,"title":{},"body":{"components/ConfigsComponent.html":{},"components/UsersComponent.html":{}}}],["this.userservice.getusersbyprojectid(this.projectid",{"_index":566,"title":{},"body":{"components/ConfigsComponent.html":{},"components/UsersComponent.html":{}}}],["throwerror",{"_index":804,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/MockInterceptor.html":{}}}],["throwerror(error",{"_index":815,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["times",{"_index":733,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["title",{"_index":1097,"title":{},"body":{"components/NavbarComponent.html":{}}}],["title'}).result.then((result",{"_index":683,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["toast",{"_index":354,"title":{},"body":{"injectables/ClientService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["toast.component.html",{"_index":1184,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast.textortpl",{"_index":1194,"title":{},"body":{"components/ToastComponent.html":{}}}],["toastcomponent",{"_index":120,"title":{"components/ToastComponent.html":{}},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"modules/SharedModule.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["toasts",{"_index":1183,"title":{},"body":{"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["toasts'},{'name",{"_index":121,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{}}}],["toastservice",{"_index":346,"title":{"injectables/ToastService.html":{}},"body":{"injectables/ClientService.html":{},"components/ConfigSelectionPageComponent.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"components/GlobalConfigsComponent.html":{},"injectables/ProjectService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["todo",{"_index":698,"title":{},"body":{"components/ConfigsTableComponent.html":{},"interceptors/MockInterceptor.html":{}}}],["togglenavbar",{"_index":1063,"title":{},"body":{"components/NavbarComponent.html":{}}}],["token",{"_index":209,"title":{},"body":{"interfaces/AuthData.html":{},"interfaces/AuthResponse.html":{},"interceptors/MockInterceptor.html":{},"miscellaneous/variables.html":{}}}],["token_type",{"_index":219,"title":{},"body":{"interfaces/AuthData.html":{},"interfaces/AuthResponse.html":{}}}],["top",{"_index":840,"title":{},"body":{"components/FooterComponent.html":{}}}],["transform",{"_index":1090,"title":{},"body":{"components/NavbarComponent.html":{}}}],["tree",{"_index":60,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{}}}],["true",{"_index":49,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"components/ClientsComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{},"components/ProjectsComponent.html":{},"modules/SharedModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1331,"title":{},"body":{"dependencies.html":{}}}],["tslint:disable",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{},"components/ConfigsComponent.html":{},"interceptors/MockInterceptor.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":19,"title":{},"body":{"guards/AdminGuard.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"classes/Client.html":{},"injectables/ClientService.html":{},"components/ClientsComponent.html":{},"classes/Config.html":{},"components/ConfigSelectionPageComponent.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{},"components/NavbarComponent.html":{},"classes/Project.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["u.id",{"_index":1012,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["ubw9aobgiv7zw7we1tpldpwdcd",{"_index":1415,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unauthorized",{"_index":974,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["undone",{"_index":678,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["updateclients",{"_index":382,"title":{},"body":{"components/ClientsComponent.html":{},"components/GlobalClientsComponent.html":{}}}],["updateconfigs",{"_index":526,"title":{},"body":{"components/ConfigsComponent.html":{},"components/GlobalConfigsComponent.html":{}}}],["updateenabled",{"_index":589,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["updateusers",{"_index":1246,"title":{},"body":{"components/UsersComponent.html":{}}}],["uppercase",{"_index":1091,"title":{},"body":{"components/NavbarComponent.html":{}}}],["url",{"_index":939,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["url.endswith('/api/clients",{"_index":950,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["url.endswith('/api/projects",{"_index":949,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["url.match(/\\/api\\/global\\/config",{"_index":957,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["url.match(/\\/api\\/projects\\/[a",{"_index":951,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["url.split",{"_index":1038,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["url.startswith(`${environment.authapi}/authorize?client_id=${environment.clientid}&response_type=code&redirect_uri=${environment.authcallback",{"_index":961,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["url.startswith(`${environment.authapi}/researcher",{"_index":963,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["url.startswith(`${environment.authapi}/token",{"_index":966,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["urlencoded",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{}}}],["urlparts",{"_index":1037,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["urlparts[urlparts.length",{"_index":1040,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["urltree",{"_index":31,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["usage",{"_index":1366,"title":{},"body":{"index.html":{}}}],["use",{"_index":1045,"title":{},"body":{"interceptors/MockInterceptor.html":{},"miscellaneous/variables.html":{}}}],["useclass",{"_index":1051,"title":{},"body":{"interceptors/MockInterceptor.html":{},"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":210,"title":{"classes/User.html":{}},"body":{"interfaces/AuthData.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConfigsComponent.html":{},"interceptors/MockInterceptor.html":{},"components/NavbarComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["user.access_token",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.id",{"_index":1270,"title":{},"body":{"components/UsersComponent.html":{}}}],["user.name",{"_index":1269,"title":{},"body":{"components/UsersComponent.html":{}}}],["user.projects",{"_index":980,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["user.projects.map(projectid",{"_index":982,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["userid",{"_index":493,"title":{},"body":{"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"components/UsersComponent.html":{}}}],["userid)[0",{"_index":1013,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["username",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{}}}],["users",{"_index":123,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesRoutingModule.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["users.component.html",{"_index":1245,"title":{},"body":{"components/UsersComponent.html":{}}}],["users.component.scss",{"_index":1265,"title":{},"body":{"components/UsersComponent.html":{}}}],["users.users[0",{"_index":938,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["users.users[1",{"_index":970,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["userscomponent",{"_index":122,"title":{"components/UsersComponent.html":{}},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["userservice",{"_index":528,"title":{"injectables/UserService.html":{}},"body":{"components/ConfigsComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["userslist",{"_index":1009,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["usersofselectedproject",{"_index":1007,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["usersofselectedproject.map(userid",{"_index":1010,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["usevalue",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["uss",{"_index":1396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["value",{"_index":76,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/ClientsComponent.html":{},"classes/Config.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{},"components/NavbarComponent.html":{},"components/ProjectsComponent.html":{},"injectables/ToastService.html":{},"components/UsersComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":88,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{}}}],["variable",{"_index":1026,"title":{},"body":{"interceptors/MockInterceptor.html":{},"coverage.html":{}}}],["variables",{"_index":1383,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1347,"title":{},"body":{"index.html":{}}}],["void",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectsComponent.html":{},"injectables/ToastService.html":{},"components/UsersComponent.html":{}}}],["weight",{"_index":1099,"title":{},"body":{"components/NavbarComponent.html":{}}}],["width",{"_index":827,"title":{},"body":{"components/FooterComponent.html":{}}}],["window.location.href",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/MockInterceptor.html":{}}}],["wrapper",{"_index":1094,"title":{},"body":{"components/NavbarComponent.html":{}}}],["www",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{}}}],["z0",{"_index":953,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["za",{"_index":952,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["zone.js",{"_index":1333,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"guards/AdminGuard.html":{"url":"guards/AdminGuard.html","title":"guard - AdminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth/helpers/admin.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/helpers/admin.guard.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/helpers/admin.guard.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport {AuthService} from '@app/auth/services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AdminGuard implements CanActivate {\n\n  constructor(private router: Router, private authService: AuthService) { }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean | UrlTree {\n    const isAdmin = this.authService.isAdmin;\n    if (isAdmin) {\n      return true;\n    }\n\n    this.router.navigate(['projects']);\n    return false;\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminSelectionPageComponent.html":{"url":"components/AdminSelectionPageComponent.html","title":"component - AdminSelectionPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdminSelectionPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/containers/admin-selection-page/admin-selection-page.component.ts\n\n\n    \n        Description\n    \n    \n        Admin Selection Page Component\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin-selection-page\n            \n\n\n\n\n            \n                templateUrl\n                ./admin-selection-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                __\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            __\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : strings\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/containers/admin-selection-page/admin-selection-page.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport strings from '@i18n/en.json';\n\n/**\n * Admin Selection Page Component\n */\n@Component({\n  selector: 'app-admin-selection-page',\n  templateUrl: './admin-selection-page.component.html',\n  // styleUrls: ['./admin-selection-page.component.scss']\n})\nexport class AdminSelectionPageComponent {\n  __ = strings;\n}\n\n    \n\n    \n        \n  \n    \n      {{__.globalConfigurations}}\n    \n    \n      {{__.allProjects}}\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{__.globalConfigurations}}              {{__.allProjects}}      '\n    var COMPONENTS = [{'name': 'AdminSelectionPageComponent', 'selector': 'app-admin-selection-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ClientsComponent', 'selector': 'app-clients'},{'name': 'ConfigsComponent', 'selector': 'app-configs'},{'name': 'ConfigSelectionPageComponent', 'selector': 'app-config-selection-page'},{'name': 'ConfigsTableComponent', 'selector': 'app-configs-table'},{'name': 'DropDownComponent', 'selector': 'app-dropdown'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalClientsComponent', 'selector': 'app-global-clients'},{'name': 'GlobalConfigsComponent', 'selector': 'app-global-configs'},{'name': 'LeftSidebarComponent', 'selector': 'app-left-sidebar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ToastComponent', 'selector': 'app-toasts'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminSelectionPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  // styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {}\n\n    \n\n    \n        \n\n  \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AdminSelectionPageComponent', 'selector': 'app-admin-selection-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ClientsComponent', 'selector': 'app-clients'},{'name': 'ConfigsComponent', 'selector': 'app-configs'},{'name': 'ConfigSelectionPageComponent', 'selector': 'app-config-selection-page'},{'name': 'ConfigsTableComponent', 'selector': 'app-configs-table'},{'name': 'DropDownComponent', 'selector': 'app-dropdown'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalClientsComponent', 'selector': 'app-global-clients'},{'name': 'GlobalConfigsComponent', 'selector': 'app-global-configs'},{'name': 'LeftSidebarComponent', 'selector': 'app-left-sidebar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ToastComponent', 'selector': 'app-toasts'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAppModule -->\n\nAuthRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nCoreRoutingModule\n\nCoreRoutingModule\n\nAppModule -->\n\nCoreRoutingModule->AppModule\n\n\n\n\n\nMockModule\n\nMockModule\n\nAppModule -->\n\nMockModule->AppModule\n\n\n\n\n\nPagesModule\n\nPagesModule\n\nAppModule -->\n\nPagesModule->AppModule\n\n\n\n\n\nPagesRoutingModule\n\nPagesRoutingModule\n\nAppModule -->\n\nPagesRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            AuthRoutingModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            CoreRoutingModule\n                        \n                        \n                            MockModule\n                        \n                        \n                            PagesModule\n                        \n                        \n                            PagesRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule} from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AuthModule } from './auth/auth.module';\nimport { MatIconModule } from '@angular/material/icon';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CoreModule } from '@app/core/core.module';\nimport { SharedModule } from '@app/shared/shared.module';\nimport {AuthRoutingModule} from '@app/auth/auth-routing.module';\nimport {CoreRoutingModule} from '@app/core/core-routing.module';\nimport {MockModule} from '@app/mock/mock.module';\nimport {APP_BASE_HREF} from \"@angular/common\";\nimport {environment} from \"@environments/environment\";\nimport {PagesModule} from \"@app/pages/pages.module\";\nimport {PagesRoutingModule} from \"@app/pages/pages-routing.module\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    SharedModule,\n    PagesModule,\n    MockModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatIconModule,\n    AuthModule,\n    CoreModule,\n    CoreRoutingModule,\n      PagesRoutingModule,\n    AuthRoutingModule,\n    AppRoutingModule\n  ],\n  providers: [\n    { provide: APP_BASE_HREF, useValue: environment.baseURL },\n  ],\n  bootstrap: [AppComponent],\n\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitleText\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo() {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n\n  getTitleText() {\n    return element(by.css('app-root .content span')).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PageNotFoundComponent } from '@app/core/containers/page-not-found/page-not-found.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: '/login',\n    pathMatch: 'full'\n  },\n  {\n    path: '**',\n    component: PageNotFoundComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthData.html":{"url":"interfaces/AuthData.html","title":"interface - AuthData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/models/auth.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        token\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { User } from './user';\n\nexport interface AuthResponse {\n  access_token: string;\n  expires_in: number;\n  iat: number;\n  iss: string;\n  jti: string;\n  token_type: string;\n}\n\nexport interface AuthData {\n  token: string;\n  user: User;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth/helpers/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/helpers/auth.guard.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/helpers/auth.guard.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport {AuthService} from '@app/auth/services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthGuard implements CanActivate {\n\n  constructor(private router: Router, private authService: AuthService) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean | UrlTree {\n\n    const currentUser = this.authService.currentUserValue;\n    if (currentUser) {\n      return true;\n    }\n\n    this.router.navigate(['login'], { queryParams: { returnUrl: state.url } });\n    return false;\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nAuthModule->LoginComponent \n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoginComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthRoutingModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LoginComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './containers/login/login.component';\nimport { HttpClientModule} from '@angular/common/http';\nimport { AuthRoutingModule } from '@app/auth/auth-routing.module';\n\n@NgModule({\n  declarations: [LoginComponent],\n  exports: [\n    LoginComponent\n  ],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    AuthRoutingModule\n  ],\n  providers: [],\n})\nexport class AuthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthResponse.html":{"url":"interfaces/AuthResponse.html","title":"interface - AuthResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/models/auth.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        access_token\n                                \n                                \n                                        expires_in\n                                \n                                \n                                        iat\n                                \n                                \n                                        iss\n                                \n                                \n                                        jti\n                                \n                                \n                                        token_type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        access_token\n                                    \n                                \n                                \n                                    \n                                        access_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expires_in\n                                    \n                                \n                                \n                                    \n                                        expires_in:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iat\n                                    \n                                \n                                \n                                    \n                                        iat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iss\n                                    \n                                \n                                \n                                    \n                                        iss:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jti\n                                    \n                                \n                                \n                                    \n                                        jti:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token_type\n                                    \n                                \n                                \n                                    \n                                        token_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { User } from './user';\n\nexport interface AuthResponse {\n  access_token: string;\n  expires_in: number;\n  iat: number;\n  iss: string;\n  jti: string;\n  token_type: string;\n}\n\nexport interface AuthData {\n  token: string;\n  user: User;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthRoutingModule.html":{"url":"modules/AuthRoutingModule.html","title":"module - AuthRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {LoginComponent} from '@app/auth/containers/login/login.component';\n\nconst routes: Routes = [\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/services/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentUser\n                            \n                            \n                                    Private\n                                currentUserSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authorize\n                            \n                            \n                                logout\n                            \n                            \n                                processLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    currentUserValue\n                                \n                                \n                                    isAdmin\n                                \n                                \n                                    currentDecodedUserValue\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/services/auth.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            authorize\n                        \n                        \n                    \n                \n            \n            \n                \nauthorize()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/services/auth.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/services/auth.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            processLogin\n                        \n                        \n                    \n                \n            \n            \n                \nprocessLogin(authCode: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/services/auth.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authCode\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/services/auth.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentUserSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BehaviorSubject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/services/auth.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        currentUserValue\n                    \n                \n\n                \n                    \n                        getcurrentUserValue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/services/auth.service.ts:24\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isAdmin\n                    \n                \n\n                \n                    \n                        getisAdmin()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/services/auth.service.ts:28\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        currentDecodedUserValue\n                    \n                \n\n                \n                    \n                        getcurrentDecodedUserValue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/services/auth.service.ts:33\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {map} from 'rxjs/operators';\nimport * as jwt_decode from 'jwt-decode';\nimport {AuthResponse} from '@app/auth/models/auth';\nimport {Roles} from '@app/auth/enums/roles.enum';\nimport {User} from '@app/auth/models/user';\nimport {environment} from '@environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private currentUserSubject: BehaviorSubject;\n  public currentUser: Observable;\n\n  constructor(private http: HttpClient) {\n    this.currentUserSubject = new BehaviorSubject(JSON.parse(localStorage.getItem('currentUser')));\n    this.currentUser = this.currentUserSubject.asObservable();\n  }\n\n  public get currentUserValue(): AuthResponse {\n    return this.currentUserSubject.value;\n  }\n\n  public get isAdmin(): boolean {\n    if (this.currentDecodedUserValue) { return this.currentDecodedUserValue.role === Roles.SYSTEM_ADMIN; }\n    return false;\n  }\n\n  public get currentDecodedUserValue(): User {\n    const currentUser = this.currentUserValue;\n    const isLoggedIn = Boolean(currentUser && currentUser.access_token);\n\n    if (isLoggedIn) {\n      const jwtDecoded = jwt_decode(currentUser.access_token);\n      return {username: jwtDecoded.user_name, role: jwtDecoded.authorities[0] };\n    }\n    return null;\n  }\n\n  logout() {\n    localStorage.removeItem('currentUser');\n    this.currentUserSubject.next(null);\n  }\n\n  processLogin(authCode: any) {\n    const payload = new HttpParams()\n      .append('grant_type', 'authorization_code')\n      .append('code', authCode)\n      .append('redirect_uri', environment.authCallback)\n      .append('client_id', environment.clientId);\n    return this.http.post(`${environment.authAPI}/token`, payload, {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      }\n    }).pipe(map((user: AuthResponse) => {\n      if (user && user.access_token) {\n        localStorage.setItem('currentUser', JSON.stringify(user));\n        this.currentUserSubject.next(user);\n      }\n      return user;\n    }));\n  }\n\n  authorize() {\n    if (environment.envName === 'mock' || environment.envName === 'mock-researcher') {\n      // tslint:disable-next-line:max-line-length\n      return this.http.get(`${environment.authAPI}/authorize?client_id=${environment.clientId}&response_type=code&redirect_uri=${environment.authCallback}`)\n        .subscribe();\n    } else {\n      window.location.href =\n        `${environment.authAPI}/authorize?client_id=${environment.clientId}&response_type=code&redirect_uri=${environment.authCallback}`;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Client.html":{"url":"classes/Client.html","title":"class - Client","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Client\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/models/client.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clientId\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clientId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/models/client.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/models/client.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/models/client.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Client {\n  id: string;\n  clientId: string;\n  name: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ClientService.html":{"url":"injectables/ClientService.html","title":"injectable - ClientService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ClientService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/services/client.service.ts\n        \n\n            \n                Description\n            \n            \n                Client Service\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getAllClients\n                            \n                            \n                                    Private\n                                getAllClientsObservable\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/services/client.service.ts:15\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllClients\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllClients()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/services/client.service.ts:36\n                \n            \n\n\n            \n                \n                    getAllClients\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        clients\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getAllClientsObservable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllClientsObservable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/services/client.service.ts:28\n                \n            \n\n\n            \n                \n                    getAllClientsObservable\n\n\n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        clients observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {Client} from '@app/pages/models/client';\nimport {ToastService} from '@app/shared/services/toast.service';\nimport {environment} from \"@environments/environment\";\n\n/**\n * Client Service\n */\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ClientService {\n\n  /**\n   * constructor\n   * @params http\n   * toast service\n   */\n  constructor(private http: HttpClient, private toastService: ToastService) { }\n\n  /**\n   * getAllClientsObservable\n   * @returns clients observable\n   */\n  private getAllClientsObservable(): Observable {\n    return this.http.get(`${environment.backendUrl}/clients`);\n  }\n\n  /**\n   * getAllClients\n   * @returns clients\n   */\n  async getAllClients(): Promise {\n    return await this.getAllClientsObservable().toPromise()\n      .then((data: any) => {\n        const clients: [Client] = data.clients;\n        clients.forEach(c => c.id = c.name = c.clientId);\n        this.toastService.showSuccess('Clients loaded.');\n        return clients;\n      })\n      .catch(e => {\n        this.toastService.showError(e);\n        console.log(e);\n      })\n      .finally(() => {});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ClientsComponent.html":{"url":"components/ClientsComponent.html","title":"component - ClientsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ClientsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/containers/clients/clients.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-clients\n            \n\n\n\n\n            \n                templateUrl\n                ./clients.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                __\n                            \n                            \n                                clients\n                            \n                            \n                                loading\n                            \n                            \n                                projectId\n                            \n                            \n                                projects\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getProjects\n                            \n                            \n                                makeBackButton\n                            \n                            \n                                makeQueryParams\n                            \n                            \n                                makeState\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                onProjectChange\n                            \n                            \n                                    Async\n                                updateClients\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(clientService: ClientService, projectService: ProjectService, activatedRoute: ActivatedRoute, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/containers/clients/clients.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clientService\n                                                  \n                                                        \n                                                                        ClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getProjects\n                        \n                        \n                    \n                \n            \n            \n                \ngetProjects()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/containers/clients/clients.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            makeBackButton\n                        \n                        \n                    \n                \n            \n            \n                \nmakeBackButton()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/containers/clients/clients.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { routerLink: {}; queryParams: string; name: string; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            makeQueryParams\n                        \n                        \n                    \n                \n            \n            \n                \nmakeQueryParams(clientId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/containers/clients/clients.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    clientId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { project: any; client: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            makeState\n                        \n                        \n                    \n                \n            \n            \n                \nmakeState()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/containers/clients/clients.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { projects: [any]; clients: void | [any]; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/containers/clients/clients.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onProjectChange\n                        \n                        \n                    \n                \n            \n            \n                \nonProjectChange(d)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/containers/clients/clients.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    d\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateClients\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateClients()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/containers/clients/clients.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            __\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : strings\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/containers/clients/clients.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clients\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :      | void\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/containers/clients/clients.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/containers/clients/clients.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            projectId\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/containers/clients/clients.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            projects\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         [Project]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/containers/clients/clients.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {Project} from '@app/pages/models/project';\nimport {ProjectService} from '@app/pages/services/project.service';\nimport {Client} from '@app/pages/models/client';\nimport {ClientService} from '@app/pages/services/client.service';\nimport strings from '@i18n/en.json';\n\n@Component({\n  selector: 'app-clients',\n  templateUrl: './clients.component.html',\n  // styleUrls: ['./clients.component.scss']\n})\n\nexport class ClientsComponent implements OnInit {\n  __ = strings;\n  loading = false;\n  projectId;\n  clients: [Client] | void;\n  projects: [Project];\n\n  constructor(\n    private clientService: ClientService,\n    private projectService: ProjectService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router) {}\n\n  async ngOnInit() {\n    this.projectId = this.activatedRoute.snapshot.queryParams.project;\n    this.projects = await this.getProjects();\n    this.updateClients();\n  }\n\n  getProjects() {\n    if (!this.projectId) { return; }\n    const {projects} = history.state;\n    return (projects ? projects : this.projectService.getAllProjects());\n  }\n\n  onProjectChange(d) {\n    console.log(d);\n    this.updateClients();\n    this.projectId = d.name;\n    this.router.navigate(['/clients'], {queryParams: {project: this.projectId}});\n  }\n\n  async updateClients() {\n    this.loading = true;\n    this.clients = await this.clientService.getAllClients();\n    this.loading = false;\n  }\n\n  makeState() {\n    return {projects: this.projects, clients: this.clients};\n  }\n\n  makeQueryParams(clientId) {\n    return {project: this.projectId, client: clientId};\n  }\n\n  makeBackButton() {\n    if (!this.projectId) { return; }\n    return {routerLink: ['/projects'], queryParams: '', name: 'Projects'};\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n        Global Configurations\n        Projects\n      \n    \n    \n      \n        \n      \n      {{__.selectAnApplication}}\n      {{__.loading}}\n      \n          \n            \n              \n                \n                  {{client.clientId}}\n                \n              \n            \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          Global Configurations        Projects                                        {{__.selectAnApplication}}      {{__.loading}}                                                                            {{client.clientId}}                                                                        '\n    var COMPONENTS = [{'name': 'AdminSelectionPageComponent', 'selector': 'app-admin-selection-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ClientsComponent', 'selector': 'app-clients'},{'name': 'ConfigsComponent', 'selector': 'app-configs'},{'name': 'ConfigSelectionPageComponent', 'selector': 'app-config-selection-page'},{'name': 'ConfigsTableComponent', 'selector': 'app-configs-table'},{'name': 'DropDownComponent', 'selector': 'app-dropdown'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalClientsComponent', 'selector': 'app-global-clients'},{'name': 'GlobalConfigsComponent', 'selector': 'app-global-configs'},{'name': 'LeftSidebarComponent', 'selector': 'app-left-sidebar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ToastComponent', 'selector': 'app-toasts'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ClientsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Config.html":{"url":"classes/Config.html","title":"class - Config","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Config\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/models/config.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clientId\n                            \n                            \n                                config\n                            \n                            \n                                defaults\n                            \n                            \n                                scope\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clientId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/models/config.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     [literal type]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/models/config.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaults\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     [literal type]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/models/config.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scope\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/models/config.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Config {\n  clientId: string;\n  scope: string;\n  config: [{\n    name: string;\n    value: string;\n    default: string;\n  }];\n  defaults: [\n    {\n      name: string;\n      value: string;\n      scope: string;\n    }\n  ];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfigSelectionPageComponent.html":{"url":"components/ConfigSelectionPageComponent.html","title":"component - ConfigSelectionPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConfigSelectionPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/containers/config-selection-page/config-selection-page.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-config-selection-page\n            \n\n\n\n\n            \n                templateUrl\n                ./config-selection-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                __\n                            \n                            \n                                clientId\n                            \n                            \n                                clients\n                            \n                            \n                                projectId\n                            \n                            \n                                projects\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getClients\n                            \n                            \n                                getProjects\n                            \n                            \n                                makeBackButton\n                            \n                            \n                                makeQueryParams\n                            \n                            \n                                makeState\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                onClientChange\n                            \n                            \n                                onProjectChange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, activatedRoute: ActivatedRoute, router: Router, toastService: ToastService, projectService: ProjectService, clientService: ClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/containers/config-selection-page/config-selection-page.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clientService\n                                                  \n                                                        \n                                                                        ClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getClients\n                        \n                        \n                    \n                \n            \n            \n                \ngetClients()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/containers/config-selection-page/config-selection-page.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getProjects\n                        \n                        \n                    \n                \n            \n            \n                \ngetProjects()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/containers/config-selection-page/config-selection-page.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            makeBackButton\n                        \n                        \n                    \n                \n            \n            \n                \nmakeBackButton()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/containers/config-selection-page/config-selection-page.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { routerLink: {}; queryParams: { project: any; }; name: string; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            makeQueryParams\n                        \n                        \n                    \n                \n            \n            \n                \nmakeQueryParams()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/containers/config-selection-page/config-selection-page.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { project: any; client: any; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            makeState\n                        \n                        \n                    \n                \n            \n            \n                \nmakeState()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/containers/config-selection-page/config-selection-page.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { projects: [any]; clients: [any]; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/containers/config-selection-page/config-selection-page.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClientChange\n                        \n                        \n                    \n                \n            \n            \n                \nonClientChange(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/containers/config-selection-page/config-selection-page.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onProjectChange\n                        \n                        \n                    \n                \n            \n            \n                \nonProjectChange(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/containers/config-selection-page/config-selection-page.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            __\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : strings\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/containers/config-selection-page/config-selection-page.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clientId\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/core/containers/config-selection-page/config-selection-page.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clients\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         [Client]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/containers/config-selection-page/config-selection-page.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            projectId\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/core/containers/config-selection-page/config-selection-page.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            projects\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         [Project]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/containers/config-selection-page/config-selection-page.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {Project} from '@app/pages/models/project';\nimport {Client} from '@app/pages/models/client';\nimport {ConfigService} from '@app/pages/services/config.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {ToastService} from '@app/shared/services/toast.service';\nimport {ProjectService} from '@app/pages/services/project.service';\nimport {ClientService} from '@app/pages/services/client.service';\nimport strings from '@i18n/en.json';\n\n@Component({\n  selector: 'app-config-selection-page',\n  templateUrl: './config-selection-page.component.html',\n  // styleUrls: ['./config-selection-page.component.scss']\n})\nexport class ConfigSelectionPageComponent implements OnInit {\n  __ = strings;\n\n  projectId;\n  clientId;\n  projects: [Project];\n  clients: [Client];\n\n  constructor(\n    private configService: ConfigService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private toastService: ToastService,\n    private projectService: ProjectService,\n    private clientService: ClientService) {}\n\n  async ngOnInit() {\n    this.projectId = this.activatedRoute.snapshot.queryParams.project;\n    this.clientId = this.activatedRoute.snapshot.queryParams.client;\n\n    this.projects = await this.getProjects();\n    this.clients = await this.getClients();\n  }\n\n  getProjects() {\n    if (!this.projectId) { return; }\n    const {projects} = history.state;\n    return (projects ? projects : this.projectService.getAllProjects());\n  }\n\n  getClients() {\n    if (!this.clientId) { return; }\n    const {clients} = history.state;\n    return (clients ? clients : this.clientService.getAllClients());\n  }\n\n  onProjectChange(event) {\n    this.projectId = event.id;\n    const tempObject = {...this.activatedRoute.snapshot.queryParams};\n    tempObject.project = this.projectId;\n    this.router.navigate(['/configs'], {queryParams: tempObject});\n  }\n\n  onClientChange(event) {\n    this.clientId = event.id;\n    const tempObject = {...this.activatedRoute.snapshot.queryParams};\n    tempObject.client = this.clientId;\n    this.router.navigate(['/configs'], {queryParams: tempObject});\n  }\n\n  makeState() {\n    return {projects: this.projects, clients: this.clients};\n  }\n\n  makeQueryParams() {\n    return {project: this.projectId, client: this.clientId};\n  }\n\n  makeBackButton() {\n    if (!this.clientId || !this.projectId) { return; }\n    return {routerLink: ['/clients'], queryParams: {project: this.projectId}, name: 'Applications'};\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n        {{__.project}}:\n        \n      \n      \n        {{__.application}}:\n        \n      \n    \n    \n      {{__.configurations}}\n      \n        Edit Application Configuration for\n        \n          All Groups and Users\n        \n        \n          Selected Groups\n        \n        \n          Selected Users\n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      {{__.project}}:                            {{__.application}}:                            {{__.configurations}}              Edit Application Configuration for                  All Groups and Users                          Selected Groups                          Selected Users                    '\n    var COMPONENTS = [{'name': 'AdminSelectionPageComponent', 'selector': 'app-admin-selection-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ClientsComponent', 'selector': 'app-clients'},{'name': 'ConfigsComponent', 'selector': 'app-configs'},{'name': 'ConfigSelectionPageComponent', 'selector': 'app-config-selection-page'},{'name': 'ConfigsTableComponent', 'selector': 'app-configs-table'},{'name': 'DropDownComponent', 'selector': 'app-dropdown'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalClientsComponent', 'selector': 'app-global-clients'},{'name': 'GlobalConfigsComponent', 'selector': 'app-global-configs'},{'name': 'LeftSidebarComponent', 'selector': 'app-left-sidebar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ToastComponent', 'selector': 'app-toasts'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfigSelectionPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigService.html":{"url":"injectables/ConfigService.html","title":"injectable - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/services/config.service.ts\n        \n\n            \n                Description\n            \n            \n                Config Service\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getConfigByProjectIdClientId\n                            \n                            \n                                    Private\n                                getConfigByProjectIdClientIdObservable\n                            \n                            \n                                    Async\n                                getGlobalConfigByClientId\n                            \n                            \n                                    Private\n                                getGlobalConfigByClientIdObservable\n                            \n                            \n                                postConfigByProjectIdAndClientId\n                            \n                            \n                                postConfigByProjectIdAndClientIdAndUserId\n                            \n                            \n                                postGlobalConfigByClientId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/services/config.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getConfigByProjectIdClientId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getConfigByProjectIdClientId(projectId, clientId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/services/config.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getConfigByProjectIdClientIdObservable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getConfigByProjectIdClientIdObservable(projectId, clientId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/services/config.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getGlobalConfigByClientId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGlobalConfigByClientId(clientId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/services/config.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    clientId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getGlobalConfigByClientIdObservable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGlobalConfigByClientIdObservable(clientId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/services/config.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    clientId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postConfigByProjectIdAndClientId\n                        \n                        \n                    \n                \n            \n            \n                \npostConfigByProjectIdAndClientId(projectId, clientId, payload)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/services/config.service.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payload\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postConfigByProjectIdAndClientIdAndUserId\n                        \n                        \n                    \n                \n            \n            \n                \npostConfigByProjectIdAndClientIdAndUserId(projectId, clientId, userId, payload)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/services/config.service.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payload\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postGlobalConfigByClientId\n                        \n                        \n                    \n                \n            \n            \n                \npostGlobalConfigByClientId(clientId, payload)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/services/config.service.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    clientId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payload\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {Config} from '@app/pages/models/config';\nimport {ToastService} from '@app/shared/services/toast.service';\nimport {Observable} from 'rxjs';\nimport {environment} from \"@environments/environment\";\n\n/**\n * Config Service\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigService {\n\n  constructor(private http: HttpClient, private toastService: ToastService) { }\n\n  private getGlobalConfigByClientIdObservable(clientId): Observable {\n    return this.http.get(`${environment.backendUrl}/global/config/${clientId}`);\n  }\n\n  async getGlobalConfigByClientId(clientId) {\n    return await this.getGlobalConfigByClientIdObservable(clientId).toPromise()\n      .then((data: any) => {\n        const {config, defaults} = data;\n        config.forEach(c => {\n          if (defaults) {\n            const defaultValues = defaults.filter(d => d.name === c.name && d.scope === 'global');\n            if (defaultValues.length > 0) {\n              c.default = defaultValues[0].value;\n            }\n          }\n        });\n        this.toastService.showSuccess(`Configurations of Application: ${clientId} loaded.`);\n        return config;\n      })\n      .catch(e => {\n        this.toastService.showError(e);\n        console.log(e);\n      })\n      .finally(() => {});\n  }\n\n\n  private getConfigByProjectIdClientIdObservable(projectId, clientId): Observable {\n    return this.http.get(`/api/projects/${projectId}/config/${clientId}`);\n  }\n\n  async getConfigByProjectIdClientId(projectId, clientId) {\n    return await this.getConfigByProjectIdClientIdObservable(projectId, clientId).toPromise()\n      .then((data: any) => {\n        const {config, defaults} = data;\n        config.forEach(c => {\n          if (defaults) {\n            const defaultValues = defaults.filter(d => d.name === c.name && d.scope === 'global');\n            if (defaultValues.length > 0) {\n              c.default = defaultValues[0].value;\n            }\n          }\n        });\n        this.toastService.showSuccess(`Configurations of Project: ${projectId} - Application: ${clientId} loaded.`);\n        return config;\n      })\n      .catch(e => {\n        this.toastService.showError(e);\n        console.log(e);\n      })\n      .finally();\n  }\n\n  // private getConfigByProjectIdClientIdUserIdObservable(projectId, clientId, userId) {}\n  // getConfigByProjectIdClientIdUserId(projectId, clientId, userId) {}\n\n\n\n  postGlobalConfigByClientId(clientId, payload) {\n    return this.http.post(`/api/global/config/${clientId}`, payload, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n\n  postConfigByProjectIdAndClientId(projectId, clientId, payload) {\n    return this.http.post(`/api/projects/${projectId}/config/${clientId}`, payload, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n\n  postConfigByProjectIdAndClientIdAndUserId(projectId, clientId, userId, payload) {\n    return this.http.post(`/api/projects/${projectId}/users/${userId}/config/${clientId}`, payload, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfigsComponent.html":{"url":"components/ConfigsComponent.html","title":"component - ConfigsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConfigsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/containers/configs/configs.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-configs\n            \n\n\n\n\n            \n                templateUrl\n                ./configs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                __\n                            \n                            \n                                clientId\n                            \n                            \n                                clients\n                            \n                            \n                                configs\n                            \n                            \n                                loading\n                            \n                            \n                                projectId\n                            \n                            \n                                projects\n                            \n                            \n                                userId\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getClients\n                            \n                            \n                                getProjects\n                            \n                            \n                                getUsers\n                            \n                            \n                                    Async\n                                init\n                            \n                            \n                                isActive\n                            \n                            \n                                makeBackButton\n                            \n                            \n                                makeQueryParams\n                            \n                            \n                                makeState\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                onClientChange\n                            \n                            \n                                onProjectChange\n                            \n                            \n                                onSave\n                            \n                            \n                                onUserChange\n                            \n                            \n                                    Async\n                                updateConfigs\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(projectService: ProjectService, clientService: ClientService, userService: UserService, configService: ConfigService, activatedRoute: ActivatedRoute, router: Router, toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/containers/configs/configs.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clientService\n                                                  \n                                                        \n                                                                        ClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getClients\n                        \n                        \n                    \n                \n            \n            \n                \ngetClients()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/containers/configs/configs.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getProjects\n                        \n                        \n                    \n                \n            \n            \n                \ngetProjects()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/containers/configs/configs.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUsers\n                        \n                        \n                    \n                \n            \n            \n                \ngetUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/containers/configs/configs.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/containers/configs/configs.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isActive\n                        \n                        \n                    \n                \n            \n            \n                \nisActive(name)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/containers/configs/configs.component.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            makeBackButton\n                        \n                        \n                    \n                \n            \n            \n                \nmakeBackButton()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/containers/configs/configs.component.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { routerLink: {}; queryParams: { project: any; }; name: string; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            makeQueryParams\n                        \n                        \n                    \n                \n            \n            \n                \nmakeQueryParams()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/containers/configs/configs.component.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { project: any; client: any; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            makeState\n                        \n                        \n                    \n                \n            \n            \n                \nmakeState()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/containers/configs/configs.component.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { projects: [any]; clients: [any]; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/containers/configs/configs.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClientChange\n                        \n                        \n                    \n                \n            \n            \n                \nonClientChange(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/containers/configs/configs.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onProjectChange\n                        \n                        \n                    \n                \n            \n            \n                \nonProjectChange(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/containers/configs/configs.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSave\n                        \n                        \n                    \n                \n            \n            \n                \nonSave(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/containers/configs/configs.component.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onUserChange\n                        \n                        \n                    \n                \n            \n            \n                \nonUserChange(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/containers/configs/configs.component.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateConfigs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateConfigs()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/containers/configs/configs.component.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            __\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : strings\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/containers/configs/configs.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clientId\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/containers/configs/configs.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clients\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :      | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/containers/configs/configs.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            configs\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/containers/configs/configs.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/containers/configs/configs.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            projectId\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/containers/configs/configs.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            projects\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :      | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/containers/configs/configs.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/containers/configs/configs.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            users\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :      | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/containers/configs/configs.component.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {ProjectService} from '@app/pages/services/project.service';\nimport {ClientService} from '@app/pages/services/client.service';\nimport {UserService} from '@app/pages/services/user.service';\nimport {ConfigService} from '@app/pages/services/config.service';\nimport {Project} from '@app/pages/models/project';\nimport {Client} from '@app/pages/models/client';\nimport {ToastService} from '@app/shared/services/toast.service';\nimport strings from '@i18n/en.json';\nimport {User} from \"@app/pages/models/user\";\n\n@Component({\n  selector: 'app-configs',\n  templateUrl: './configs.component.html',\n  // styleUrls: ['./configs.component.scss']\n})\n\nexport class ConfigsComponent implements OnInit {\n  __ = strings;\n\n  projectId;\n  clientId;\n  userId;\n  configs;\n\n  projects: [Project] | null;\n  clients: [Client] | null;\n  users: [User] | null;\n  loading = true;\n\n  constructor(\n    private projectService: ProjectService,\n    private clientService: ClientService,\n    private userService: UserService,\n    private configService: ConfigService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private toastService: ToastService) {console.log('cons');}\n\n  async ngOnInit() {\n    this.activatedRoute.queryParams.subscribe(() => {\n      this.init();\n    });\n  }\n\n  async init(){\n    this.projectId = this.activatedRoute.snapshot.queryParams.project;\n    this.clientId = this.activatedRoute.snapshot.queryParams.client;\n    this.userId = this.activatedRoute.snapshot.queryParams.user;\n\n    this.projects = await this.getProjects();\n    this.clients = await this.getClients();\n    this.users = await this.getUsers();\n\n    this.updateConfigs();\n  }\n\n  getProjects() {\n    if (!this.projectId) { return; }\n    const {projects} = history.state;\n    return (projects ? projects : this.projectService.getAllProjects());\n  }\n\n  getClients() {\n    if (!this.clientId) { return; }\n    const {clients} = history.state;\n    return (clients ? clients : this.clientService.getAllClients());\n  }\n\n  getUsers() {\n    if (!this.userId) { return; }\n    const {users} = history.state;\n    return (users ? users : this.userService.getUsersByProjectId(this.projectId));\n  }\n\n  onProjectChange(event) {\n    this.projectId = event.name;\n    const tempObject = {...this.activatedRoute.snapshot.queryParams};\n    tempObject.project = this.projectId;\n    this.updateConfigs();\n    this.router.navigate(['/configs'], {queryParams: tempObject});\n  }\n\n  onClientChange(event) {\n    this.clientId = event.id;\n    const tempObject = {...this.activatedRoute.snapshot.queryParams};\n    tempObject.client = this.clientId;\n    this.updateConfigs();\n    this.router.navigate(['/configs'], {queryParams: tempObject});\n  }\n\n  onUserChange(event) {\n    this.clientId = event.id;\n    const tempObject = {...this.activatedRoute.snapshot.queryParams};\n    tempObject.client = this.clientId;\n    this.updateConfigs();\n    this.router.navigate(['/configs'], {queryParams: tempObject});\n  }\n\n  async updateConfigs() {\n    this.loading = true;\n    this.configs = await this.configService.getConfigByProjectIdClientId(this.projectId, this.clientId);\n    this.loading = false;\n  }\n\n  onSave(event) {\n    const newConfigArray = event.config.map(c => ({name: c.name, value: c.value}));\n    if (this.projectId && this.clientId && this.userId) {\n      this.configService.postConfigByProjectIdAndClientIdAndUserId(this.projectId, this.clientId, this.userId, {config: newConfigArray})\n        .subscribe(() => {\n          // tslint:disable-next-line:max-line-length\n          this.toastService.showSuccess(`Configurations of Project: ${this.projectId} - Application: ${this.clientId} - User: ${this.userId} changed.`);\n        });\n    } else if (this.projectId && this.clientId && !this.userId) {\n      this.configService.postConfigByProjectIdAndClientId(this.projectId, this.clientId, {config: newConfigArray})\n        .subscribe(() => {\n          this.toastService.showSuccess(`Configurations of Project: ${this.projectId} - Application: ${this.clientId} changed.`);\n        });\n    }\n  }\n\n  isActive(name){\n    switch (name){\n      case 'group':\n        return false;\n      case 'user':\n        return !!this.userId;\n      case 'config':\n        return !!(!this.userId && this.clientId && this.projectId);\n    }\n  }\n\n  makeState() {\n    return {projects: this.projects, clients: this.clients};\n  }\n\n  makeQueryParams() {\n    return {project: this.projectId, client: this.clientId};\n  }\n\n  makeBackButton() {\n    if (!this.clientId || !this.projectId) { return; }\n    return {routerLink: ['/clients'], queryParams: {project: this.projectId}, name: 'Applications'};\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n        Global Configurations\n        Projects\n      \n      \n        All groups and users\n        Groups\n        Users\n      \n    \n    \n      \n        \n          \n            \n            \n          \n          \n            \n          \n        \n        \n      \n      {{__.configurations}}\n      {{__.loading}}\n      \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          Global Configurations        Projects                    All groups and users        Groups        Users                                                                                                                                    {{__.configurations}}      {{__.loading}}                          '\n    var COMPONENTS = [{'name': 'AdminSelectionPageComponent', 'selector': 'app-admin-selection-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ClientsComponent', 'selector': 'app-clients'},{'name': 'ConfigsComponent', 'selector': 'app-configs'},{'name': 'ConfigSelectionPageComponent', 'selector': 'app-config-selection-page'},{'name': 'ConfigsTableComponent', 'selector': 'app-configs-table'},{'name': 'DropDownComponent', 'selector': 'app-dropdown'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalClientsComponent', 'selector': 'app-global-clients'},{'name': 'GlobalConfigsComponent', 'selector': 'app-global-configs'},{'name': 'LeftSidebarComponent', 'selector': 'app-left-sidebar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ToastComponent', 'selector': 'app-toasts'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfigsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfigsTableComponent.html":{"url":"components/ConfigsTableComponent.html","title":"component - ConfigsTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConfigsTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/containers/configs-table/configs-table.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-configs-table\n            \n\n            \n                styleUrls\n                ./configs-table.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./configs-table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                __\n                            \n                            \n                                configForm\n                            \n                            \n                                modalDescription\n                            \n                            \n                                modalHeader\n                            \n                            \n                                updateEnabled\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addConfig\n                            \n                            \n                                getConfigFormValue\n                            \n                            \n                                getConfigs\n                            \n                            \n                                    Private\n                                    Static\n                                getDismissReason\n                            \n                            \n                                initialForm\n                            \n                            \n                                initialize\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onBlur\n                            \n                            \n                                onCancel\n                            \n                            \n                                onPublish\n                            \n                            \n                                onReset\n                            \n                            \n                                open\n                            \n                            \n                                remove\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                configObject\n                            \n                            \n                                global\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                save\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getFormData\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, router: Router, fb: FormBuilder, _modalService: NgbModal)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/containers/configs-table/configs-table.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _modalService\n                                                  \n                                                        \n                                                                    NgbModal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        configObject\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/containers/configs-table/configs-table.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        global\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/containers/configs-table/configs-table.component.ts:15\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        save\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/containers/configs-table/configs-table.component.ts:17\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addConfig\n                        \n                        \n                    \n                \n            \n            \n                \naddConfig()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/containers/configs-table/configs-table.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getConfigFormValue\n                        \n                        \n                    \n                \n            \n            \n                \ngetConfigFormValue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/containers/configs-table/configs-table.component.ts:186\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { config: {}; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getConfigs\n                        \n                        \n                    \n                \n            \n            \n                \ngetConfigs()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/containers/configs-table/configs-table.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            getDismissReason\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDismissReason(reason: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/containers/configs-table/configs-table.component.ts:208\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reason\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initialForm\n                        \n                        \n                    \n                \n            \n            \n                \ninitialForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/containers/configs-table/configs-table.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initialize\n                        \n                        \n                    \n                \n            \n            \n                \ninitialize()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/containers/configs-table/configs-table.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/containers/configs-table/configs-table.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlur\n                        \n                        \n                    \n                \n            \n            \n                \nonBlur(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/containers/configs-table/configs-table.component.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onCancel\n                        \n                        \n                    \n                \n            \n            \n                \nonCancel(content)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/containers/configs-table/configs-table.component.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    content\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onPublish\n                        \n                        \n                    \n                \n            \n            \n                \nonPublish(content)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/containers/configs-table/configs-table.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    content\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onReset\n                        \n                        \n                    \n                \n            \n            \n                \nonReset(content)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/containers/configs-table/configs-table.component.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    content\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            open\n                        \n                        \n                    \n                \n            \n            \n                \nopen(content)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/containers/configs-table/configs-table.component.ts:198\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    content\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/containers/configs-table/configs-table.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            __\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : strings\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/containers/configs-table/configs-table.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            configForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/containers/configs-table/configs-table.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : \"Modal Description\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/containers/configs-table/configs-table.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalHeader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : \"Modal Header\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/containers/configs-table/configs-table.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateEnabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/containers/configs-table/configs-table.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        getFormData\n                    \n                \n\n                \n                    \n                        getgetFormData()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/containers/configs-table/configs-table.component.ts:54\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport strings from '@i18n/en.json';\nimport {FormArray, FormBuilder, FormGroup} from '@angular/forms';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {ModalDismissReasons, NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\n\n@Component({\n  selector: 'app-configs-table',\n  templateUrl: './configs-table.component.html',\n  styleUrls: ['./configs-table.component.scss']\n})\nexport class ConfigsTableComponent implements OnInit {\n\n  __ = strings;\n  @Input() global;\n  @Input() configObject;\n  @Output() save = new EventEmitter();\n  configForm: FormGroup;\n  updateEnabled: boolean = false;\n  modalHeader: any = \"Modal Header\";\n  modalDescription: any = \"Modal Description\";\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private fb: FormBuilder,\n              private _modalService: NgbModal) {}\n\n  ngOnInit() {\n    this.initialize();\n  }\n\n  getConfigs() {\n    const control = this.configForm.get('config') as FormArray;\n    for (const c of this.configObject) {\n      const grp = this.fb.group({\n        name: [c.name],\n        value: [c.value],\n        scope: [c.scope],\n        default: [c.default]\n      });\n      control.push(grp);\n    }\n  }\n\n  initialForm(): FormGroup {\n    return this.fb.group({\n      name: [''],\n      value: [''],\n      scope: [''],\n      default: ['']\n    });\n  }\n\n  get getFormData(): FormArray {\n    return this.configForm.get('config') as FormArray;\n  }\n\n  addConfig() {\n    const control = this.configForm.get('config') as FormArray;\n    control.push(this.initialForm());\n  }\n\n  remove(index: number) {\n    const control = this.configForm.get('config') as FormArray;\n    control.removeAt(index);\n  }\n\n  // onPublish() {\n  //   this.save.emit(this.configForm.value);\n  // }\n\n  onPublish(content) {\n    this.modalHeader = 'Publish configuration';\n    this.modalDescription= {\n      firstLine: `You are going to publish new configurations. Are you sure?`,\n      secondLine: `All configuration will be overwritten permanently.`,\n      thirdLine: `This operation cannot be undone.`\n    };\n    // this._modalService.open(NgbdModalConfirmAutofocus);\n    // this.save.emit(this.configForm.value);\n\n    this._modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\n      console.log(`Closed with: ${result}`);\n      this.save.emit(this.configForm.value);\n    }, (reason) => {\n      console.log(`Dismissed ${ConfigsTableComponent.getDismissReason(reason)}`);\n      // this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n    });\n  }\n\n  initialize() {\n    this.configForm = this.fb.group({\n      config: this.fb.array([])\n    });\n    this.getConfigs();\n  }\n\n  // onReset() {\n  //   this.initialize();\n  //   this.updateEnabled = false;\n  // }\n\n  onReset(content) {\n    this.modalHeader = 'Reset configuration';\n    this.modalDescription= {\n      firstLine: `You are going to reset configurations. Are you sure?`,\n      secondLine: `All configuration will be reset to previous one.`,\n      thirdLine: `This operation cannot be undone.`\n    };\n    this._modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\n      console.log(`Closed with: ${result}`);\n      this.initialize();\n      this.updateEnabled = false;\n    }, (reason) => {\n      console.log(`Dismissed ${ConfigsTableComponent.getDismissReason(reason)}`);\n      // this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n    });\n    // this._modalService.open(NgbdModalConfirmAutofocus);\n  }\n\n  // onCancel() {\n  //   const tempObject = {...this.route.snapshot.queryParams};\n  //   delete tempObject.client;\n  //   // TODO clients or global clients or users or groups?\n  //   // console.log(this.global);\n  //   if (this.global) {\n  //     this.router.navigate(['/global-clients'], {queryParams: tempObject});\n  //   } else {\n  //     this.router.navigate(['/clients'], {queryParams: tempObject});\n  //   }\n  // }\n\n  onCancel(content) {\n    this.modalHeader = 'Cancel configuration';\n    this.modalDescription= {\n      firstLine: `You are going to cancel configurations. Are you sure?`,\n      secondLine: `All configuration will not be saved.`,\n      thirdLine: `This operation cannot be undone.`\n    };\n    this._modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\n      console.log(`Closed with: ${result}`);\n      const tempObject = {...this.route.snapshot.queryParams};\n      delete tempObject.client;\n      // TODO clients or global clients or users or groups?\n      // console.log(this.global);\n      if (this.global) {\n        this.router.navigate(['/global-clients'], {queryParams: tempObject});\n      } else {\n        this.router.navigate(['/clients'], {queryParams: tempObject});\n      }\n    }, (reason) => {\n      console.log(`Dismissed ${ConfigsTableComponent.getDismissReason(reason)}`);\n      // this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n    });\n    // this._modalService.open(MODALS[name]);\n  }\n  \n  // if change occurred save and reset activate\n  // if change focus from input happens, check the change\n  onBlur(event){\n    const configValue = this.getConfigFormValue().config;\n    // console.log(configValue);\n    // if (this.updateEnabled === true) {return;}\n    // console.log('onBlur',event);\n    // console.log(this.configObject);\n    // console.log(this.configForm.value.config);\n    for (let i=0;i {\n      console.log(`Closed with: ${result}`);\n      // this.closeResult = `Closed with: ${result}`;\n    }, (reason) => {\n      console.log(`Dismissed ${ConfigsTableComponent.getDismissReason(reason)}`);\n      // this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n    });\n  }\n\n  private static getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return  `with: ${reason}`;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n        \n          \n            {{__.name}}\n            {{__.value}}\n            {{__.defaultValue}}\n            \n          \n        \n        \n          \n            \n              \n            \n            \n              \n            \n            \n              {{group.value.default}}\n            \n            \n              \n                delete\n              \n            \n          \n        \n      \n    \n    \n      add_circle{{__.addANameValueConfiguration}}\n  \n  \n    {{__.publish}}\n    {{__.reset}}\n    {{__.cancel}}\n  \n\n\n\n\n  \n    {{modalHeader}}\n    \n      &times;\n    \n  \n  \n    {{modalDescription.firstLine}}\n    {{modalDescription.secondLine}}\n      {{modalDescription.thirdLine}}\n    \n  \n  \n    Cancel\n    OK\n  \n\n\n    \n\n    \n                \n                    ./configs-table.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                            {{__.name}}            {{__.value}}            {{__.defaultValue}}                                                                                                                                                      {{group.value.default}}                                                      delete                                                                add_circle{{__.addANameValueConfiguration}}        {{__.publish}}    {{__.reset}}    {{__.cancel}}        {{modalHeader}}          ×            {{modalDescription.firstLine}}    {{modalDescription.secondLine}}      {{modalDescription.thirdLine}}            Cancel    OK  '\n    var COMPONENTS = [{'name': 'AdminSelectionPageComponent', 'selector': 'app-admin-selection-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ClientsComponent', 'selector': 'app-clients'},{'name': 'ConfigsComponent', 'selector': 'app-configs'},{'name': 'ConfigSelectionPageComponent', 'selector': 'app-config-selection-page'},{'name': 'ConfigsTableComponent', 'selector': 'app-configs-table'},{'name': 'DropDownComponent', 'selector': 'app-dropdown'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalClientsComponent', 'selector': 'app-global-clients'},{'name': 'GlobalConfigsComponent', 'selector': 'app-global-configs'},{'name': 'LeftSidebarComponent', 'selector': 'app-left-sidebar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ToastComponent', 'selector': 'app-toasts'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfigsTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_exports\n\n\n\n\nAdminSelectionPageComponent\n\nAdminSelectionPageComponent\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nAdminSelectionPageComponent->CoreModule\n\n\n\n\n\nConfigSelectionPageComponent\n\nConfigSelectionPageComponent\n\nCoreModule -->\n\nConfigSelectionPageComponent->CoreModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nCoreModule -->\n\nFooterComponent->CoreModule\n\n\n\n\n\nLeftSidebarComponent\n\nLeftSidebarComponent\n\nCoreModule -->\n\nLeftSidebarComponent->CoreModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nCoreModule -->\n\nNavbarComponent->CoreModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nCoreModule -->\n\nPageNotFoundComponent->CoreModule\n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nCoreModule->FooterComponent \n\n\n\n\n\nLeftSidebarComponent \n\nLeftSidebarComponent \n\nLeftSidebarComponent  -->\n\nCoreModule->LeftSidebarComponent \n\n\n\n\n\nNavbarComponent \n\nNavbarComponent \n\nNavbarComponent  -->\n\nCoreModule->NavbarComponent \n\n\n\n\n\nCoreRoutingModule\n\nCoreRoutingModule\n\nCoreModule -->\n\nCoreRoutingModule->CoreModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nCoreModule -->\n\nSharedModule->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AdminSelectionPageComponent\n                        \n                        \n                            ConfigSelectionPageComponent\n                        \n                        \n                            FooterComponent\n                        \n                        \n                            LeftSidebarComponent\n                        \n                        \n                            NavbarComponent\n                        \n                        \n                            PageNotFoundComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CoreRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FooterComponent\n                        \n                        \n                            LeftSidebarComponent\n                        \n                        \n                            NavbarComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NavbarComponent } from './containers/navbar/navbar.component';\nimport {MatIconModule} from '@angular/material';\nimport { FooterComponent } from './containers/footer/footer.component';\nimport { PageNotFoundComponent } from './containers/page-not-found/page-not-found.component';\nimport { AdminSelectionPageComponent } from './containers/admin-selection-page/admin-selection-page.component';\nimport {CoreRoutingModule} from '@app/core/core-routing.module';\nimport { LeftSidebarComponent } from './containers/left-sidebar/left-sidebar.component';\nimport { ConfigSelectionPageComponent } from './containers/config-selection-page/config-selection-page.component';\nimport {SharedModule} from '@app/shared/shared.module';\nimport {MatButtonModule} from \"@angular/material/button\";\n\n@NgModule({\n  declarations: [\n    NavbarComponent,\n    FooterComponent,\n    PageNotFoundComponent,\n    AdminSelectionPageComponent,\n    LeftSidebarComponent,\n    ConfigSelectionPageComponent\n  ],\n  exports: [\n    NavbarComponent,\n    FooterComponent,\n    LeftSidebarComponent\n  ],\n    imports: [\n        CommonModule,\n        MatIconModule,\n        CoreRoutingModule,\n        SharedModule,\n        MatButtonModule\n    ]\n})\nexport class CoreModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreRoutingModule.html":{"url":"modules/CoreRoutingModule.html","title":"module - CoreRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n// import {AdminSelectionPageComponent} from '@app/core/containers/admin-selection-page/admin-selection-page.component';\n// import {ConfigSelectionPageComponent} from '@app/core/containers/config-selection-page/config-selection-page.component';\n// import {AdminGuard, AuthGuard} from '@app/auth/helpers';\n\nconst routes: Routes = [\n  // {\n  //   path: 'admin-main',\n  //   component: AdminSelectionPageComponent,\n  //   canActivate: [AuthGuard, AdminGuard]\n  // },\n  // {\n  //   path: 'config-selection',\n  //   component: ConfigSelectionPageComponent,\n  //   canActivate: [AuthGuard]\n  // },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CoreRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DropDownComponent.html":{"url":"components/DropDownComponent.html","title":"component - DropDownComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DropDownComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/drop-down/drop-down.component.ts\n\n\n    \n        Description\n    \n    \n        DropDown Component\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dropdown\n            \n\n\n\n\n            \n                templateUrl\n                ./drop-down.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                field\n                            \n                            \n                                label\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/drop-down/drop-down.component.ts:16\n                            \n                        \n                \n                    \n                        array of dropdown items\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/drop-down/drop-down.component.ts:31\n                            \n                        \n                \n                    \n                        field of item in data which should be displayed in dropdown (e.g. name or projectName)\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/drop-down/drop-down.component.ts:26\n                            \n                        \n                \n                    \n                        dropdown label\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/drop-down/drop-down.component.ts:21\n                            \n                        \n                \n                    \n                        selected item\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        change\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/drop-down/drop-down.component.ts:36\n                            \n                        \n                \n                    \n                        change event emitter\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onChange\n                        \n                        \n                    \n                \n            \n            \n                \nonChange(item: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/drop-down/drop-down.component.ts:42\n                \n            \n\n\n            \n                \n                    On dropdown item click, emit an event to parent\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : dropdown item\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, EventEmitter, Input, Output} from '@angular/core';\n\n/**\n * DropDown Component\n */\n@Component({\n  selector: 'app-dropdown',\n  templateUrl: './drop-down.component.html',\n  // styleUrls: ['./drop-down.component.scss']\n})\n\nexport class DropDownComponent{\n  /**\n   * array of dropdown items\n   */\n  @Input() data;\n\n  /**\n   * selected item\n   */\n  @Input() selected;\n\n  /**\n   * dropdown label\n   */\n  @Input() label;\n\n  /**\n   * field of item in data which should be displayed in dropdown (e.g. name or projectName)\n   */\n  @Input() field;\n\n  /**\n   * change event emitter\n   */\n  @Output() change: EventEmitter = new EventEmitter();\n\n  /**\n   * On dropdown item click, emit an event to parent\n   * @param item: dropdown item\n   */\n  onChange(item: any) {\n      this.change.emit(item);\n  }\n}\n\n    \n\n    \n        \n  \n    {{label}}:\n    \n      {{selected}}\n      \n        {{item[field]}}\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{label}}:          {{selected}}              {{item[field]}}            '\n    var COMPONENTS = [{'name': 'AdminSelectionPageComponent', 'selector': 'app-admin-selection-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ClientsComponent', 'selector': 'app-clients'},{'name': 'ConfigsComponent', 'selector': 'app-configs'},{'name': 'ConfigSelectionPageComponent', 'selector': 'app-config-selection-page'},{'name': 'ConfigsTableComponent', 'selector': 'app-configs-table'},{'name': 'DropDownComponent', 'selector': 'app-dropdown'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalClientsComponent', 'selector': 'app-global-clients'},{'name': 'GlobalConfigsComponent', 'selector': 'app-global-configs'},{'name': 'LeftSidebarComponent', 'selector': 'app-left-sidebar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ToastComponent', 'selector': 'app-toasts'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DropDownComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ErrorInterceptor.html":{"url":"interceptors/ErrorInterceptor.html","title":"interceptor - ErrorInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ErrorInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/helpers/error.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/helpers/error.interceptor.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/helpers/error.interceptor.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport {AuthService} from '@app/auth/services/auth.service';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n    constructor(private authService: AuthService) { }\n\n    intercept(request: HttpRequest, next: HttpHandler): Observable> {\n        return next.handle(request).pipe(catchError(err => {\n            if ([401, 403].indexOf(err.status) !== -1) {\n                this.authService.logout();\n                location.reload(true);\n            }\n            const error = err.error.message || err.statusText;\n            return throwError(error);\n        }));\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/containers/footer/footer.component.ts\n\n\n    \n        Description\n    \n    \n        Footer component\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                styleUrls\n                ./footer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport strings from '@i18n/en.json';\n\n/**\n * Footer component\n */\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\n\nexport class FooterComponent {\n  /**\n   * @ignore\n   */\n  __ = strings;\n}\n\n    \n\n    \n        \n  \n    {{__.footer}}\n  \n\n\n    \n\n    \n                \n                    ./footer.component.scss\n                \n                //@import '../../../../styles.scss';\n//\n//.footer{\n//  display: flex;\n//  justify-content: center;\n//  width: 100%;\n//  height: 3.75em;\n//  padding: 1em;\n//  font-size: 0.8em;\n//  background-color: $color__main_bg;\n//  border-top: $color__accent_bg_semi_transparent solid 1px;\n//}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{__.footer}}  '\n    var COMPONENTS = [{'name': 'AdminSelectionPageComponent', 'selector': 'app-admin-selection-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ClientsComponent', 'selector': 'app-clients'},{'name': 'ConfigsComponent', 'selector': 'app-configs'},{'name': 'ConfigSelectionPageComponent', 'selector': 'app-config-selection-page'},{'name': 'ConfigsTableComponent', 'selector': 'app-configs-table'},{'name': 'DropDownComponent', 'selector': 'app-dropdown'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalClientsComponent', 'selector': 'app-global-clients'},{'name': 'GlobalConfigsComponent', 'selector': 'app-global-configs'},{'name': 'LeftSidebarComponent', 'selector': 'app-left-sidebar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ToastComponent', 'selector': 'app-toasts'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GlobalClientsComponent.html":{"url":"components/GlobalClientsComponent.html","title":"component - GlobalClientsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GlobalClientsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/containers/global-clients/global-clients.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-global-clients\n            \n\n\n\n\n            \n                templateUrl\n                ./global-clients.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                __\n                            \n                            \n                                clients\n                            \n                            \n                                loading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                makeQueryParams\n                            \n                            \n                                makeState\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                updateClients\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(clientService: ClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/containers/global-clients/global-clients.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clientService\n                                                  \n                                                        \n                                                                        ClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            makeQueryParams\n                        \n                        \n                    \n                \n            \n            \n                \nmakeQueryParams(clientId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/containers/global-clients/global-clients.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    clientId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { client: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            makeState\n                        \n                        \n                    \n                \n            \n            \n                \nmakeState()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/containers/global-clients/global-clients.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         { clients: void | [any]; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/containers/global-clients/global-clients.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateClients\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateClients()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/containers/global-clients/global-clients.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            __\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : strings\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/containers/global-clients/global-clients.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clients\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :      | void\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/containers/global-clients/global-clients.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/containers/global-clients/global-clients.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {Client} from '@app/pages/models/client';\nimport {ClientService} from '@app/pages/services/client.service';\nimport strings from '@i18n/en.json';\n\n@Component({\n  selector: 'app-global-clients',\n  templateUrl: './global-clients.component.html',\n  // styleUrls: ['./global-clients.component.scss']\n})\n\nexport class GlobalClientsComponent implements OnInit {\n  __ = strings;\n  loading = false;\n  clients: [Client] | void;\n\n  constructor(private clientService: ClientService) {}\n\n  ngOnInit() {\n    this.updateClients();\n  }\n\n  async updateClients() {\n    this.loading = true;\n    this.clients = await this.clientService.getAllClients();\n    this.loading = false;\n  }\n\n  makeState() {\n    return {clients: this.clients};\n  }\n\n  makeQueryParams(clientId) {\n    return {client: clientId};\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n        Global Configurations\n        Projects\n      \n    \n    \n      {{__.globalApplications}}\n      {{__.selectAnApplication}}\n      {{__.loading}}\n      \n        \n            \n              \n                \n                  {{client.clientId}}\n                \n              \n          \n        \n      \n    \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          Global Configurations        Projects                    {{__.globalApplications}}      {{__.selectAnApplication}}      {{__.loading}}                                                                          {{client.clientId}}                                                                '\n    var COMPONENTS = [{'name': 'AdminSelectionPageComponent', 'selector': 'app-admin-selection-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ClientsComponent', 'selector': 'app-clients'},{'name': 'ConfigsComponent', 'selector': 'app-configs'},{'name': 'ConfigSelectionPageComponent', 'selector': 'app-config-selection-page'},{'name': 'ConfigsTableComponent', 'selector': 'app-configs-table'},{'name': 'DropDownComponent', 'selector': 'app-dropdown'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalClientsComponent', 'selector': 'app-global-clients'},{'name': 'GlobalConfigsComponent', 'selector': 'app-global-configs'},{'name': 'LeftSidebarComponent', 'selector': 'app-left-sidebar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ToastComponent', 'selector': 'app-toasts'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GlobalClientsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GlobalConfigsComponent.html":{"url":"components/GlobalConfigsComponent.html","title":"component - GlobalConfigsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GlobalConfigsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/containers/global-configs/global-configs.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-global-configs\n            \n\n\n\n\n            \n                templateUrl\n                ./global-configs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                __\n                            \n                            \n                                clientId\n                            \n                            \n                                clients\n                            \n                            \n                                configs\n                            \n                            \n                                loading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getClients\n                            \n                            \n                                makeBackButton\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                onClientChange\n                            \n                            \n                                onSave\n                            \n                            \n                                    Async\n                                updateConfigs\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(clientService: ClientService, configService: ConfigService, activatedRoute: ActivatedRoute, router: Router, toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/containers/global-configs/global-configs.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clientService\n                                                  \n                                                        \n                                                                        ClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getClients\n                        \n                        \n                    \n                \n            \n            \n                \ngetClients()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/containers/global-configs/global-configs.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            makeBackButton\n                        \n                        \n                    \n                \n            \n            \n                \nmakeBackButton()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/containers/global-configs/global-configs.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { routerLink: {}; queryParams: {}; name: string; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/containers/global-configs/global-configs.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClientChange\n                        \n                        \n                    \n                \n            \n            \n                \nonClientChange(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/containers/global-configs/global-configs.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSave\n                        \n                        \n                    \n                \n            \n            \n                \nonSave(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/containers/global-configs/global-configs.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateConfigs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateConfigs()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/containers/global-configs/global-configs.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            __\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : strings\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/containers/global-configs/global-configs.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clientId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/containers/global-configs/global-configs.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clients\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :      | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/containers/global-configs/global-configs.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            configs\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/containers/global-configs/global-configs.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/containers/global-configs/global-configs.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {Client} from '@app/pages/models/client';\nimport {ConfigService} from '@app/pages/services/config.service';\nimport {ToastService} from '@app/shared/services/toast.service';\nimport {ClientService} from '@app/pages/services/client.service';\n\nimport strings from '@i18n/en.json';\n\n@Component({\n  selector: 'app-global-configs',\n  templateUrl: './global-configs.component.html',\n  // styleUrls: ['./global-configs.component.scss']\n})\n\nexport class GlobalConfigsComponent implements OnInit {\n  __ = strings;\n\n  clientId: string;\n  configs;\n  clients: [Client] | null;\n  loading = true;\n  // private backButtonObject;\n\n  constructor(\n    private clientService: ClientService,\n    private configService: ConfigService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private toastService: ToastService) {}\n\n  async ngOnInit() {\n    this.clientId = this.activatedRoute.snapshot.queryParams.client;\n    this.clients = await this.getClients();\n    this.updateConfigs();\n  }\n\n  getClients() {\n    if (!this.clientId) { return; }\n    const {clients} = history.state;\n    return (clients ? clients : this.clientService.getAllClients());\n  }\n\n  onClientChange(event) {\n    console.log(\"change\", event);\n    this.clientId = event.id;\n    this.updateConfigs();\n    this.router.navigate(['/global-configs'], {queryParams: {client: this.clientId}}).then(() => {});\n  }\n\n  async updateConfigs() {\n    this.loading = true;\n    this.configs = await this.configService.getGlobalConfigByClientId(this.clientId);\n    this.loading = false;\n  }\n\n  onSave(event) {\n    const newConfigArray = event.config.map(c => ({name: c.name, value: c.value}));\n    this.configService.postGlobalConfigByClientId(this.clientId, {config: newConfigArray}).subscribe(() => {\n      this.toastService.showSuccess(`Global Configurations of App: ${this.clientId} changed.`);\n    });\n  }\n\n  makeBackButton() {\n    if (!this.clientId) { return; }\n    return {routerLink: ['/global-clients'], queryParams: {}, name: 'Applications'};\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n        Global Configurations\n        Projects\n      \n    \n    \n      \n        \n          \n            \n          \n        \n        \n      \n      {{__.globalConfigurations}}\n      {{__.configurations}}\n      {{__.loading}}\n      \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          Global Configurations        Projects                                                                                        {{__.globalConfigurations}}      {{__.configurations}}      {{__.loading}}                          '\n    var COMPONENTS = [{'name': 'AdminSelectionPageComponent', 'selector': 'app-admin-selection-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ClientsComponent', 'selector': 'app-clients'},{'name': 'ConfigsComponent', 'selector': 'app-configs'},{'name': 'ConfigSelectionPageComponent', 'selector': 'app-config-selection-page'},{'name': 'ConfigsTableComponent', 'selector': 'app-configs-table'},{'name': 'DropDownComponent', 'selector': 'app-dropdown'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalClientsComponent', 'selector': 'app-global-clients'},{'name': 'GlobalConfigsComponent', 'selector': 'app-global-configs'},{'name': 'LeftSidebarComponent', 'selector': 'app-left-sidebar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ToastComponent', 'selector': 'app-toasts'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GlobalConfigsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/JwtInterceptor.html":{"url":"interceptors/JwtInterceptor.html","title":"interceptor - JwtInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  JwtInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/helpers/jwt.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/helpers/jwt.interceptor.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/helpers/jwt.interceptor.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {AuthService} from '@app/auth/services/auth.service';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n\n  constructor(private authenticationService: AuthService) { }\n\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n\n    const currentUser = this.authenticationService.currentUserValue;\n    const isLoggedIn = currentUser && currentUser.access_token;\n\n    if (isLoggedIn) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${currentUser.access_token}`\n        }\n      });\n    }\n\n    return next.handle(request);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LeftSidebarComponent.html":{"url":"components/LeftSidebarComponent.html","title":"component - LeftSidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LeftSidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/containers/left-sidebar/left-sidebar.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-left-sidebar\n            \n\n\n\n\n            \n                templateUrl\n                ./left-sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                __\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                backButton\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/containers/left-sidebar/left-sidebar.component.ts:14\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        backButton\n                    \n                \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/containers/left-sidebar/left-sidebar.component.ts:13\n                            \n                        \n            \n        \n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'container-left'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/containers/left-sidebar/left-sidebar.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            __\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : strings\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/containers/left-sidebar/left-sidebar.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, HostBinding, Input} from '@angular/core';\nimport strings from '@i18n/en.json';\n\n@Component({\n  selector: 'app-left-sidebar',\n  templateUrl: './left-sidebar.component.html',\n  // styleUrls: ['./left-sidebar.component.scss'],\n})\n\n\nexport class LeftSidebarComponent{\n  __ = strings;\n  @Input() backButton: {routerLink: any, queryParams: any, name: string};\n  @HostBinding('class') class = 'container-left';\n\n  constructor() {}\n}\n\n    \n\n    \n        \n  \n    keyboard_arrow_left{{__.backTo}}{{backButton.name}}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      keyboard_arrow_left{{__.backTo}}{{backButton.name}}  '\n    var COMPONENTS = [{'name': 'AdminSelectionPageComponent', 'selector': 'app-admin-selection-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ClientsComponent', 'selector': 'app-clients'},{'name': 'ConfigsComponent', 'selector': 'app-configs'},{'name': 'ConfigSelectionPageComponent', 'selector': 'app-config-selection-page'},{'name': 'ConfigsTableComponent', 'selector': 'app-configs-table'},{'name': 'DropDownComponent', 'selector': 'app-dropdown'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalClientsComponent', 'selector': 'app-global-clients'},{'name': 'GlobalConfigsComponent', 'selector': 'app-global-configs'},{'name': 'LeftSidebarComponent', 'selector': 'app-left-sidebar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ToastComponent', 'selector': 'app-toasts'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LeftSidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/containers/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                __\n                            \n                            \n                                loading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, activatedRoute: ActivatedRoute, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/containers/login/login.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/containers/login/login.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/containers/login/login.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            __\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : strings\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/containers/login/login.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/containers/login/login.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {first} from 'rxjs/operators';\nimport {AuthService} from '@app/auth/services/auth.service';\nimport {Roles} from '@app/auth/enums/roles.enum';\nimport strings from '@i18n/en.json';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n})\n\nexport class LoginComponent implements OnInit {\n\n  __ = strings;\n\n  loading = false;\n\n  constructor(\n    private authService: AuthService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    this.activatedRoute.queryParams.pipe(first()).subscribe(params => {\n      const {code} = params;\n      let {returnUrl} = params;\n\n      if (returnUrl) {\n        localStorage.setItem('returnUrl', returnUrl);\n      }\n\n      if (code) {\n        this.loading = true;\n        this.authService.processLogin(code).pipe(first())\n          .subscribe(\n            () => {\n              const currentUser = this.authService.currentDecodedUserValue;\n              returnUrl = localStorage.getItem('returnUrl');\n              if (returnUrl) {\n                this.router.navigateByUrl(returnUrl);\n              } else {\n                if (currentUser.role !== Roles.SYSTEM_ADMIN) {\n                  this.router.navigateByUrl('projects');\n                } else {\n                  this.router.navigateByUrl('global-clients');\n                }\n              }\n            },\n            error => {\n              console.log(error);\n              this.loading = false;\n            }\n          );\n      }\n    });\n  }\n\n  login() {\n    this.loading = true;\n    this.authService.authorize();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{__.login}}\n    \n  \n  \n    \n      {{__.loading}}\n    \n  \n  \n    \n      {{__.loginWithManagementPortalAdmin}}\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{__.login}}                  {{__.loading}}                  {{__.loginWithManagementPortalAdmin}}      '\n    var COMPONENTS = [{'name': 'AdminSelectionPageComponent', 'selector': 'app-admin-selection-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ClientsComponent', 'selector': 'app-clients'},{'name': 'ConfigsComponent', 'selector': 'app-configs'},{'name': 'ConfigSelectionPageComponent', 'selector': 'app-config-selection-page'},{'name': 'ConfigsTableComponent', 'selector': 'app-configs-table'},{'name': 'DropDownComponent', 'selector': 'app-dropdown'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalClientsComponent', 'selector': 'app-global-clients'},{'name': 'GlobalConfigsComponent', 'selector': 'app-global-configs'},{'name': 'LeftSidebarComponent', 'selector': 'app-left-sidebar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ToastComponent', 'selector': 'app-toasts'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/MockInterceptor.html":{"url":"interceptors/MockInterceptor.html","title":"interceptor - MockInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  MockInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/mock/services/mock.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/mock/services/mock.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpResponse, HttpHandler, HttpEvent, HttpInterceptor, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { delay, mergeMap, materialize, dematerialize } from 'rxjs/operators';\n// import { Role } from '@app/_models';\nimport {projects, clients, groups, participants, users} from '../mock-data';\nimport { environment as env} from '@environments/environment';\nimport { environment as envAdmin } from '@environments/environment.mock';\nimport { environment as envResearcher } from '@environments/environment.mock-researcher';\nimport {Roles} from '@app/auth/enums/roles.enum';\n\nlet environment;\nif (env.envName === 'mock') {\n  environment = envAdmin;\n} else if (env.envName === 'mock-researcher') {\n  environment = envResearcher;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MockInterceptor implements HttpInterceptor {\n\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n    let user; //  = users.users[0];\n    const { url, method, headers, body } = request;\n    return of(null)\n      .pipe(mergeMap(handleRoute))\n      .pipe(materialize())\n      .pipe(delay(500))\n      .pipe(dematerialize());\n\n    function handleRoute() {\n      switch (true) {\n        case url.endsWith('/api/projects') && method === 'GET':\n          return getProjects();\n        case url.endsWith('/api/clients') && method === 'GET':\n          return getClients();\n        case url.match(/\\/api\\/projects\\/[A-Za-z0-9_-]+\\/clients\\//) && method === 'GET':\n          return getClientsByProjectId(getProjectIdFromUrl());\n        case url.match(/\\/api\\/projects\\/[A-Za-z0-9_-]+\\/users\\//) && method === 'GET':\n          return getUsersByProjectId(getProjectIdFromUrl());\n        case url.match(/\\/api\\/global\\/config\\//) && method === 'GET':\n          return getConfigByClientId();\n        case url.match(/\\/api\\/projects\\/[A-Za-z0-9_-]+\\/config\\//) && method === 'GET':\n          return getConfigByClientIdAndProjectId();\n        case url.match(/\\/api\\/projects\\/[A-Za-z0-9_-]+\\/config\\/[A-Za-z0-9_-]+/) && method === 'GET':\n          return getConfigByClientIdAndProjectId();\n        // tslint:disable-next-line:max-line-length\n        case url.startsWith(`${environment.authAPI}/authorize?client_id=${environment.clientId}&response_type=code&redirect_uri=${environment.authCallback}`):\n          generateCode();\n          return null;\n        // tslint:disable-next-line:max-line-length\n        // case url.startsWith(`${environment.authAPI}/researcher-authorize?client_id=${environment.clientId}&response_type=code&redirect_uri=${environment.authCallback}`):\n        //   generateCode('researcher');\n        //   return null;\n        case url.startsWith(`${environment.authAPI}/token`):\n          return generateToken();\n        // case url.startsWith(`${environment.authAPI}/researcher-token`):\n        //   return generateToken('researcher');\n        default:\n          return next.handle(request);\n      }\n    }\n\n    // route functions\n    function generateToken() {\n      if (environment.envName === 'mock') {\n        user = users.users[0];\n      } else if (environment.envName === 'mock-researcher') {\n        user = users.users[1];\n      }\n      // if (role === 'researcher') {\n      //   user = users.users[1];\n      // }\n      return ok(user);\n    }\n\n    function generateCode() {\n      const code = environment.fakeCode.code;\n      window.location.href = `${environment.authCallback}?code=${code}`;\n    }\n\n    function getProjects() {\n      if (!isLoggedIn()) {\n        return unauthorized();\n      }\n      // if (isAdmin()) {\n      //   console.log(888);\n      //   const projectsList = projects.projects.map(p => p.data);\n      //   return ok({projects: projectsList});\n      // }\n      // TODO\n      if (environment.envName === 'mock') {\n        user = users.users[0];\n      } else if (environment.envName === 'mock-researcher') {\n        user = users.users[1];\n      }\n      if (user.projects) {\n        const projectsLists = user.projects.map(projectId => projects.projects.find(p => p.data.id === projectId));\n        return ok({projects: projectsLists.map(p => p.data)});\n\n        // return ok(user.projects.map(projectId => projects.projects.find(p => p.data.id === projectId)));\n      }\n      const projectsList = projects.projects.map(p => p.data);\n      return ok({projects: projectsList});\n      // return ok(projects);\n\n    }\n\n    function getClients() {\n      if (isAdmin()) { return ok(clients); }\n      // TODO\n      return ok(null); // researcherClients);\n    }\n\n    function getClientsByProjectId(projectId) {\n      // console.log(projectId);\n      const selectedProject = projects.projects.filter(p => p.data.id == projectId);\n      // console.log(selectedProject);\n      const clientsOfSelectedProject = selectedProject[0].clients;\n      // console.log(clientsOfSelectedProject);\n      const clientsList = clientsOfSelectedProject.map(clientId => clients.clients.filter(c => c.clientId == clientId)[0]);\n      // console.log(clientsList);\n      // const clientsList =\n      return ok({clients: clientsList});\n    }\n\n    function getUsersByProjectId(projectId) {\n      const selectedProject = projects.projects.filter(p => p.data.projectName == projectId);\n      const usersOfSelectedProject = selectedProject[0].participants;\n      const usersList = usersOfSelectedProject.map(userId => participants.participants.filter(u => u.id == userId)[0]);\n      // const clientsList =\n      return ok({users: usersList});\n    }\n\n    function getConfigByClientId() {\n      if (!isLoggedIn()) { return unauthorized(); }\n      if (!isAdmin()) { return unauthorized(); }\n      const config = {\n        clientId: 'fakeClientId',\n        scope: 'global',\n        config: [\n          {name: 'plugins', value: 'A', scope: 'global'}\n        ]\n      };\n      // const config = globalConfigs.find(c => c.clientId === clientIdFromUrl());\n      return ok(config);\n    }\n\n    function getConfigByClientIdAndProjectId() {\n      if (!isLoggedIn()) { return unauthorized(); }\n      // const config = nonGlobalConfigs.find(c => c.clientId === clientIdFromUrl() && true);\n      const config = {\n        clientId: 'fakeClientId',\n        scope: 'project.fakeProjectId',\n        config: [\n          {name: 'plugins', value: 'A B'},\n          {name: 'plugins-a', value: 'C D'}\n        ],\n        defaults: [\n          {name: 'plugins', value: 'A', scope: 'global'}\n        ]\n      };\n      return ok(config);\n    }\n\n    // helper functions\n    // tslint:disable-next-line:no-shadowed-variable\n    function ok(body) {\n      return of(new HttpResponse({ status: 200, body }));\n    }\n\n    function unauthorized() {\n      return throwError({ status: 401, error: { message: 'unauthorized' } });\n    }\n\n    function isLoggedIn() {\n      const authHeader = headers.get('Authorization') || '';\n      // tslint:disable-next-line:max-line-length\n      return authHeader.startsWith(`Bearer ${environment.fakeJwtToken.token}`);\n    }\n\n    function isAdmin() {\n      return isLoggedIn() && currentUser().role === Roles.SYSTEM_ADMIN;\n    }\n\n    function currentUser() {\n      if (!isLoggedIn()) { return; }\n      return {role: Roles.SYSTEM_ADMIN};\n    }\n\n    function clientIdFromUrl() {\n      const urlParts = url.split('/');\n      // tslint:disable-next-line: radix\n      return (urlParts[urlParts.length - 1]);\n    }\n\n    function getProjectIdFromUrl() {\n      const urlParts = url.split('/');\n      // tslint:disable-next-line: radix\n      return (urlParts[urlParts.length - 3]);\n    }\n\n    function getProjectIdAndClientIdFromUrl() {\n      const urlParts = url.split('/');\n      // tslint:disable-next-line: radix\n      return (urlParts[urlParts.length - 3]);\n    }\n  }\n}\n\nexport const mockBackendProvider = {\n  // use fake backend in place of Http service for backend-less development\n  provide: HTTP_INTERCEPTORS,\n  useClass: MockInterceptor,\n  multi: true\n};\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MockModule.html":{"url":"modules/MockModule.html","title":"module - MockModule","body":"\n                   \n\n\n\n\n    Modules\n    MockModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/mock/mock.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {mockBackendProvider} from '@app/mock/services/mock.service';\nimport {environment} from '@environments/environment';\n\nconst extraProviders = (environment.envName === 'mock' || environment.envName === 'mock-researcher') ? [mockBackendProvider] : [];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    ...extraProviders\n  ],\n})\nexport class MockModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/containers/navbar/navbar.component.ts\n\n\n    \n        Description\n    \n    \n        Navbar component\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n            \n                styleUrls\n                ./navbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                isAdmin\n                            \n                            \n                                isNavMenuActive\n                            \n                            \n                                navbarOpen\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeNavbar\n                            \n                            \n                                logout\n                            \n                            \n                                toggleNavbar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/containers/navbar/navbar.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            closeNavbar\n                        \n                        \n                    \n                \n            \n            \n                \ncloseNavbar()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/containers/navbar/navbar.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/containers/navbar/navbar.component.ts:38\n                \n            \n\n\n            \n                \n                    Logout click handler\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleNavbar\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleNavbar()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/containers/navbar/navbar.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/containers/navbar/navbar.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAdmin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/containers/navbar/navbar.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isNavMenuActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/containers/navbar/navbar.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navbarOpen\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/containers/navbar/navbar.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component} from '@angular/core';\nimport {User} from '@app/auth/models/user';\nimport {AuthService} from '@app/auth/services/auth.service';\nimport {Router} from '@angular/router';\nimport strings from '@i18n/en.json';\n\n/**\n * Navbar component\n */\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent {\n\n  /**\n   * @ignore\n   */\n  __ = strings;\n\n  currentUser: User;\n  isAdmin: boolean;\n  isNavMenuActive: boolean = false;\n\n  navbarOpen = false;\n\n  constructor(private authService: AuthService, private router: Router){\n    this.authService.currentUser.subscribe(() => {\n      this.currentUser = this.authService.currentDecodedUserValue;\n      this.isAdmin = this.authService.isAdmin;\n    });\n  }\n\n  /**\n   * Logout click handler\n   */\n  logout() {\n    this.authService.logout();\n    this.currentUser = null;\n    localStorage.removeItem('returnUrl');\n    this.isNavMenuActive = false;\n    this.router.navigate(['/login']);\n  }\n\n  toggleNavbar() {\n    this.navbarOpen = !this.navbarOpen;\n  }\n\n  closeNavbar(){\n    this.navbarOpen = false;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n    \n      \n        {{__.radarBase}}\n        {{__.appConfig}}\n      \n    \n  \n  \n    \n  \n\n  \n    \n      \n        {{__.globalConfigurations}} (current)\n      \n      \n        {{__.projects}}\n      \n      \n        {{__.login}}\n      \n      \n        Hello {{currentUser.username}}!\n      \n      \n        {{__.logout}}\n      \n      \n        help\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./navbar.component.scss\n                \n                //@import '../../../../styles.scss';\n\n.site-branding{\n  display: flex;\n  align-items: center;\n  text-transform: uppercase;\n  .logo{\n    img{height:3em;}\n  }\n  .site-text-wrapper {\n    font-size: 1rem;\n    line-height: 1.25rem;\n    .site-description {\n    }\n\n    .site-title {\n      //font-size: 1.1rem;\n      font-weight: bold;\n    }\n  }\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                      {{__.radarBase}}        {{__.appConfig}}                                        {{__.globalConfigurations}} (current)                    {{__.projects}}                    {{__.login}}                    Hello {{currentUser.username}}!                    {{__.logout}}                    help            '\n    var COMPONENTS = [{'name': 'AdminSelectionPageComponent', 'selector': 'app-admin-selection-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ClientsComponent', 'selector': 'app-clients'},{'name': 'ConfigsComponent', 'selector': 'app-configs'},{'name': 'ConfigSelectionPageComponent', 'selector': 'app-config-selection-page'},{'name': 'ConfigsTableComponent', 'selector': 'app-configs-table'},{'name': 'DropDownComponent', 'selector': 'app-dropdown'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalClientsComponent', 'selector': 'app-global-clients'},{'name': 'GlobalConfigsComponent', 'selector': 'app-global-configs'},{'name': 'LeftSidebarComponent', 'selector': 'app-left-sidebar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ToastComponent', 'selector': 'app-toasts'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageNotFoundComponent.html":{"url":"components/PageNotFoundComponent.html","title":"component - PageNotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageNotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/containers/page-not-found/page-not-found.component.ts\n\n\n    \n        Description\n    \n    \n        Page Not Found component\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-page-not-found\n            \n\n\n\n\n            \n                templateUrl\n                ./page-not-found.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component} from '@angular/core';\nimport strings from '@i18n/en.json';\n\n/**\n * Page Not Found component\n */\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  // styleUrls: ['./page-not-found.component.scss']\n})\nexport class PageNotFoundComponent {\n  /**\n   * @ignore\n   */\n  __ = strings;\n}\n\n    \n\n    \n        \n  \n    {{__.pageNotFound}}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{__.pageNotFound}}  '\n    var COMPONENTS = [{'name': 'AdminSelectionPageComponent', 'selector': 'app-admin-selection-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ClientsComponent', 'selector': 'app-clients'},{'name': 'ConfigsComponent', 'selector': 'app-configs'},{'name': 'ConfigSelectionPageComponent', 'selector': 'app-config-selection-page'},{'name': 'ConfigsTableComponent', 'selector': 'app-configs-table'},{'name': 'DropDownComponent', 'selector': 'app-dropdown'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalClientsComponent', 'selector': 'app-global-clients'},{'name': 'GlobalConfigsComponent', 'selector': 'app-global-configs'},{'name': 'LeftSidebarComponent', 'selector': 'app-left-sidebar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ToastComponent', 'selector': 'app-toasts'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PageNotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PagesModule.html":{"url":"modules/PagesModule.html","title":"module - PagesModule","body":"\n                   \n\n\n\n\n    Modules\n    PagesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PagesModule\n\n\n\ncluster_PagesModule_declarations\n\n\n\ncluster_PagesModule_imports\n\n\n\n\nClientsComponent\n\nClientsComponent\n\n\n\nPagesModule\n\nPagesModule\n\nPagesModule -->\n\nClientsComponent->PagesModule\n\n\n\n\n\nConfigsComponent\n\nConfigsComponent\n\nPagesModule -->\n\nConfigsComponent->PagesModule\n\n\n\n\n\nConfigsTableComponent\n\nConfigsTableComponent\n\nPagesModule -->\n\nConfigsTableComponent->PagesModule\n\n\n\n\n\nGlobalClientsComponent\n\nGlobalClientsComponent\n\nPagesModule -->\n\nGlobalClientsComponent->PagesModule\n\n\n\n\n\nGlobalConfigsComponent\n\nGlobalConfigsComponent\n\nPagesModule -->\n\nGlobalConfigsComponent->PagesModule\n\n\n\n\n\nProjectsComponent\n\nProjectsComponent\n\nPagesModule -->\n\nProjectsComponent->PagesModule\n\n\n\n\n\nUsersComponent\n\nUsersComponent\n\nPagesModule -->\n\nUsersComponent->PagesModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nPagesModule -->\n\nCoreModule->PagesModule\n\n\n\n\n\nPagesRoutingModule\n\nPagesRoutingModule\n\nPagesModule -->\n\nPagesRoutingModule->PagesModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nPagesModule -->\n\nSharedModule->PagesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/pages.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ClientsComponent\n                        \n                        \n                            ConfigsComponent\n                        \n                        \n                            ConfigsTableComponent\n                        \n                        \n                            GlobalClientsComponent\n                        \n                        \n                            GlobalConfigsComponent\n                        \n                        \n                            ProjectsComponent\n                        \n                        \n                            UsersComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CoreModule\n                        \n                        \n                            PagesRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n// import { ClientsComponent } from '../containers/clients/clients.component';\nimport {CoreModule} from '@app/core/core.module';\nimport {RouterModule} from '@angular/router';\nimport {SharedModule} from '@app/shared/shared.module';\n// import { GlobalClientsComponent } from '../containers/global-clients/global-clients.component';\nimport {NgbDropdownModule} from \"@ng-bootstrap/ng-bootstrap\";\nimport {GlobalClientsComponent} from \"@app/pages/containers/global-clients/global-clients.component\";\nimport {ClientsComponent} from \"@app/pages/containers/clients/clients.component\";\nimport {ConfigsComponent} from \"@app/pages/containers/configs/configs.component\";\nimport {GlobalConfigsComponent} from \"@app/pages/containers/global-configs/global-configs.component\";\nimport {ConfigsTableComponent} from \"@app/pages/containers/configs-table/configs-table.component\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {ProjectsComponent} from \"@app/pages/containers/projects/projects.component\";\n// import {ProjectRoutingModule} from \"@app/pages/project/project-routing.module\";\nimport {UsersComponent} from \"@app/pages/containers/users/users.component\";\nimport {PagesRoutingModule} from \"@app/pages/pages-routing.module\";\n\n@NgModule({\n    declarations: [ClientsComponent, GlobalClientsComponent, ConfigsComponent, GlobalConfigsComponent, ConfigsTableComponent,\n        ProjectsComponent,UsersComponent],\n    imports: [\n        CommonModule,\n        CoreModule,\n        RouterModule,\n        SharedModule,\n        NgbDropdownModule,\n        // CommonModule,\n        // RouterModule,\n        // CoreModule,\n        // SharedModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatIconModule,\n        MatButtonModule,\n        // NgbDropdownModule,\n        // CommonModule,\n        // ProjectRoutingModule,\n        // CoreModule,\n        // CommonModule,\n        // CoreModule,\n        // RouterModule,\n        // SharedModule,\n        // NgbDropdownModule\n        PagesRoutingModule\n\n    ]\n})\nexport class PagesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PagesRoutingModule.html":{"url":"modules/PagesRoutingModule.html","title":"module - PagesRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    PagesRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/pages-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {ClientsComponent} from '@app/pages/containers/clients/clients.component';\nimport {GlobalClientsComponent} from '@app/pages/containers/global-clients/global-clients.component';\nimport {AuthGuard, AdminGuard} from '@app/auth/helpers';\nimport {ConfigsComponent} from \"@app/pages/containers/configs/configs.component\";\nimport {GlobalConfigsComponent} from \"@app/pages/containers/global-configs/global-configs.component\";\nimport {ProjectsComponent} from \"@app/pages/containers/projects/projects.component\";\nimport {UsersComponent} from \"@app/pages/containers/users/users.component\";\n\nconst routes: Routes = [\n    {\n        path: 'clients',\n        component: ClientsComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'global-clients',\n        component: GlobalClientsComponent,\n        canActivate: [AuthGuard, AdminGuard]\n    },\n    {\n        path: 'configs',\n        component: ConfigsComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'global-configs',\n        component: GlobalConfigsComponent,\n        canActivate: [AuthGuard, AdminGuard]\n    },\n    {\n        path: 'projects',\n        component: ProjectsComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'users',\n        component: UsersComponent,\n        canActivate: [AuthGuard]\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class PagesRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Project.html":{"url":"classes/Project.html","title":"class - Project","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Project\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/models/project.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                humanReadableProjectName\n                            \n                            \n                                id\n                            \n                            \n                                location\n                            \n                            \n                                name\n                            \n                            \n                                organization\n                            \n                            \n                                projectName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/models/project.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            humanReadableProjectName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/models/project.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/models/project.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            location\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/models/project.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/models/project.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organization\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/models/project.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            projectName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/models/project.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Project {\n  id: number;\n  name: string;\n  projectName: string;\n  humanReadableProjectName: string;\n  location: string;\n  organization: string;\n  description: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProjectService.html":{"url":"injectables/ProjectService.html","title":"injectable - ProjectService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProjectService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/services/project.service.ts\n        \n\n            \n                Description\n            \n            \n                Project Service\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getAllProjects\n                            \n                            \n                                    Private\n                                getAllProjectsObservable\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/services/project.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllProjects\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllProjects()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/services/project.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getAllProjectsObservable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllProjectsObservable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/services/project.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable<>\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Project} from '@app/pages/models/project';\nimport {ToastService} from '@app/shared/services/toast.service';\nimport {environment} from \"@environments/environment\";\n\n/**\n * Project Service\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectService {\n\n  constructor(private http: HttpClient, private toastService: ToastService) {}\n\n  private getAllProjectsObservable(): Observable {\n    return this.http.get(`${environment.backendUrl}/projects`);\n  }\n\n  async getAllProjects(): Promise {\n    return await this.getAllProjectsObservable().toPromise()\n      .then((data: any) => {\n        const projects: [Project] = data.projects;\n        projects.forEach(p => p.name = p.projectName);\n        this.toastService.showSuccess('Projects loaded.');\n        return projects;\n      })\n      .catch(e => {\n        this.toastService.showError(e);\n        console.log(e);\n      })\n      .finally(() => {});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectsComponent.html":{"url":"components/ProjectsComponent.html","title":"component - ProjectsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProjectsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/containers/projects/projects.component.ts\n\n\n    \n        Description\n    \n    \n        Projects Component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-projects\n            \n\n\n\n\n            \n                templateUrl\n                ./projects.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                __\n                            \n                            \n                                loading\n                            \n                            \n                                projects\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                makeQueryParams\n                            \n                            \n                                makeState\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(projectService: ProjectService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/containers/projects/projects.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            makeQueryParams\n                        \n                        \n                    \n                \n            \n            \n                \nmakeQueryParams(projectId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/containers/projects/projects.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { project: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            makeState\n                        \n                        \n                    \n                \n            \n            \n                \nmakeState()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/containers/projects/projects.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         { projects: void | [any]; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/containers/projects/projects.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            __\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : strings\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/containers/projects/projects.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/containers/projects/projects.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            projects\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :      | void\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/containers/projects/projects.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {Project} from '@app/pages/models/project';\nimport {ProjectService} from '@app/pages/services/project.service';\nimport strings from '@i18n/en.json';\n\n/**\n * Projects Component\n */\n@Component({\n  selector: 'app-projects',\n  templateUrl: './projects.component.html',\n  // styleUrls: ['./projects.component.scss']\n})\nexport class ProjectsComponent implements OnInit {\n  __ = strings;\n  loading = true;\n  projects: [Project] | void;\n\n  constructor(private projectService: ProjectService) {}\n\n  async ngOnInit() {\n    this.projects = await this.projectService.getAllProjects();\n    this.loading = false;\n  }\n\n  makeState() {\n    return {projects: this.projects};\n  }\n\n  makeQueryParams(projectId) {\n    return {project: projectId};\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n        Global Configurations\n        Projects\n      \n    \n    \n      {{__.selectAProject}}\n      {{__.loading}}\n      \n        \n          \n            \n              \n                {{project.projectName}}\n                {{ project.description }}\n                {{__.organization}}: {{ project.organization }}\n                {{__.location}}: {{ project.location }}\n              \n            \n          \n        \n      \n    \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          Global Configurations        Projects                    {{__.selectAProject}}      {{__.loading}}                                                                  {{project.projectName}}                {{ project.description }}                {{__.organization}}: {{ project.organization }}                {{__.location}}: {{ project.location }}                                                            '\n    var COMPONENTS = [{'name': 'AdminSelectionPageComponent', 'selector': 'app-admin-selection-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ClientsComponent', 'selector': 'app-clients'},{'name': 'ConfigsComponent', 'selector': 'app-configs'},{'name': 'ConfigSelectionPageComponent', 'selector': 'app-config-selection-page'},{'name': 'ConfigsTableComponent', 'selector': 'app-configs-table'},{'name': 'DropDownComponent', 'selector': 'app-dropdown'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalClientsComponent', 'selector': 'app-global-clients'},{'name': 'GlobalConfigsComponent', 'selector': 'app-global-configs'},{'name': 'LeftSidebarComponent', 'selector': 'app-left-sidebar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ToastComponent', 'selector': 'app-toasts'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProjectsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_providers\n\n\n\n\nDropDownComponent\n\nDropDownComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nDropDownComponent->SharedModule\n\n\n\n\n\nToastComponent\n\nToastComponent\n\nSharedModule -->\n\nToastComponent->SharedModule\n\n\n\n\n\nDropDownComponent \n\nDropDownComponent \n\nDropDownComponent  -->\n\nSharedModule->DropDownComponent \n\n\n\n\n\nToastComponent \n\nToastComponent \n\nToastComponent  -->\n\nSharedModule->ToastComponent \n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nSharedModule -->\n\nErrorInterceptor->SharedModule\n\n\n\n\n\nJwtInterceptor\n\nJwtInterceptor\n\nSharedModule -->\n\nJwtInterceptor->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DropDownComponent\n                        \n                        \n                            ToastComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ErrorInterceptor\n                        \n                        \n                            JwtInterceptor\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DropDownComponent\n                        \n                        \n                            ToastComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ToastComponent } from './components/toast/toast.component';\nimport { DropDownComponent } from './components/drop-down/drop-down.component';\nimport { JwtInterceptor } from '@app/shared/helpers/jwt.interceptor';\nimport { ErrorInterceptor } from '@app/shared/helpers/error.interceptor';\n\n@NgModule({\n  declarations: [ToastComponent, DropDownComponent],\n  exports: [ToastComponent, DropDownComponent],\n  imports: [\n    CommonModule,\n    NgbModule,\n    MatIconModule,\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n  ],\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToastComponent.html":{"url":"components/ToastComponent.html","title":"component - ToastComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToastComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/toast/toast.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                app-toasts\n            \n\n\n\n\n            \n                templateUrl\n                ./toast.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                toastService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isTemplate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/toast/toast.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isTemplate\n                        \n                        \n                    \n                \n            \n            \n                \nisTemplate(toast)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/toast/toast.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    toast\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toastService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ToastService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/toast/toast.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, TemplateRef} from '@angular/core';\nimport {ToastService} from '@app/shared/services/toast.service';\n\n@Component({\n  selector: 'app-toasts',\n  templateUrl: './toast.component.html',\n  host: {'[class.ngb-toasts]': 'true'}\n})\nexport class ToastComponent {\n  constructor(public toastService: ToastService) {}\n\n  isTemplate(toast) { return toast.textOrTpl instanceof TemplateRef; }\n}\n\n    \n\n    \n        \n  \n    \n  \n  {{ toast.textOrTpl }}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{ toast.textOrTpl }}'\n    var COMPONENTS = [{'name': 'AdminSelectionPageComponent', 'selector': 'app-admin-selection-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ClientsComponent', 'selector': 'app-clients'},{'name': 'ConfigsComponent', 'selector': 'app-configs'},{'name': 'ConfigSelectionPageComponent', 'selector': 'app-config-selection-page'},{'name': 'ConfigsTableComponent', 'selector': 'app-configs-table'},{'name': 'DropDownComponent', 'selector': 'app-dropdown'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalClientsComponent', 'selector': 'app-global-clients'},{'name': 'GlobalConfigsComponent', 'selector': 'app-global-configs'},{'name': 'LeftSidebarComponent', 'selector': 'app-left-sidebar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ToastComponent', 'selector': 'app-toasts'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToastComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ToastService.html":{"url":"injectables/ToastService.html","title":"injectable - ToastService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ToastService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/toast.service.ts\n        \n\n            \n                Description\n            \n            \n                Toast Service\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                toasts\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                remove\n                            \n                            \n                                show\n                            \n                            \n                                showError\n                            \n                            \n                                showSuccess\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(toast)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/toast.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    toast\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            show\n                        \n                        \n                    \n                \n            \n            \n                \nshow(textOrTpl: string | TemplateRef, options: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/toast.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    textOrTpl\n                                    \n                                            string | TemplateRef\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showError\n                        \n                        \n                    \n                \n            \n            \n                \nshowError(message: string, args: object)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/toast.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    args\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {\n      classname: 'bg-danger text-light',\n      delay: 2000 ,\n      autohide: true,\n    }\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showSuccess\n                        \n                        \n                    \n                \n            \n            \n                \nshowSuccess(message: string, args: object)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/toast.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    args\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {\n                classname: 'bg-success text-light',\n                delay: 2000 ,\n                autohide: true\n              }\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toasts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/toast.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable, TemplateRef} from '@angular/core';\n\n/**\n * Toast Service\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastService {\n  toasts: any[] = [];\n\n  show(textOrTpl: string | TemplateRef, options: any = {}) {\n    this.toasts.push({ textOrTpl, ...options });\n  }\n\n  remove(toast) {\n    this.toasts = this.toasts.filter(t => t !== toast);\n  }\n\n  showSuccess(message: string,\n              args = {\n                classname: 'bg-success text-light',\n                delay: 2000 ,\n                autohide: true\n              }) {\n    this.show(message, args);\n  }\n\n  showError(\n    message: string,\n    args = {\n      classname: 'bg-danger text-light',\n      delay: 2000 ,\n      autohide: true,\n    }) {\n    this.show(message, args);\n  }\n\n  // showCustomToast(customTpl) {\n  //   this.show(customTpl, {\n  //     classname: 'bg-info text-light',\n  //     delay: 3000,\n  //     autohide: true\n  //   });\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/models/user.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/models/user.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/models/user.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n  id: string;\n  name: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/services/user.service.ts\n        \n\n            \n                Description\n            \n            \n                User Service\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getUsersByProjectId\n                            \n                            \n                                    Private\n                                getUsersByProjectIdObservable\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/services/user.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUsersByProjectId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsersByProjectId(projectId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/services/user.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getUsersByProjectIdObservable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsersByProjectIdObservable(projectId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/services/user.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {User} from '@app/pages/models/user';\nimport {ToastService} from '@app/shared/services/toast.service';\nimport {Observable} from 'rxjs';\nimport {environment} from \"@environments/environment\";\n\n/**\n * User Service\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient, private toastService: ToastService) {}\n\n  private getUsersByProjectIdObservable(projectId): Observable {\n    return this.http.get(`${environment.backendUrl}/projects/${projectId}/users/`);\n  }\n\n  async getUsersByProjectId(projectId): Promise {\n    return await this.getUsersByProjectIdObservable(projectId).toPromise()\n      .then((data: any) => {\n        const results: [User] = data.users;\n        results.forEach(d => d.name = d.id);\n        this.toastService.showSuccess(`Users of Project: ${projectId} loaded.`);\n        return results;\n      })\n      .catch(e => {\n        this.toastService.showError(e);\n        console.log(e);\n      })\n      .finally(() => {});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UsersComponent.html":{"url":"components/UsersComponent.html","title":"component - UsersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UsersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/containers/users/users.component.ts\n\n\n    \n        Description\n    \n    \n        Users Component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-users\n            \n\n\n\n\n            \n                templateUrl\n                ./users.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                __\n                            \n                            \n                                clientId\n                            \n                            \n                                clients\n                            \n                            \n                                loading\n                            \n                            \n                                projectId\n                            \n                            \n                                projects\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getClients\n                            \n                            \n                                getProjects\n                            \n                            \n                                makeBackButton\n                            \n                            \n                                makeQueryParams\n                            \n                            \n                                makeState\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                onClientChange\n                            \n                            \n                                onProjectChange\n                            \n                            \n                                    Async\n                                updateUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, clientService: ClientService, projectService: ProjectService, activatedRoute: ActivatedRoute, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/containers/users/users.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clientService\n                                                  \n                                                        \n                                                                        ClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getClients\n                        \n                        \n                    \n                \n            \n            \n                \ngetClients()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/containers/users/users.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getProjects\n                        \n                        \n                    \n                \n            \n            \n                \ngetProjects()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/containers/users/users.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            makeBackButton\n                        \n                        \n                    \n                \n            \n            \n                \nmakeBackButton()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/containers/users/users.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { routerLink: {}; queryParams: { project: any; }; name: string; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            makeQueryParams\n                        \n                        \n                    \n                \n            \n            \n                \nmakeQueryParams(userId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/containers/users/users.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { project: any; client: any; user: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            makeState\n                        \n                        \n                    \n                \n            \n            \n                \nmakeState()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/containers/users/users.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { projects: [any]; clients: [any]; users: void | [any]; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/containers/users/users.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClientChange\n                        \n                        \n                    \n                \n            \n            \n                \nonClientChange(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/containers/users/users.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onProjectChange\n                        \n                        \n                    \n                \n            \n            \n                \nonProjectChange(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/containers/users/users.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateUsers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/containers/users/users.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            __\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : strings\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/containers/users/users.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clientId\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/containers/users/users.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clients\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         [Client]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/containers/users/users.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/containers/users/users.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            projectId\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/containers/users/users.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            projects\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         [Project]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/containers/users/users.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            users\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :      | void\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/containers/users/users.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {ProjectService} from '@app/pages/services/project.service';\nimport {ClientService} from '@app/pages/services/client.service';\nimport {UserService} from '@app/pages/services/user.service';\nimport {Project} from '@app/pages/models/project';\nimport {Client} from '@app/pages/models/client';\nimport {User} from '@app/pages/models/user';\nimport strings from '@i18n/en.json';\n\n/**\n * Users Component\n */\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  // styleUrls: ['./users.component.scss']\n})\nexport class UsersComponent implements OnInit {\n\n  __ = strings;\n\n  projectId;\n  clientId;\n\n  projects: [Project];\n  clients: [Client];\n  users: [User] | void;\n\n  loading = true;\n\n  constructor(\n    private userService: UserService,\n    private clientService: ClientService,\n    private projectService: ProjectService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router) {}\n\n  async ngOnInit() {\n    this.projectId = this.activatedRoute.snapshot.queryParams.project;\n    this.clientId = this.activatedRoute.snapshot.queryParams.client;\n\n    this.projects = await this.getProjects();\n    this.clients = await this.getClients();\n\n    this.updateUsers();\n  }\n\n  getProjects() {\n    if (!this.projectId) { return; }\n    const {projects} = history.state;\n    return (projects ? projects : this.projectService.getAllProjects());\n  }\n\n  getClients() {\n    if (!this.clientId) { return; }\n    const {clients} = history.state;\n    return (clients ? clients : this.clientService.getAllClients());\n  }\n\n  onProjectChange(event) {\n    this.projectId = event.name;\n    const tempObject = {...this.activatedRoute.snapshot.queryParams};\n    tempObject.project = this.projectId;\n    this.updateUsers();\n    this.router.navigate(['/users'], {queryParams: tempObject});\n  }\n\n  onClientChange(event) {\n    this.clientId = event.id;\n    const tempObject = {...this.activatedRoute.snapshot.queryParams};\n    tempObject.client = this.clientId;\n    this.updateUsers();\n    this.router.navigate(['/users'], {queryParams: tempObject});\n  }\n\n  async updateUsers() {\n    this.loading = true;\n    this.users = await this.userService.getUsersByProjectId(this.projectId);\n    this.loading = false;\n  }\n\n  makeState() {\n    return {projects: this.projects, clients: this.clients, users: this.users};\n  }\n\n  makeQueryParams(userId) {\n    return {project: this.projectId, client: this.clientId, user: userId};\n  }\n\n  makeBackButton() {\n    if (!this.clientId || !this.projectId) { return; }\n    return {routerLink: ['/clients'], queryParams: {project: this.projectId}, name: 'Applications'};\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n            \n                Global Configurations\n                Projects\n            \n            \n                All groups and users\n                Groups\n                Users\n            \n        \n        \n            \n                \n                \n            \n                    {{__.selectAUser}}\n            {{__.loading}}\n                \n                    \n                        \n                            \n                                \n                                    {{user.name}}-->\n                                    {{user.id}}\n                                \n                            \n                        \n                    \n                \n        \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    Global Configurations                Projects                                        All groups and users                Groups                Users                                                                                                        {{__.selectAUser}}            {{__.loading}}                                                                                                                                                            {{user.name}}-->                                    {{user.id}}                                                                                                                                            '\n    var COMPONENTS = [{'name': 'AdminSelectionPageComponent', 'selector': 'app-admin-selection-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ClientsComponent', 'selector': 'app-clients'},{'name': 'ConfigsComponent', 'selector': 'app-configs'},{'name': 'ConfigSelectionPageComponent', 'selector': 'app-config-selection-page'},{'name': 'ConfigsTableComponent', 'selector': 'app-configs-table'},{'name': 'DropDownComponent', 'selector': 'app-dropdown'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalClientsComponent', 'selector': 'app-global-clients'},{'name': 'GlobalConfigsComponent', 'selector': 'app-global-configs'},{'name': 'LeftSidebarComponent', 'selector': 'app-left-sidebar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ToastComponent', 'selector': 'app-toasts'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UsersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/containers/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/auth/helpers/admin.guard.ts\n            \n            guard\n            AdminGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/helpers/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/models/auth.ts\n            \n            interface\n            AuthData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/models/auth.ts\n            \n            interface\n            AuthResponse\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/auth/models/user.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/auth/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/core/containers/admin-selection-page/admin-selection-page.component.ts\n            \n            component\n            AdminSelectionPageComponent\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/core/containers/config-selection-page/config-selection-page.component.ts\n            \n            component\n            ConfigSelectionPageComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/core/containers/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/containers/left-sidebar/left-sidebar.component.ts\n            \n            component\n            LeftSidebarComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/containers/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                22 %\n                (2/9)\n            \n        \n        \n            \n                \n                src/app/core/containers/page-not-found/page-not-found.component.ts\n            \n            component\n            PageNotFoundComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/mock/mock-data/index.ts\n            \n            variable\n            clients\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/mock/mock-data/index.ts\n            \n            variable\n            groups\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/mock/mock-data/index.ts\n            \n            variable\n            participants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/mock/mock-data/index.ts\n            \n            variable\n            projects\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/mock/mock-data/index.ts\n            \n            variable\n            users\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/mock/mock.module.ts\n            \n            variable\n            extraProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/mock/services/mock.service.ts\n            \n            interceptor\n            MockInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/mock/services/mock.service.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/mock/services/mock.service.ts\n            \n            variable\n            mockBackendProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pages/containers/clients/clients.component.ts\n            \n            component\n            ClientsComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/pages/containers/configs-table/configs-table.component.ts\n            \n            component\n            ConfigsTableComponent\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/app/pages/containers/configs/configs.component.ts\n            \n            component\n            ConfigsComponent\n            \n                0 %\n                (0/25)\n            \n        \n        \n            \n                \n                src/app/pages/containers/global-clients/global-clients.component.ts\n            \n            component\n            GlobalClientsComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/pages/containers/global-configs/global-configs.component.ts\n            \n            component\n            GlobalConfigsComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/pages/containers/projects/projects.component.ts\n            \n            component\n            ProjectsComponent\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/pages/containers/users/users.component.ts\n            \n            component\n            UsersComponent\n            \n                5 %\n                (1/18)\n            \n        \n        \n            \n                \n                src/app/pages/models/client.ts\n            \n            class\n            Client\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/pages/models/config.ts\n            \n            class\n            Config\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/pages/models/project.ts\n            \n            class\n            Project\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/pages/models/user.ts\n            \n            class\n            User\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/pages/services/client.service.ts\n            \n            injectable\n            ClientService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/pages/services/config.service.ts\n            \n            injectable\n            ConfigService\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/pages/services/project.service.ts\n            \n            injectable\n            ProjectService\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/pages/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/shared/components/drop-down/drop-down.component.ts\n            \n            component\n            DropDownComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/shared/components/toast/toast.component.ts\n            \n            component\n            ToastComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/helpers/error.interceptor.ts\n            \n            interceptor\n            ErrorInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/helpers/jwt.interceptor.ts\n            \n            interceptor\n            JwtInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/services/toast.service.ts\n            \n            injectable\n            ToastService\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/environments/environment.mock-researcher.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.mock.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~8.2.14\n        \n            @angular/cdk : ^8.2.3\n        \n            @angular/common : ~8.2.14\n        \n            @angular/compiler : ~8.2.14\n        \n            @angular/core : ~8.2.14\n        \n            @angular/forms : ~8.2.14\n        \n            @angular/material : ^8.2.3\n        \n            @angular/platform-browser : ~8.2.14\n        \n            @angular/platform-browser-dynamic : ~8.2.14\n        \n            @angular/router : ~8.2.14\n        \n            @ng-bootstrap/ng-bootstrap : ^5.2.1\n        \n            bootstrap : ^4.4.1\n        \n            hammerjs : ^2.0.8\n        \n            jwt-decode : ^2.2.0\n        \n            rxjs : ~6.4.0\n        \n            tslib : ^1.10.0\n        \n            zone.js : ~0.9.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Roles   (src/.../roles.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/auth/enums/roles.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Roles\n                    \n                \n                        \n                            \n                                 SYSTEM_ADMIN\n                            \n                        \n                        \n                            \n                                Value : ROLE_SYS_ADMIN\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAppconfig\nThis project was generated with Angular CLI version 8.3.24.\nDevelopment server\n\nMock Backend\n\nLogin as Admin\nRun npm run mock for a dev server. Navigate to http://localhost:4200/appconfig.    \nThe app will automatically reload if you change any of the source files.\n\nLogin as a Researcher\nRun npm run mock-researcher for a dev server. Navigate to http://localhost:4200/appconfig. The app will automatically reload if you change any of the source files.\n\n\n\nLocal Backend\n\nLogin as Admin or Researcher\nRun local version of radar-app-config and ManagementPortal. See the link: \nhttps://github.com/RADAR-base/radar-app-config#docker-usage \nRun npm start or ng serve --port=4200 --base-href=/appconfig/ for a dev server. Navigate to http://localhost:4200/appconfig.    \nThe app will automatically reload if you change any of the source files.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MockModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PagesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PagesRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_exports\n\n\n\ncluster_PagesModule\n\n\n\ncluster_PagesModule_declarations\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nAuthModule->LoginComponent \n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAppModule -->\n\nAuthRoutingModule->AppModule\n\n\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nPagesModule\n\nPagesModule\n\nPagesModule -->\n\nCoreModule->PagesModule\n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nCoreModule->FooterComponent \n\n\n\n\n\nLeftSidebarComponent \n\nLeftSidebarComponent \n\nLeftSidebarComponent  -->\n\nCoreModule->LeftSidebarComponent \n\n\n\n\n\nNavbarComponent \n\nNavbarComponent \n\nNavbarComponent  -->\n\nCoreModule->NavbarComponent \n\n\n\n\n\nCoreRoutingModule\n\nCoreRoutingModule\n\nAppModule -->\n\nCoreRoutingModule->AppModule\n\n\n\nCoreModule -->\n\nCoreRoutingModule->CoreModule\n\n\n\n\n\nMockModule\n\nMockModule\n\nAppModule -->\n\nMockModule->AppModule\n\n\n\nAppModule -->\n\nPagesModule->AppModule\n\n\n\n\n\nPagesRoutingModule\n\nPagesRoutingModule\n\nAppModule -->\n\nPagesRoutingModule->AppModule\n\n\n\nPagesModule -->\n\nPagesRoutingModule->PagesModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\nCoreModule -->\n\nSharedModule->CoreModule\n\n\n\nPagesModule -->\n\nSharedModule->PagesModule\n\n\n\n\n\nDropDownComponent \n\nDropDownComponent \n\nDropDownComponent  -->\n\nSharedModule->DropDownComponent \n\n\n\n\n\nToastComponent \n\nToastComponent \n\nToastComponent  -->\n\nSharedModule->ToastComponent \n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nAdminSelectionPageComponent\n\nAdminSelectionPageComponent\n\nCoreModule -->\n\nAdminSelectionPageComponent->CoreModule\n\n\n\n\n\nConfigSelectionPageComponent\n\nConfigSelectionPageComponent\n\nCoreModule -->\n\nConfigSelectionPageComponent->CoreModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nCoreModule -->\n\nFooterComponent->CoreModule\n\n\n\n\n\nLeftSidebarComponent\n\nLeftSidebarComponent\n\nCoreModule -->\n\nLeftSidebarComponent->CoreModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nCoreModule -->\n\nNavbarComponent->CoreModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nCoreModule -->\n\nPageNotFoundComponent->CoreModule\n\n\n\n\n\nClientsComponent\n\nClientsComponent\n\nPagesModule -->\n\nClientsComponent->PagesModule\n\n\n\n\n\nConfigsComponent\n\nConfigsComponent\n\nPagesModule -->\n\nConfigsComponent->PagesModule\n\n\n\n\n\nConfigsTableComponent\n\nConfigsTableComponent\n\nPagesModule -->\n\nConfigsTableComponent->PagesModule\n\n\n\n\n\nGlobalClientsComponent\n\nGlobalClientsComponent\n\nPagesModule -->\n\nGlobalClientsComponent->PagesModule\n\n\n\n\n\nGlobalConfigsComponent\n\nGlobalConfigsComponent\n\nPagesModule -->\n\nGlobalConfigsComponent->PagesModule\n\n\n\n\n\nProjectsComponent\n\nProjectsComponent\n\nPagesModule -->\n\nProjectsComponent->PagesModule\n\n\n\n\n\nUsersComponent\n\nUsersComponent\n\nPagesModule -->\n\nUsersComponent->PagesModule\n\n\n\n\n\nDropDownComponent\n\nDropDownComponent\n\nSharedModule -->\n\nDropDownComponent->SharedModule\n\n\n\n\n\nToastComponent\n\nToastComponent\n\nSharedModule -->\n\nToastComponent->SharedModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nSharedModule -->\n\nErrorInterceptor->SharedModule\n\n\n\n\n\nJwtInterceptor\n\nJwtInterceptor\n\nSharedModule -->\n\nJwtInterceptor->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        10 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    17 Components\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        9 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            clients   (src/.../index.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.mock-researcher.ts)\n                        \n                        \n                            environment   (src/.../environment.mock.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../mock.service.ts)\n                        \n                        \n                            extraProviders   (src/.../mock.module.ts)\n                        \n                        \n                            groups   (src/.../index.ts)\n                        \n                        \n                            mockBackendProvider   (src/.../mock.service.ts)\n                        \n                        \n                            participants   (src/.../index.ts)\n                        \n                        \n                            projects   (src/.../index.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            users   (src/.../index.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/mock/mock-data/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            clients\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : cls\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            groups\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : grs\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            participants\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : pas\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            projects\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : prs\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            users\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : uss\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.mock-researcher.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  envName: 'mock-researcher',\n  production: false,\n  // appUrl: 'http://localhost:4200',\n  authAPI: 'http://localhost:4200/appconfig/managementportal/oauth',\n  clientId: 'appconfig_frontend',\n  authCallback: 'http://localhost:4200/appconfig/login',\n  fakeCode: {code: 12346},\n  fakeJwtToken: {\n    // tslint:disable-next-line:max-line-length\n    token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJyZXNfYXBwY29uZmlnIiwic3ViIjoicGV5bWFuIiwic291cmNlcyI6W10sImdyYW50X3R5cGUiOiJwYXNzd29yZCIsInVzZXJfbmFtZSI6IkpvaG4iLCJyb2xlcyI6W10sInNjb3BlIjpbIlNVQkpFQ1QuVVBEQVRFIiwiUFJPSkVDVC5DUkVBVEUiLCJQUk9KRUNULlVQREFURSIsIk1FQVNVUkVNRU5ULkNSRUFURSIsIlBST0pFQ1QuUkVBRCIsIk9BVVRIQ0xJRU5UUy5SRUFEIiwiU1VCSkVDVC5SRUFEIl0sImlzcyI6Ik1hbmFnZW1lbnRQb3J0YWwiLCJleHAiOjE1ODAyOTczNjEsImlhdCI6MTU4MDI5Mzc2MSwiYXV0aG9yaXRpZXMiOlsiUk9MRV9SRVNFQVJDSEVSIl0sImNsaWVudF9pZCI6ImFwcGNvbmZpZ19mcm9udGVuZCJ9.IlQxCMKxR8JCy9r6xG7DV-KSTjcsBY0Y09e8xE9SFbs'\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.mock.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  envName: 'mock',\n  production: false,\n  // appUrl: 'http://localhost:4200',\n  authAPI: 'http://localhost:4200/appconfig/managementportal/oauth',\n  clientId: 'appconfig_frontend',\n  authCallback: 'http://localhost:4200/appconfig/login',\n  fakeCode: {code: 84936},\n  fakeJwtToken: {\n    // tslint:disable-next-line:max-line-length\n    token: 'eyJ0eXAiOiJKV1QiLCJhbGciOiJFUzI1NiJ9.eyJhdWQiOiJyZXNfYXBwY29uZmlnIiwic3ViIjoicGV5bWFuIiwic291cmNlcyI6W10sImdyYW50X3R5cGUiOiJwYXNzd29yZCIsInVzZXJfbmFtZSI6InBleW1hbiIsInJvbGVzIjpbXSwic2NvcGUiOlsiU1VCSkVDVC5VUERBVEUiLCJQUk9KRUNULkNSRUFURSIsIlBST0pFQ1QuVVBEQVRFIiwiTUVBU1VSRU1FTlQuQ1JFQVRFIiwiUFJPSkVDVC5SRUFEIiwiT0FVVEhDTElFTlRTLlJFQUQiLCJTVUJKRUNULlJFQUQiXSwiaXNzIjoiTWFuYWdlbWVudFBvcnRhbCIsImV4cCI6MTU4MDI5NzM2MSwiaWF0IjoxNTgwMjkzNzYxLCJhdXRob3JpdGllcyI6WyJST0xFX1NZU19BRE1JTiJdLCJjbGllbnRfaWQiOiJhcHBjb25maWdfZnJvbnRlbmQifQ.Hf2kzUm0B1ciMeDmIuNDYVapg72pPtXSGdSwx-Ubw9aOBGIV7Zw7WE1TPLdpwDCD-2K1yO1iBbjgb_o6xDiiAg',\n  },\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  envName: 'prod',\n  production: true,\n  baseURL: 'RACF_BASE_URL',\n  authAPI: 'RACF_AUTH_API',\n  authCallback: 'RACF_AUTH_CALLBACK',\n  clientId: 'appconfig_frontend',\n  backendUrl: 'RACF_BACKEND_URL',\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  envName: 'dev',\n  production: false,\n  baseURL: 'http://localhost:4200/',\n  authAPI: 'http://localhost:8080/managementportal/oauth',\n  authCallback: 'http://localhost:4200/login',\n  clientId: 'appconfig_frontend',\n  backendUrl: '/api',\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/mock/services/mock.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockBackendProvider\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  // use fake backend in place of Http service for backend-less development\n  provide: HTTP_INTERCEPTORS,\n  useClass: MockInterceptor,\n  multi: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/mock/mock.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            extraProviders\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (environment.envName === 'mock' || environment.envName === 'mock-researcher') ? [mockBackendProvider] : []\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
