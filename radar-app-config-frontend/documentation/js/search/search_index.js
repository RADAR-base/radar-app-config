var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/guards/AdminGuard.html",[0,2.88,1,2.253]],["body/guards/AdminGuard.html",[1,3.458,2,3.419,3,0.184,4,0.161,5,0.161,6,3.824,7,0.632,8,1.393,9,3.925,10,1.18,11,3.824,12,3.369,13,3.626,14,1.053,15,4.439,16,1.458,17,0.018,18,0.954,19,0.954,20,1.458,21,3.824,22,5.792,23,5.479,24,5.792,25,4.439,26,4.03,27,1.078,28,3.005,29,3.458,30,3.235,31,5.479,32,0.426,33,1.83,34,0.333,35,1.235,36,1.988,37,2.675,38,2.218,39,1.988,40,0.184,41,0.094,42,1.629,43,1.795,44,1.554,45,1.03,46,4.03,47,3.824,48,1.671,49,1.629,50,4.439,51,1.709,52,0.01,53,0.013,54,0.01]],["title/components/AdminSelectionPageComponent.html",[55,0.35,56,0.994]],["body/components/AdminSelectionPageComponent.html",[3,0.158,4,0.138,5,0.138,7,0.543,14,0.7,17,0.017,18,0.863,32,0.329,34,0.286,40,0.158,41,0.081,52,0.009,53,0.012,54,0.009,55,0.619,56,1.684,57,1.656,58,1.275,59,1.275,60,1.275,61,4.473,62,2.174,63,3.646,64,2.94,65,1.623,66,2.167,67,2.212,68,1.275,69,2.559,70,2.334,71,1.734,72,4.473,73,1.38,74,2.272,75,1.336,76,1.275,77,2.272,78,3.817,79,1.469,80,1.336,81,3.288,82,3.999,83,5.192,84,0.846,85,1.734,86,1.656,87,1.275,88,2.115,89,1.275,90,1.734,91,1.062,92,1.275,93,1.015,94,1.734,95,1.015,96,1.734,97,1.015,98,0.927,99,1.062,100,1.217,101,1.275,102,1.062,103,1.275,104,1.062,105,1.275,106,1.015,107,1.444,108,1.015,109,1.062,110,1.275,111,1.275,112,1.015,113,1.275,114,1.062,115,1.275,116,1.015,117,1.275,118,1.015,119,1.275,120,1.062,121,1.275,122,1.015,123,1.062,124,1.275,125,1.275]],["title/components/AppComponent.html",[55,0.35,91,1.04]],["body/components/AppComponent.html",[3,0.176,4,0.154,5,0.154,17,0.017,18,0.929,32,0.27,34,0.319,39,2.502,40,0.176,41,0.09,52,0.01,53,0.013,54,0.01,55,0.583,56,1.133,57,1.782,58,1.423,59,1.423,60,1.423,62,1.627,66,1.298,67,1.423,68,1.423,69,2.587,70,2.36,71,1.866,80,1.491,84,0.944,85,1.866,86,1.782,87,1.423,88,2.211,89,1.423,90,1.866,91,1.841,92,1.423,93,1.133,94,1.866,95,1.133,96,1.866,97,1.133,98,1.034,99,1.185,100,1.359,101,1.423,102,1.185,103,1.423,104,1.185,105,1.423,106,1.133,107,1.555,108,1.133,109,1.185,110,1.423,111,1.423,112,1.133,113,1.423,114,1.185,115,1.423,116,1.133,117,1.423,118,1.133,119,1.423,120,1.185,121,1.423,122,1.133,123,1.185,124,1.423,125,1.423,126,3.67,127,5.588,128,4.26]],["title/modules/AppModule.html",[129,0.867,130,2.625]],["body/modules/AppModule.html",[3,0.133,4,0.116,5,0.116,17,0.018,32,0.481,34,0.241,40,0.133,41,0.068,52,0.007,53,0.01,54,0.007,70,0.98,84,0.713,91,2.004,129,0.746,130,5.473,131,0.98,132,1.441,133,2.544,134,2.544,135,2.177,136,1.126,137,2.772,138,2.772,139,2.772,140,2.772,141,4.193,142,4.193,143,3.9,144,4.193,145,4.193,146,4.193,147,4.193,148,3.234,149,3.9,150,4.193,151,4.193,152,3.9,153,3.234,154,4.193,155,4.193,156,2.302,157,1.52,158,1.607,159,3.217,160,1.613,161,4.608,162,3.97,163,2.259,164,1.613,165,4.681,166,3.217,167,3.217,168,3.236,169,3.217,170,4.608,171,3.217,172,2.084,173,2.084,174,2.772,175,3.217,176,2.772,177,2.772,178,3.217,179,3.217,180,3.217,181,3.217,182,3.217,183,3.217,184,3.217,185,4.608,186,1.52,187,1.52,188,1.704,189,2.259,190,3.217,191,3.217]],["title/classes/AppPage.html",[41,0.079,192,2.88]],["body/classes/AppPage.html",[3,0.219,4,0.191,5,0.191,7,0.753,8,1.555,14,1.175,17,0.018,27,1.555,29,3.859,32,0.335,39,2.369,40,0.219,41,0.112,48,1.865,52,0.012,53,0.015,54,0.012,86,1.687,163,3.714,192,4.934,193,3.187,194,4.557,195,7.159,196,7.159,197,5.289,198,5.289,199,5.289,200,5.289,201,5.289,202,3.187,203,5.289]],["title/modules/AppRoutingModule.html",[129,0.867,141,2.422]],["body/modules/AppRoutingModule.html",[3,0.215,4,0.188,5,0.188,17,0.018,32,0.433,34,0.389,35,1.444,40,0.215,41,0.11,45,1.204,52,0.012,53,0.014,54,0.012,55,0.485,116,1.683,131,1.581,136,1.816,141,4.101,160,1.816,164,2.215,204,5.189,205,2.925,206,3.228,207,2.991,208,5.189,209,3.643,210,4.47,211,3.568,212,5.189,213,3.643,214,5.189,215,5.189,216,5.189]],["title/interfaces/AuthData.html",[217,2.422,218,2.625]],["body/interfaces/AuthData.html",[3,0.214,4,0.187,5,0.187,7,0.736,17,0.018,19,1.05,32,0.328,40,0.262,52,0.012,53,0.014,54,0.012,73,1.68,217,4.094,218,4.438,219,3.986,220,3.986,221,4.99,222,3.419,223,3.035,224,3.352,225,4.458,226,4.458,227,4.438,228,4.458,229,4.458,230,4.458,231,4.458,232,3.118,233,4.458]],["title/guards/AuthGuard.html",[0,2.88,234,1.981]],["body/guards/AuthGuard.html",[2,3.372,3,0.181,4,0.158,5,0.158,7,0.623,8,1.381,9,3.908,10,1.164,11,3.772,12,3.357,13,3.614,14,1.043,16,1.445,17,0.018,18,0.945,19,0.945,20,1.445,21,3.772,22,5.762,23,5.443,24,5.762,26,3.994,27,1.063,28,2.985,29,3.427,30,3.206,31,5.443,32,0.424,33,1.814,34,0.328,35,1.218,36,1.961,37,2.638,38,2.187,39,1.961,40,0.181,41,0.093,42,1.606,43,1.77,44,1.532,45,1.015,48,1.656,49,1.606,51,1.685,52,0.01,53,0.013,54,0.01,234,3.013,235,3.772,236,4.378,237,4.378,238,3.427,239,4.378,240,4.378,241,2.319,242,3.772,243,4.378]],["title/modules/AuthModule.html",[129,0.867,142,2.422]],["body/modules/AuthModule.html",[3,0.195,4,0.171,5,0.171,17,0.018,32,0.449,34,0.353,40,0.195,41,0.1,52,0.011,53,0.014,54,0.011,84,1.044,112,2.035,129,1.093,131,1.436,132,2.111,133,3.091,134,2.227,135,2.818,136,2.289,142,4.867,143,4.365,156,2.98,157,2.227,158,2.355,160,2.087,164,2.087,165,3.31,174,4.061,186,2.227,244,4.061,245,4.061,246,4.714,247,4.061,248,4.714,249,3.159,250,4.714,251,5.964,252,2.227]],["title/interfaces/AuthResponse.html",[217,2.422,224,2.422]],["body/interfaces/AuthResponse.html",[3,0.199,4,0.174,5,0.174,7,0.684,17,0.018,19,1.21,32,0.305,40,0.25,52,0.011,53,0.014,54,0.011,73,1.606,217,3.912,218,3.377,219,3.704,220,3.704,221,3.377,222,3.101,223,3.117,224,3.912,225,5.966,226,5.966,227,5.113,228,5.966,229,5.966,230,5.966,231,5.966,232,2.897,233,4.143]],["title/modules/AuthRoutingModule.html",[129,0.867,143,2.253]],["body/modules/AuthRoutingModule.html",[3,0.223,4,0.195,5,0.195,17,0.018,32,0.439,34,0.403,35,1.497,40,0.223,41,0.114,45,1.248,52,0.012,53,0.015,54,0.012,55,0.503,112,1.72,131,1.639,136,1.883,143,3.898,160,1.883,164,2.264,205,3.032,206,3.279,207,3.057,211,3.032,213,3.777,253,5.379,254,5.379,255,3.241]],["title/injectables/AuthService.html",[13,1.868,33,1.193]],["body/injectables/AuthService.html",[3,0.135,4,0.118,5,0.118,7,0.463,8,1.128,10,0.866,13,2.322,14,1.277,16,1.181,17,0.018,18,0.772,19,1.039,20,1.181,27,1.316,28,2.561,30,1.835,32,0.441,33,1.482,34,0.244,36,1.458,38,1.627,39,1.458,40,0.135,41,0.069,43,1.317,44,1.897,45,1.371,46,3.805,48,1.991,51,1.253,52,0.007,53,0.011,54,0.007,73,1.236,187,1.538,188,1.725,202,1.962,222,2.647,224,3.51,238,3.561,252,1.538,256,1.835,257,2.805,258,5.599,259,5.419,260,5.91,261,5.092,262,4.647,263,4.004,264,5.419,265,5.419,266,2.109,267,3.828,268,4.647,269,2.62,270,3.256,271,3.256,272,1.317,273,4.647,274,3.256,275,4.647,276,5.419,277,3.256,278,3.256,279,3.256,280,3.256,281,3.256,282,3.256,283,3.256,284,4.647,285,3.256,286,2.286,287,3.256,288,2.805,289,2.805,290,3.256,291,2.286,292,2.508,293,2.805,294,3.256,295,3.263,296,3.256,297,2.805,298,3.256,299,3.256,300,3.256,301,3.256,302,2.508,303,3.256,304,3.58,305,3.256,306,2.805,307,3.256,308,3.256,309,3.256,310,3.256,311,2.805,312,3.256,313,2.109,314,3.256,315,3.256,316,4.004,317,3.256,318,3.256,319,3.256,320,3.256,321,3.256,322,3.256,323,3.256,324,3.256,325,2.508,326,3.256,327,3.256,328,3.256,329,3.256,330,3.256,331,3.256,332,3.256,333,3.256,334,3.256,335,3.256,336,3.263,337,3.01,338,2.109,339,1.962,340,1.725,341,2.286,342,2.109,343,2.286,344,3.256,345,2.508,346,2.805,347,3.256]],["title/classes/Client.html",[41,0.079,348,1.767]],["body/classes/Client.html",[3,0.224,4,0.196,5,0.196,7,0.77,14,1.276,17,0.017,18,1.156,19,1.156,40,0.224,41,0.114,52,0.012,53,0.015,54,0.012,73,1.726,193,3.259,223,3.029,348,3.067,349,4.661,350,3.115,351,5.358,352,5.41,353,5.41,354,5.41]],["title/modules/ClientModule.html",[129,0.867,144,2.422]],["body/modules/ClientModule.html",[3,0.192,4,0.168,5,0.168,17,0.018,32,0.464,34,0.347,35,1.289,40,0.192,41,0.098,52,0.011,53,0.013,54,0.011,84,1.026,93,1.918,106,1.918,129,1.075,131,1.412,132,2.075,133,3.066,134,2.189,135,2.189,136,1.622,144,4.947,148,3.603,153,3.603,156,2.947,157,2.189,158,2.315,160,2.064,164,2.064,172,3.001,173,3.001,186,2.189,207,2.787,249,3.125,355,3.992,356,3.992,357,4.633,358,4.633,359,4.633,360,3.992,361,3.254,362,3.992]],["title/modules/ClientRoutingModule.html",[129,0.867,145,2.422]],["body/modules/ClientRoutingModule.html",[1,3.758,3,0.21,4,0.183,5,0.183,9,3.516,17,0.018,32,0.459,34,0.38,35,1.409,40,0.21,41,0.107,45,1.175,52,0.011,53,0.014,54,0.011,55,0.583,93,1.658,106,1.658,107,1.409,131,1.543,136,1.772,145,4.04,160,1.772,164,2.183,205,2.855,206,3.193,207,2.947,211,3.516,234,3.58,255,3.051,361,3.556,362,4.363,363,5.065,364,5.065,365,5.065,366,3.281,367,2.652]],["title/injectables/ClientService.html",[33,1.193,368,1.868]],["body/injectables/ClientService.html",[3,0.176,4,0.154,5,0.154,7,0.603,8,1.353,10,1.128,14,1.141,16,1.078,17,0.018,18,0.705,19,0.705,20,1.078,27,1.353,28,2.94,29,3.357,32,0.446,33,1.777,34,0.318,36,1.899,38,2.119,39,1.899,40,0.176,41,0.09,43,1.715,44,2.312,45,0.984,48,1.811,52,0.01,53,0.013,54,0.01,65,1.804,187,2.004,188,2.247,252,2.004,256,2.391,266,2.748,267,4.28,269,3.141,348,3.122,367,2.369,368,2.784,369,3.654,370,3.141,371,2.786,372,6.607,373,6.607,374,3.053,375,4.241,376,4.241,377,4.241,378,2.391,379,2.119,380,4.241,381,1.899,382,4.241,383,2.978,384,4.241,385,4.241,386,4.241,387,2.748,388,3.654,389,4.241,390,2.978,391,2.978,392,2.978,393,2.978,394,2.978]],["title/components/ClientsComponent.html",[55,0.35,93,0.994]],["body/components/ClientsComponent.html",[3,0.107,4,0.094,5,0.094,7,0.369,8,0.954,10,1.045,12,2.939,14,1.279,16,1.206,17,0.018,18,1.034,19,0.789,20,1.206,27,1.511,32,0.394,34,0.194,35,0.721,40,0.107,41,0.055,42,1.441,44,1.853,45,0.601,48,1.743,49,0.951,51,1.827,52,0.006,53,0.009,54,0.006,55,0.444,56,0.689,57,1.253,58,0.866,59,0.866,60,0.866,62,1.144,66,0.79,67,0.866,68,0.866,69,2.437,70,2.223,71,1.312,73,1.045,74,1.827,75,1.375,76,1.312,77,1.827,79,0.998,80,0.907,84,0.574,85,1.312,86,1.253,87,0.866,88,1.768,89,0.866,90,1.312,91,0.721,92,0.866,93,1.408,94,1.312,95,0.689,96,1.312,97,0.689,98,0.629,99,0.721,100,0.827,101,0.866,102,0.721,103,0.866,104,0.721,105,0.866,106,0.689,107,1.093,108,0.689,109,0.721,110,0.866,111,0.866,112,0.689,113,0.866,114,0.721,115,0.866,116,0.689,117,0.866,118,0.689,119,0.866,120,0.721,121,0.866,122,0.689,123,0.721,124,0.866,125,0.866,223,1.589,241,2.513,272,2.141,348,2.501,350,1.759,367,2.645,368,2.992,371,2.682,378,1.461,381,1.759,395,2.233,396,2.242,397,3.384,398,2.674,399,2.513,400,3.161,401,3.43,402,3.43,403,2.545,404,3.43,405,2.501,406,2.759,407,4.561,408,1.996,409,3.296,410,3.507,411,3.928,412,2.591,413,2.591,414,2.367,415,3.384,416,2.591,417,2.546,418,2.591,419,2.591,420,3.928,421,2.591,422,2.233,423,2.591,424,2.591,425,2.591,426,2.591,427,2.591,428,1.561,429,1.679,430,1.561,431,2.233,432,4.205,433,1.82,434,2.545,435,1.82,436,3.384,437,1.679,438,1.679,439,2.233,440,2.233,441,2.215,442,2.367,443,1.561,444,2.759,445,3.384,446,2.545,447,3.384]],["title/classes/Config.html",[41,0.079,98,0.908]],["body/classes/Config.html",[3,0.208,4,0.182,5,0.182,7,0.715,14,1.29,17,0.018,18,1.032,19,1.223,40,0.208,41,0.106,52,0.011,53,0.014,54,0.011,73,1.65,75,1.758,76,2.073,98,1.755,193,3.027,223,3.091,350,3.016,448,4.329,449,5.188,450,5.418,451,5.024,452,5.347,453,5.024,454,5.024,455,5.024]],["title/modules/ConfigModule.html",[129,0.867,146,2.422]],["body/modules/ConfigModule.html",[3,0.181,4,0.158,5,0.158,17,0.018,32,0.473,34,0.328,35,1.215,40,0.181,41,0.092,52,0.01,53,0.013,54,0.01,84,0.968,95,1.888,99,1.975,108,1.888,129,1.013,131,1.331,132,1.956,133,2.982,134,2.064,135,2.064,136,1.529,146,4.954,148,3.547,153,3.547,156,2.837,157,2.064,158,2.182,160,1.988,164,1.988,168,3.988,172,2.829,173,2.829,186,2.064,207,2.683,249,3.009,360,3.763,456,3.763,457,3.763,458,4.368,459,4.368,460,4.368,461,3.067,462,3.763,463,4.368,464,3.365,465,4.368,466,5.679,467,5.679,468,3.365,469,3.067]],["title/modules/ConfigRoutingModule.html",[129,0.867,147,2.422]],["body/modules/ConfigRoutingModule.html",[1,3.758,3,0.21,4,0.183,5,0.183,9,3.516,17,0.018,32,0.459,34,0.38,35,1.409,40,0.21,41,0.107,45,1.175,52,0.011,53,0.014,54,0.011,55,0.583,95,1.658,100,1.989,107,1.409,108,1.658,131,1.543,136,1.772,147,4.04,160,1.772,164,2.183,205,2.855,206,3.193,207,2.947,211,3.516,234,3.58,255,3.051,366,3.281,461,3.556,462,4.363,470,5.065,471,5.065,472,5.065]],["title/components/ConfigSelectionPageComponent.html",[55,0.35,97,0.994]],["body/components/ConfigSelectionPageComponent.html",[3,0.09,4,0.079,5,0.079,7,0.31,8,0.835,10,0.914,12,2.762,14,1.246,16,1.082,17,0.018,18,0.971,19,0.707,20,1.082,27,1.471,32,0.395,34,0.164,35,0.607,40,0.09,41,0.046,42,1.262,44,1.954,45,1.121,48,1.763,52,0.005,53,0.008,54,0.005,55,0.398,56,0.58,57,1.097,58,0.729,59,0.729,60,0.729,62,2.201,64,1.681,66,0.665,67,1.422,68,0.729,69,2.371,70,2.163,71,1.149,72,2.963,73,0.914,74,1.639,75,0.764,76,0.729,77,1.639,79,0.84,80,0.764,81,1.88,84,0.483,85,1.149,86,1.097,87,0.729,88,1.614,89,0.729,90,1.149,91,0.607,92,0.729,93,0.58,94,1.149,95,0.58,96,1.149,97,1.285,98,1.356,99,0.607,100,0.696,101,0.729,102,0.607,103,0.729,104,0.607,105,0.729,106,0.58,107,0.957,108,0.58,109,0.607,110,0.729,111,0.729,112,0.58,113,0.729,114,0.607,115,0.729,116,0.58,117,0.729,118,0.58,119,0.729,120,0.607,121,0.729,122,0.58,123,1.462,124,0.729,125,0.729,223,0.882,241,2.559,272,1.391,348,2.484,350,1.906,367,2.65,368,2.92,371,1.906,374,2.485,378,1.23,379,1.09,381,1.54,396,2.011,399,2.255,400,2.862,401,3.129,402,3.129,403,3.129,404,3.129,405,2.283,406,2.415,409,3.096,410,3.295,414,2.072,417,2.485,428,1.315,429,1.413,430,1.315,432,4.104,433,1.532,434,2.228,435,1.532,437,2.228,438,1.413,442,2.072,443,1.315,444,2.415,473,5.919,474,4.824,475,3.129,476,2.415,477,2.182,478,3.365,479,3.439,480,2.182,481,2.182,482,2.182,483,2.182,484,2.182,485,2.182,486,2.415,487,2.182,488,2.072,489,2.649,490,2.182,491,2.182,492,2.182,493,2.182,494,2.182,495,1.681,496,3.921,497,1.532,498,1.532,499,2.415,500,3.392,501,2.649,502,1.681,503,2.649,504,1.532,505,1.532,506,2.415,507,2.649,508,3.439,509,2.649,510,3.439,511,3.129,512,4.162]],["title/injectables/ConfigService.html",[33,1.193,478,2.253]],["body/injectables/ConfigService.html",[3,0.115,4,0.1,5,0.1,7,0.394,8,1.004,10,0.737,14,1.2,16,1.662,17,0.018,18,1.087,19,0.91,20,1.662,27,1.545,28,2.768,32,0.389,33,1.318,34,0.208,36,1.242,38,1.385,39,1.242,40,0.115,41,0.059,43,1.121,44,2.289,45,1.27,48,1.946,52,0.006,53,0.009,54,0.006,65,1.179,98,1.545,107,1.15,187,1.31,188,1.469,202,2.977,252,1.31,256,1.563,266,1.796,267,3.548,269,2.33,316,6.024,325,3.806,350,3.3,370,2.33,371,2.751,374,2.706,379,1.385,381,1.851,383,2.902,387,2.677,390,2.902,391,2.902,392,2.902,393,2.902,394,2.902,399,3.103,417,1.179,449,4.219,478,2.49,509,3.184,513,2.389,514,4.133,515,4.133,516,4.133,517,4.133,518,4.133,519,4.133,520,4.133,521,2.772,522,4.133,523,2.772,524,4.133,525,2.772,526,4.133,527,2.772,528,4.133,529,2.772,530,4.133,531,2.772,532,4.133,533,4.512,534,2.772,535,4.133,536,2.772,537,2.772,538,2.772,539,2.772,540,3.184,541,4.133,542,4.133,543,4.133,544,3.184,545,4.133,546,4.133,547,2.677,548,3.561,549,4.133,550,3.561,551,2.772,552,2.772,553,2.772,554,2.772,555,2.772,556,2.772,557,4.941,558,2.772,559,2.772]],["title/components/ConfigsComponent.html",[55,0.35,95,0.994]],["body/components/ConfigsComponent.html",[3,0.081,4,0.071,5,0.071,7,0.279,8,0.767,10,0.84,12,2.648,14,1.287,16,1.267,17,0.018,18,1.027,19,0.756,20,1.267,27,1.5,32,0.4,34,0.147,35,0.546,40,0.081,41,0.041,42,1.159,44,1.961,45,1.3,48,1.697,49,1.456,51,0.755,52,0.004,53,0.007,54,0.004,55,0.371,56,0.522,57,1.008,58,0.655,59,0.655,60,0.655,62,0.92,66,0.598,67,0.655,68,0.655,69,2.327,70,2.122,71,1.055,73,0.84,74,1.527,75,1.106,76,1.325,77,1.527,79,0.755,80,0.687,84,0.435,85,1.055,86,1.008,87,0.655,88,1.519,89,0.655,90,1.055,91,0.546,92,0.655,93,0.522,94,1.055,95,1.209,96,1.055,97,0.522,98,0.963,99,0.546,100,1.7,101,0.655,102,0.546,103,0.655,104,0.546,105,0.655,106,0.522,107,0.879,108,0.522,109,0.546,110,0.655,111,0.655,112,0.522,113,0.655,114,0.546,115,0.655,116,0.522,117,0.655,118,0.522,119,0.655,120,0.546,121,0.655,122,0.522,123,1.559,124,0.655,125,0.655,222,1.777,223,0.793,241,2.642,272,1.839,313,3.452,339,1.182,340,1.039,341,1.378,342,1.271,343,1.378,345,2.434,348,1.493,350,1.777,367,2.383,368,2.8,371,2.387,374,2.383,378,1.106,379,0.98,381,2.037,387,1.271,396,1.875,398,2.236,399,2.102,400,2.518,401,2.946,402,2.946,405,2.149,406,2.219,409,2.823,410,3.159,414,1.904,417,2.266,428,1.182,429,1.271,430,1.182,432,4.338,433,1.378,434,1.271,435,1.378,437,2.57,438,1.271,441,1.781,442,1.182,443,1.182,444,2.219,475,2.946,476,2.219,478,3.376,486,2.219,488,2.74,489,2.434,495,1.511,496,4.655,497,1.378,498,1.378,499,2.786,500,3.742,501,3.056,502,1.511,503,3.056,504,2.219,505,1.378,506,2.219,507,2.434,509,2.434,533,3.056,550,2.722,560,1.69,561,2.722,562,4.549,563,2.722,564,3.16,565,3.919,566,1.69,567,3.63,568,3.16,569,1.962,570,1.962,571,1.962,572,1.962,573,1.962,574,1.962,575,1.962,576,2.722,577,1.962,578,3.16,579,1.962,580,1.962,581,1.962,582,1.962,583,1.962,584,1.962,585,1.962,586,1.962,587,1.962,588,1.962,589,1.69,590,1.511,591,1.69,592,5.329,593,1.962,594,3.16,595,1.962,596,1.69,597,1.962,598,1.962,599,3.919,600,1.69,601,1.69,602,1.962,603,3.418,604,1.69,605,1.511,606,1.962,607,2.722,608,1.962,609,3.16]],["title/components/ConfigsTableComponent.html",[55,0.35,99,1.04]],["body/components/ConfigsTableComponent.html",[3,0.077,4,0.067,5,0.067,7,0.428,8,0.731,10,0.491,12,2.583,14,1.263,16,0.968,17,0.018,18,0.909,19,0.804,20,0.968,26,2.114,27,1.506,30,1.697,32,0.306,34,0.139,35,0.514,40,0.077,41,0.039,42,1.104,43,0.747,44,1.053,45,1.268,48,1.109,49,0.678,51,1.466,52,0.004,53,0.007,54,0.004,55,0.356,56,0.491,57,0.96,58,0.617,59,0.617,60,0.617,62,0.876,66,0.563,67,0.617,68,0.617,69,2.3,70,2.098,71,1.005,73,0.8,74,1.466,75,1.537,76,1.467,77,1.466,79,0.711,80,1.053,84,0.409,85,1.005,86,0.96,87,0.617,88,1.467,89,0.617,90,1.005,91,0.514,92,0.617,93,0.491,94,1.005,95,0.491,96,1.005,97,0.491,98,1.259,99,1.222,100,1.818,101,0.617,102,0.514,103,0.617,104,0.514,105,0.617,106,0.491,107,1.442,108,0.491,109,0.514,110,1.272,111,0.617,112,0.491,113,0.617,114,0.514,115,0.617,116,0.491,117,0.617,118,0.491,119,0.617,120,0.514,121,0.617,122,0.491,123,0.837,124,0.617,125,0.617,157,0.873,227,2.674,232,1.113,241,1.595,263,2.593,272,2.383,295,1.297,342,1.197,367,1.62,387,1.197,396,1.8,405,2.075,410,2.475,440,1.592,450,2.319,464,5.345,468,1.423,488,1.113,500,2.674,504,1.297,511,1.197,547,2.467,548,1.592,605,1.423,610,1.297,611,5.978,612,1.592,613,2.593,614,3.809,615,3.01,616,3.809,617,3.809,618,4.391,619,3.809,620,4.391,621,4.391,622,4.391,623,3.01,624,4.391,625,4.391,626,4.391,627,2.593,628,2.319,629,3.809,630,2.593,631,4.391,632,3.809,633,1.848,634,3.809,635,4.391,636,3.01,637,1.848,638,1.848,639,3.281,640,1.848,641,1.848,642,1.848,643,1.848,644,1.848,645,4.835,646,1.848,647,1.848,648,3.01,649,1.848,650,1.848,651,1.848,652,1.848,653,3.01,654,1.848,655,1.848,656,1.848,657,1.848,658,1.848,659,3.724,660,2.593,661,5.184,662,3.01,663,3.809,664,4.391,665,1.592,666,1.848,667,1.848,668,3.809,669,1.848,670,1.848,671,1.848,672,1.848,673,1.848,674,1.848,675,1.848,676,1.848,677,3.01,678,1.848,679,3.809,680,1.848,681,1.848,682,1.592,683,2.934,684,1.848,685,1.848,686,1.592,687,1.848,688,1.848,689,1.848,690,1.848,691,1.848,692,1.848,693,1.848,694,1.848,695,1.848,696,3.01,697,3.01,698,3.01,699,3.01,700,3.01,701,3.01,702,3.01,703,3.01,704,1.297,705,4.391,706,1.848,707,1.592,708,3.083,709,3.083,710,3.01,711,1.592,712,4.355,713,2.467,714,2.593,715,2.593,716,2.593,717,3.01,718,1.848,719,1.592,720,4.002,721,2.114,722,2.593,723,1.592,724,2.319,725,2.593,726,1.848,727,1.423,728,2.593,729,3.281,730,2.593,731,1.848,732,2.674,733,2.674,734,1.848,735,1.848,736,3.01,737,2.593,738,2.319,739,2.319,740,1.848,741,3.083,742,2.319,743,1.848,744,1.848,745,2.674,746,3.281,747,2.114,748,2.593,749,1.297,750,1.848,751,1.848,752,1.848]],["title/modules/CoreModule.html",[129,0.867,148,1.868]],["body/modules/CoreModule.html",[3,0.156,4,0.137,5,0.137,17,0.018,32,0.465,34,0.283,40,0.156,41,0.08,52,0.009,53,0.012,54,0.009,56,1.81,62,1.834,63,2.648,84,0.835,97,1.81,104,2.06,109,2.06,114,2.06,116,1.81,129,0.875,131,1.149,132,1.689,133,2.771,134,1.782,135,1.782,136,2.052,148,3.861,149,4.102,153,3.402,156,2.573,157,1.782,158,1.884,160,1.802,164,1.802,165,2.648,168,3.616,173,2.443,176,3.249,186,1.782,209,2.648,210,3.249,249,2.728,469,2.648,474,2.648,753,3.249,754,3.249,755,3.771,756,3.249,757,3.771,758,3.771,759,3.771,760,3.771,761,3.771,762,4.436,763,3.771,764,2.905,765,3.771,766,3.771]],["title/modules/CoreRoutingModule.html",[129,0.867,149,2.253]],["body/modules/CoreRoutingModule.html",[1,3.721,3,0.206,4,0.18,5,0.18,9,3.482,17,0.018,32,0.457,34,0.374,35,1.387,40,0.206,41,0.105,45,1.156,52,0.011,53,0.014,54,0.011,55,0.577,56,1.642,62,2.099,63,3.5,66,1.519,97,1.642,98,1.21,131,1.519,136,1.745,149,3.721,160,1.745,164,2.161,205,2.81,206,3.171,207,2.918,211,3.482,234,3.555,255,3.003,366,3.229,474,3.5,762,5.321,767,4.985,768,4.985,769,4.985,770,4.295]],["title/components/DropDownComponent.html",[55,0.35,102,1.04]],["body/components/DropDownComponent.html",[3,0.1,4,0.087,5,0.087,7,0.528,8,0.902,10,0.988,14,1.203,16,0.944,17,0.018,18,0.847,19,0.754,20,0.944,27,1.101,30,2.094,32,0.287,34,0.181,40,0.1,41,0.051,42,1.363,44,1.3,51,0.927,52,0.005,53,0.008,54,0.005,55,0.424,56,0.64,57,1.185,58,0.804,59,0.804,60,0.804,62,1.081,66,0.734,67,0.804,68,0.804,69,2.41,70,2.198,71,1.241,73,0.988,80,1.3,84,0.533,85,1.241,86,1.185,87,0.804,88,1.702,89,0.804,90,1.241,91,0.67,92,0.804,93,0.64,94,1.241,95,0.64,96,1.241,97,0.64,98,0.585,99,0.67,100,0.768,101,0.804,102,1.418,103,0.804,104,0.67,105,0.804,106,0.64,107,1.033,108,0.64,109,0.67,110,0.804,111,0.804,112,0.64,113,0.804,114,0.67,115,0.804,116,0.64,117,0.804,118,0.64,119,0.804,120,0.67,121,0.804,122,0.64,123,0.67,124,0.804,125,0.804,202,1.451,232,2.238,272,1.833,295,1.691,339,1.451,340,1.276,374,2.578,379,1.203,396,2.142,405,2.408,488,2.238,512,3.906,540,3.492,544,3.492,547,1.56,610,1.691,628,2.861,630,3.2,639,4.39,659,3.492,660,3.906,683,3.492,704,1.691,708,2.608,709,1.691,712,1.691,713,1.56,720,2.608,721,1.691,727,1.855,732,2.608,733,2.608,737,3.2,738,1.855,741,3.578,742,3.492,745,1.691,746,2.075,747,3.866,748,2.075,749,1.691,771,5.752,772,5.143,773,2.075,774,6.063,775,5.506,776,4.534,777,3.714,778,5.506,779,4.534,780,5.096,781,3.714,782,3.714,783,3.714,784,2.408,785,5.096,786,3.714,787,3.714,788,2.408,789,2.408,790,2.408,791,2.408,792,2.408,793,2.408,794,2.408,795,2.408,796,3.714,797,2.408,798,4.39,799,2.408,800,2.408,801,1.855,802,2.408,803,4.534,804,2.408,805,2.408,806,2.408,807,1.691,808,5.506,809,2.408,810,2.408,811,2.408,812,2.408,813,3.714,814,3.714,815,3.925,816,4.534,817,3.2,818,2.408,819,2.408,820,2.408,821,2.408,822,5.096,823,5.096,824,4.534,825,2.408,826,2.408,827,2.408,828,2.408,829,2.408,830,2.408,831,2.408,832,2.408,833,2.075,834,2.075,835,1.855,836,1.855,837,3.906,838,2.075,839,2.075,840,3.2,841,3.714,842,5.096,843,3.714,844,2.861,845,3.714,846,2.075,847,1.855,848,2.408,849,2.408,850,2.408,851,2.075,852,2.075,853,2.075,854,2.408,855,2.408,856,2.408,857,2.075,858,2.408,859,3.714,860,2.408,861,2.408,862,2.075,863,2.408]],["title/interceptors/ErrorInterceptor.html",[864,2.625,865,2.422]],["body/interceptors/ErrorInterceptor.html",[3,0.188,4,0.164,5,0.164,7,0.645,8,1.413,10,1.206,13,3.583,14,1.067,16,1.478,17,0.018,18,0.967,19,0.967,20,1.478,27,1.101,28,3.035,32,0.444,33,1.856,34,0.34,36,2.031,37,2.732,40,0.188,41,0.096,42,1.664,43,1.833,45,1.052,48,1.694,52,0.01,53,0.013,54,0.01,252,2.142,286,3.184,340,3.403,807,3.184,865,3.769,866,3.493,867,3.906,868,4.482,869,3.493,870,4.534,871,4.482,872,5.221,873,5.221,874,4.534,875,3.493,876,3.493,877,4.482,878,3.906,879,4.534,880,4.534,881,3.906,882,4.534,883,3.906,884,3.906,885,4.534,886,4.534,887,4.534,888,4.534]],["title/components/FooterComponent.html",[55,0.35,104,1.04]],["body/components/FooterComponent.html",[3,0.159,4,0.139,5,0.139,17,0.018,18,0.865,32,0.374,34,0.287,40,0.159,41,0.081,52,0.009,53,0.012,54,0.009,55,0.62,56,1.019,57,1.66,58,1.28,59,1.28,60,1.28,62,1.516,65,1.629,66,1.168,67,1.28,68,1.28,69,2.56,70,2.335,71,1.739,74,1.475,77,2.004,79,1.475,80,1.822,84,0.849,85,1.739,86,1.66,87,1.28,88,2.119,89,1.28,90,1.739,91,1.066,92,1.28,93,1.019,94,1.739,95,1.019,96,1.739,97,1.019,98,0.93,99,1.066,100,1.222,101,1.28,102,1.066,103,1.28,104,1.765,105,1.28,106,1.019,107,1.448,108,1.019,109,1.066,110,1.28,111,1.28,112,1.019,113,1.28,114,1.066,115,1.28,116,1.019,117,1.28,118,1.019,119,1.28,120,1.066,121,1.28,122,1.019,123,1.066,124,1.28,125,1.28,202,2.309,610,2.691,704,2.691,708,2.691,709,2.691,712,2.691,713,2.482,720,2.691,721,2.691,724,2.952,732,2.691,733,2.691,741,2.691,745,2.691,747,2.691,749,2.691,815,2.952,835,2.952,836,2.952,847,2.952,889,3.301,890,6.633,891,5.912,892,5.206,893,2.952,894,5.206,895,3.832,896,3.832,897,3.832,898,3.832]],["title/components/GlobalClientsComponent.html",[55,0.35,106,0.994]],["body/components/GlobalClientsComponent.html",[3,0.127,4,0.111,5,0.111,7,0.436,8,1.08,10,0.814,14,1.234,16,1.13,17,0.018,18,0.955,19,0.739,20,1.13,27,1.395,32,0.364,34,0.23,40,0.127,41,0.065,42,1.631,43,1.238,48,1.294,49,1.124,51,2.016,52,0.007,53,0.01,54,0.007,55,0.489,56,0.814,57,1.418,58,1.023,59,1.023,60,1.023,62,1.294,66,0.933,67,1.023,68,1.023,69,2.494,70,2.275,71,1.485,73,1.182,74,2.016,75,1.556,76,1.485,77,2.016,79,1.179,80,1.072,84,0.678,85,1.485,86,1.418,87,1.023,88,1.919,89,1.023,90,1.485,91,0.852,92,1.023,93,0.814,94,1.485,95,0.814,96,1.485,97,0.814,98,0.743,99,0.852,100,0.977,101,1.023,102,0.852,103,1.023,104,0.852,105,1.023,106,1.528,107,1.827,108,0.814,109,0.852,110,1.023,111,1.023,112,0.814,113,1.023,114,0.852,115,1.023,116,0.814,117,1.023,118,0.814,119,1.023,120,0.852,121,1.023,122,0.814,123,0.852,124,1.023,125,1.023,272,2.323,348,2.715,350,1.991,361,4.816,367,2.793,368,3.18,371,2.345,378,1.726,381,1.371,396,2.474,397,3.831,398,2.951,403,2.88,404,3.722,405,2.715,407,4.95,408,2.359,415,3.831,430,1.845,431,2.638,436,2.638,441,2.507,442,2.679,443,1.845,445,3.831,446,2.88,447,3.831,899,5.908,900,2.638,901,4.447,902,3.062,903,3.062,904,3.062,905,3.062,906,3.062,907,3.062,908,4.447]],["title/components/GlobalConfigsComponent.html",[55,0.35,108,0.994]],["body/components/GlobalConfigsComponent.html",[3,0.102,4,0.089,5,0.089,7,0.351,8,0.918,10,1.005,12,2.888,14,1.25,16,1.169,17,0.018,18,1.048,19,0.764,20,1.169,27,1.426,32,0.387,34,0.185,35,0.686,40,0.102,41,0.052,42,1.387,44,2.055,45,0.877,48,1.502,49,1.688,51,0.949,52,0.006,53,0.009,54,0.006,55,0.43,56,0.655,57,1.206,58,0.823,59,0.823,60,0.823,62,1.101,66,0.751,67,0.823,68,0.823,69,2.419,70,2.218,71,1.263,73,1.005,74,1.771,75,1.323,76,1.536,77,1.771,79,0.949,80,0.862,82,2.912,84,0.546,85,1.263,86,1.206,87,0.823,88,1.723,89,0.823,90,1.263,91,0.686,92,0.823,93,0.655,94,1.263,95,0.655,96,1.263,97,0.655,98,0.918,99,0.686,100,1.95,101,0.823,102,0.686,103,0.823,104,0.686,105,0.823,106,0.655,107,1.755,108,1.371,109,0.686,110,0.823,111,0.823,112,0.655,113,0.823,114,0.686,115,0.823,116,0.655,117,0.823,118,0.655,119,0.823,120,0.686,121,0.823,122,0.655,123,0.686,124,0.823,125,0.823,223,1.86,241,2.437,272,1.529,313,2.449,348,2.173,350,2.06,367,2.599,368,2.933,371,2.629,374,2.599,378,1.389,379,1.231,381,1.693,387,1.596,396,2.173,398,2.593,402,3.341,405,2.437,408,1.898,410,3.446,414,2.278,430,1.485,437,1.596,441,2.131,442,1.485,443,1.485,461,4.844,475,3.341,476,2.655,478,3.683,486,2.655,488,2.278,495,1.898,496,3.907,497,1.73,498,1.73,499,1.73,505,1.73,506,2.655,507,2.912,561,3.257,563,3.257,565,4.444,576,3.257,591,2.123,599,3.257,601,2.123,603,2.123,604,2.123,605,1.898,607,2.123,682,2.123,909,5.943,910,2.123,911,3.78,912,2.464,913,2.464,914,2.464,915,2.464,916,2.464,917,2.464,918,2.464,919,2.464,920,2.464,921,2.464,922,2.464,923,2.464,924,2.464,925,2.464,926,2.464,927,2.464,928,2.464]],["title/interceptors/JwtInterceptor.html",[864,2.625,929,2.422]],["body/interceptors/JwtInterceptor.html",[3,0.189,4,0.165,5,0.165,7,0.648,8,1.417,10,1.211,13,3.392,14,1.07,16,1.483,17,0.018,18,0.97,19,0.97,20,1.483,27,1.106,28,3.042,32,0.43,33,1.861,34,0.342,36,2.04,37,2.745,40,0.189,41,0.096,42,1.672,43,1.842,45,1.354,48,1.326,52,0.01,53,0.013,54,0.01,238,3.516,252,2.153,304,4.495,306,5.028,340,3.411,866,3.509,868,4.495,871,4.495,872,5.23,873,5.23,875,4.495,876,3.509,877,4.495,929,3.78,930,3.925,931,4.556,932,4.556,933,5.836,934,4.556,935,4.556,936,4.556,937,4.556,938,4.556,939,4.556,940,3.925]],["title/components/LeftSidebarComponent.html",[55,0.35,109,1.04]],["body/components/LeftSidebarComponent.html",[3,0.152,4,0.133,5,0.133,7,0.522,10,1.537,14,1.143,17,0.017,18,0.961,19,0.84,32,0.32,34,0.275,40,0.152,41,0.132,52,0.008,53,0.011,54,0.008,55,0.54,56,0.976,57,1.612,58,1.226,59,1.226,60,1.226,62,1.471,66,1.118,67,1.226,68,1.226,69,2.548,70,2.324,71,1.688,73,1.344,74,2.226,75,1.769,76,1.688,77,2.226,79,1.413,80,1.284,84,0.813,85,1.688,86,1.612,87,1.226,88,2.081,89,1.226,90,1.688,91,1.021,92,1.226,93,0.976,94,1.688,95,0.976,96,1.688,97,0.976,98,0.891,99,1.021,100,1.17,101,1.226,102,1.021,103,1.226,104,1.021,105,1.226,106,0.976,107,1.406,108,0.976,109,1.733,110,2.354,111,1.226,112,0.976,113,1.226,114,1.021,115,1.226,116,0.976,117,1.226,118,0.976,119,1.226,120,1.021,121,1.226,122,0.976,123,1.021,124,1.226,125,1.226,223,1.484,241,1.944,414,2.211,452,3.161,628,3.893,659,3.893,711,4.354,719,4.354,764,5.032,941,5.628,942,3.161,943,5.054,944,5.781,945,5.054,946,5.054,947,3.67,948,3.67,949,3.67,950,3.67,951,3.67,952,5.054]],["title/components/LoginComponent.html",[55,0.35,112,0.994]],["body/components/LoginComponent.html",[3,0.126,4,0.11,5,0.11,7,0.431,8,1.072,10,1.174,12,3.094,13,3.169,14,1.115,16,0.771,17,0.018,18,0.865,19,0.504,20,0.771,27,1.072,32,0.402,34,0.227,35,0.844,37,1.827,40,0.126,41,0.064,42,1.62,44,1.822,45,1.024,49,1.62,51,2.005,52,0.007,53,0.01,54,0.007,55,0.487,56,0.806,57,1.408,58,1.013,59,1.013,60,1.013,62,1.285,66,0.924,67,1.013,68,1.013,69,2.491,70,2.272,71,1.475,73,1.174,74,2.005,75,1.545,76,1.475,77,2.005,79,1.168,80,1.061,84,0.672,85,1.475,86,1.408,87,1.013,88,1.91,89,1.013,90,1.475,91,0.844,92,1.013,93,0.806,94,1.475,95,0.806,96,1.475,97,0.806,98,0.736,99,0.844,100,0.967,101,1.013,102,0.844,103,1.013,104,0.844,105,1.013,106,0.806,107,1.228,108,0.806,109,0.844,110,1.013,111,1.013,112,1.521,113,1.013,114,0.844,115,1.013,116,0.806,117,1.013,118,0.806,119,1.013,120,0.844,121,1.013,122,0.806,123,0.844,124,1.013,125,1.013,213,4.454,232,1.827,238,1.827,242,5.237,272,1.786,286,2.13,291,2.13,292,2.336,302,2.336,345,2.336,396,2.46,398,2.935,405,2.702,410,3.691,441,2.935,446,2.86,770,2.613,807,3.101,869,2.336,953,2.613,954,4.416,955,4.416,956,3.033,957,3.033,958,3.033,959,3.033,960,3.033,961,3.033,962,3.401,963,4.416,964,3.033,965,3.033,966,2.613,967,3.033,968,3.033,969,2.613,970,3.033,971,3.033,972,3.033,973,3.033,974,3.033,975,3.033,976,3.033,977,3.804,978,4.416]],["title/interceptors/MockInterceptor.html",[864,2.625,979,2.625]],["body/interceptors/MockInterceptor.html",[3,0.076,4,0.067,5,0.067,7,0.262,8,0.729,14,0.338,16,0.468,17,0.018,18,0.802,19,0.306,20,0.468,26,1.292,27,0.447,28,1.795,32,0.383,33,0.957,34,0.138,36,0.824,38,0.92,39,0.824,40,0.124,41,0.039,42,0.675,45,1.63,46,3.076,48,2.168,49,1.394,52,0.004,53,0.007,54,0.004,75,0.644,76,1.463,98,1.325,107,1.057,123,0.835,187,2.445,188,0.975,189,1.292,221,1.292,222,2.317,232,1.808,238,1.109,252,0.87,269,1.037,286,1.292,291,1.292,292,1.418,302,2.311,304,3.986,311,3.273,313,1.944,325,1.418,336,3.076,337,3.535,338,3.126,339,3.288,340,3.206,341,2.667,342,3.352,343,2.667,346,1.586,350,1.344,367,1.276,370,1.037,388,3.273,399,2.321,400,0.87,401,1.944,422,1.586,449,1.418,450,3.375,475,1.944,511,1.192,540,1.418,665,1.586,801,1.418,807,1.292,851,2.585,866,1.418,868,2.311,871,2.311,872,3.375,873,3.375,875,2.311,876,1.418,877,2.311,878,2.585,881,1.586,883,1.586,940,1.586,962,1.418,979,2.667,980,1.418,981,1.84,982,3,983,2.311,984,1.586,985,1.84,986,1.84,987,1.84,988,1.84,989,1.418,990,1.84,991,3,992,3,993,3,994,3,995,3.799,996,1.84,997,5.69,998,1.84,999,1.84,1000,1.84,1001,1.84,1002,1.84,1003,6.76,1004,1.84,1005,1.84,1006,6.195,1007,1.84,1008,1.84,1009,4.381,1010,4.825,1011,4.825,1012,4.825,1013,1.84,1014,1.84,1015,1.84,1016,3,1017,3.799,1018,1.84,1019,1.84,1020,3,1021,3,1022,1.84,1023,1.84,1024,1.84,1025,3,1026,1.84,1027,3,1028,3.799,1029,1.84,1030,1.84,1031,1.84,1032,5.175,1033,1.84,1034,4.381,1035,3,1036,3.799,1037,3.799,1038,1.84,1039,1.84,1040,1.84,1041,3,1042,3.799,1043,1.84,1044,1.84,1045,1.84,1046,1.84,1047,1.84,1048,1.84,1049,1.84,1050,1.84,1051,3,1052,3,1053,1.84,1054,1.84,1055,1.84,1056,1.84,1057,4.381,1058,1.84,1059,1.84,1060,1.84,1061,1.84,1062,1.84,1063,1.586,1064,1.84,1065,1.84,1066,1.84,1067,3,1068,1.84,1069,1.84,1070,1.84,1071,1.84,1072,1.84,1073,3,1074,4.381,1075,1.84,1076,3.799,1077,3,1078,1.84,1079,1.84,1080,1.84,1081,1.84,1082,1.84,1083,1.586,1084,1.84,1085,1.84,1086,3,1087,1.84,1088,1.586,1089,1.84,1090,1.84,1091,1.84,1092,1.84,1093,1.84,1094,3.799,1095,3.799,1096,3.799,1097,3.799,1098,1.84,1099,2.585,1100,1.84,1101,1.292,1102,1.586,1103,1.586,1104,2.311,1105,1.586,1106,1.586,1107,1.418,1108,1.418,1109,1.418]],["title/modules/MockModule.html",[129,0.867,150,2.422]],["body/modules/MockModule.html",[3,0.216,4,0.189,5,0.189,17,0.018,32,0.451,34,0.391,40,0.216,41,0.11,45,1.21,52,0.012,53,0.014,54,0.012,131,1.59,133,2.465,135,2.465,150,4.114,160,1.826,164,2.223,186,2.465,187,2.465,188,2.764,249,3.365,336,4.46,337,4.114,338,3.38,1101,4.46,1110,4.019,1111,5.217,1112,4.892]],["title/components/NavbarComponent.html",[55,0.35,114,1.04]],["body/components/NavbarComponent.html",[3,0.084,4,0.073,5,0.073,7,0.462,8,0.788,10,0.539,12,2.684,13,2.703,14,0.992,16,0.515,17,0.018,18,0.674,19,0.771,20,0.515,27,0.788,30,2.614,32,0.343,34,0.152,35,0.564,37,1.222,40,0.084,41,0.043,43,0.82,44,0.71,46,2.849,47,1.748,51,1.562,52,0.005,53,0.007,54,0.005,55,0.474,56,0.539,57,1.035,58,0.678,59,0.678,60,0.678,62,0.945,65,1.38,66,0.618,67,0.678,68,0.678,69,2.341,70,2.135,71,1.084,73,0.863,74,0.781,75,0.71,76,0.678,77,1.25,79,0.781,80,1.136,82,2.5,84,0.449,85,1.084,86,1.035,87,0.678,88,1.549,89,0.678,90,1.084,91,0.564,92,0.678,93,0.539,94,1.084,95,0.539,96,1.084,97,0.539,98,0.493,99,0.564,100,0.647,101,0.678,102,0.564,103,0.678,104,0.564,105,0.678,106,0.539,107,0.903,108,0.539,109,0.564,110,1.549,111,0.678,112,0.539,113,0.678,114,1.29,115,0.678,116,0.539,117,0.678,118,0.539,119,0.678,120,0.564,121,0.678,122,0.539,123,0.564,124,0.678,125,0.678,202,1.956,222,1.817,238,2.445,261,4.661,272,1.313,293,1.748,297,2.796,313,1.314,547,3.943,610,1.424,686,1.748,704,1.424,707,1.748,708,4.693,709,3.561,712,4.383,713,2.103,714,4.37,715,4.37,716,3.496,720,4.274,721,1.424,722,2.796,724,3.907,725,3.496,727,4.167,728,3.995,729,2.796,730,4.37,732,1.424,733,2.279,738,2.5,741,2.849,742,4.167,745,3.989,747,4.559,749,3.799,798,3.496,815,3.907,817,2.796,833,2.796,834,2.796,835,3.125,836,2.5,837,1.748,838,1.748,839,1.748,840,1.748,844,3.125,846,2.796,847,3.572,852,1.748,853,1.748,857,1.748,862,4.37,869,1.563,884,1.748,893,1.563,966,1.748,969,2.796,977,2.796,1113,1.748,1114,6.086,1115,4.057,1116,3.246,1117,4.057,1118,4.637,1119,3.246,1120,2.029,1121,3.246,1122,3.246,1123,2.029,1124,2.029,1125,2.029,1126,2.029,1127,2.029,1128,2.029,1129,4.057,1130,2.029,1131,3.246,1132,3.246,1133,4.057,1134,3.246,1135,3.246,1136,3.246,1137,3.246,1138,3.246,1139,3.246,1140,2.029,1141,2.029,1142,2.029,1143,2.029,1144,3.246,1145,5.072,1146,2.029,1147,2.029,1148,6.086,1149,3.995,1150,4.637,1151,4.637,1152,3.246,1153,2.029,1154,2.029,1155,2.029,1156,2.029,1157,5.681,1158,2.029,1159,2.029,1160,2.029,1161,2.029,1162,2.029,1163,2.029,1164,4.637,1165,2.029,1166,4.057,1167,2.029,1168,2.029,1169,2.029,1170,2.029,1171,2.029,1172,3.246,1173,3.246,1174,3.246,1175,3.246,1176,2.029,1177,2.029,1178,2.029,1179,2.029,1180,3.246,1181,3.246,1182,2.029,1183,2.029]],["title/components/PageNotFoundComponent.html",[55,0.35,116,0.994]],["body/components/PageNotFoundComponent.html",[3,0.166,4,0.145,5,0.145,17,0.018,18,0.891,32,0.339,34,0.3,40,0.166,41,0.085,52,0.009,53,0.012,54,0.009,55,0.629,56,1.064,57,1.709,58,1.336,59,1.336,60,1.336,62,1.56,65,1.701,66,1.219,67,2.402,68,1.336,69,2.572,70,2.346,71,1.79,74,1.54,77,2.063,79,1.54,80,1.4,84,0.886,85,1.79,86,1.709,87,1.336,88,2.156,89,1.336,90,1.79,91,1.113,92,1.336,93,1.064,94,1.79,95,1.064,96,1.79,97,1.064,98,0.971,99,1.113,100,1.276,101,1.336,102,1.113,103,1.336,104,1.113,105,1.336,106,1.064,107,1.491,108,1.064,109,1.113,110,1.336,111,1.336,112,1.064,113,1.336,114,1.113,115,1.336,116,1.717,117,1.336,118,1.064,119,1.336,120,1.113,121,1.336,122,1.064,123,1.113,124,1.336,125,1.336,209,2.809,893,3.082,1184,3.447,1185,3.447,1186,6.456,1187,5.36,1188,4.001,1189,5.36]],["title/classes/Project.html",[41,0.079,417,1.59]],["body/classes/Project.html",[3,0.203,4,0.178,5,0.178,7,0.698,14,1.361,17,0.017,18,1.108,19,1.234,40,0.203,41,0.104,52,0.011,53,0.014,54,0.011,65,2.834,73,1.626,193,2.957,223,3.112,227,4.295,351,5.133,417,2.601,1190,4.228,1191,6.664,1192,6.664,1193,6.664,1194,6.664,1195,4.908,1196,4.908,1197,4.908,1198,4.908,1199,4.908,1200,4.908,1201,4.908]],["title/modules/ProjectModule.html",[129,0.867,151,2.422]],["body/modules/ProjectModule.html",[3,0.202,4,0.176,5,0.176,17,0.018,32,0.454,34,0.365,40,0.202,41,0.103,52,0.011,53,0.014,54,0.011,84,1.079,118,1.942,129,1.13,131,1.484,132,2.181,133,3.138,134,2.301,135,2.301,136,1.704,148,3.649,151,4.929,152,4.401,156,3.041,157,2.301,158,2.433,160,2.13,164,2.13,165,3.42,172,3.155,177,4.196,186,2.301,249,3.225,1202,4.196,1203,4.196,1204,4.87,1205,4.87,1206,4.196]],["title/modules/ProjectRoutingModule.html",[129,0.867,152,2.253]],["body/modules/ProjectRoutingModule.html",[3,0.219,4,0.191,5,0.191,9,2.982,17,0.018,32,0.453,34,0.397,35,1.472,40,0.219,41,0.112,45,1.227,52,0.012,53,0.015,54,0.012,55,0.494,118,1.703,131,1.612,136,1.851,152,3.859,160,1.851,164,2.241,205,2.982,206,3.255,207,3.026,211,2.982,234,3.393,255,3.187,366,3.426,400,2.499,1206,4.557,1207,5.289]],["title/injectables/ProjectService.html",[33,1.193,409,1.981]],["body/injectables/ProjectService.html",[3,0.179,4,0.157,5,0.157,7,0.616,8,1.371,10,1.151,14,1.152,16,1.1,17,0.018,18,0.719,19,0.719,20,1.1,27,1.371,28,2.969,29,3.401,32,0.449,33,1.801,34,0.325,36,1.938,38,2.162,39,1.938,40,0.179,41,0.091,43,1.75,44,2.33,45,1.004,48,1.829,52,0.01,53,0.013,54,0.01,65,1.84,187,2.045,188,2.293,252,2.045,256,2.44,266,2.804,267,4.313,269,3.182,370,3.182,371,2.814,374,3.067,379,2.162,381,1.938,383,3.039,390,3.039,391,3.039,392,3.039,393,3.039,394,3.039,400,2.667,409,2.991,417,2.832,428,2.608,1208,3.729,1209,6.659,1210,6.659,1211,4.328,1212,4.328,1213,4.328,1214,4.328,1215,4.328,1216,4.328,1217,4.328,1218,4.328,1219,4.328,1220,4.328]],["title/components/ProjectsComponent.html",[55,0.35,118,0.994]],["body/components/ProjectsComponent.html",[3,0.129,4,0.113,5,0.113,7,0.443,8,1.092,10,0.827,14,1.211,16,1.143,17,0.018,18,0.962,19,0.748,20,1.143,27,1.283,32,0.367,34,0.233,40,0.129,41,0.066,42,1.651,43,1.258,48,1.31,49,1.651,51,1.198,52,0.007,53,0.01,54,0.007,55,0.574,56,0.827,57,1.435,58,1.04,59,1.04,60,1.04,62,1.31,65,1.323,66,0.948,67,1.04,68,1.04,69,2.499,70,2.28,71,1.503,73,1.196,74,2.034,75,1.575,76,1.503,77,2.034,79,1.198,80,1.089,84,0.689,85,1.503,86,1.435,87,1.04,88,1.934,89,1.04,90,1.503,91,0.866,92,1.04,93,0.827,94,1.503,95,0.827,96,1.503,97,0.827,98,0.756,99,0.866,100,0.993,101,1.04,102,0.866,103,1.04,104,0.866,105,1.04,106,0.827,107,1.252,108,0.827,109,0.866,110,1.04,111,1.04,112,0.827,113,1.04,114,0.866,115,1.04,116,0.827,117,1.04,118,1.539,119,1.04,120,0.866,121,1.04,122,0.827,123,0.866,124,1.04,125,1.04,272,2.137,371,2.366,381,1.394,396,2.497,398,2.979,399,2.383,400,3.253,403,2.914,404,3.75,405,2.735,409,3.391,417,2.462,428,1.875,429,2.016,434,2.914,438,2.016,441,1.754,446,2.914,566,2.681,1221,2.681,1222,4.499,1223,4.499,1224,4.499,1225,3.112,1226,3.112,1227,3.112,1228,3.112,1229,3.112,1230,3.112,1231,4.499,1232,4.499,1233,4.499,1234,4.499,1235,4.499,1236,4.499,1237,4.499]],["title/modules/SharedModule.html",[129,0.867,153,1.868]],["body/modules/SharedModule.html",[3,0.169,4,0.148,5,0.148,17,0.018,32,0.463,34,0.306,40,0.169,41,0.086,49,1.995,52,0.009,53,0.012,54,0.009,84,0.905,102,2.086,120,2.086,129,0.948,131,1.245,132,1.83,133,2.886,134,2.569,135,2.886,136,2.138,153,3.788,156,2.716,157,1.931,158,2.042,160,1.43,164,1.902,168,3.817,186,1.931,189,3.817,249,2.88,252,1.931,469,2.87,772,3.148,865,4.515,929,4.515,983,4.705,1108,4.187,1109,4.187,1238,3.521,1239,3.521,1240,3.521,1241,3.521,1242,4.087,1243,5.436,1244,3.148,1245,3.521,1246,4.087,1247,4.087,1248,4.087,1249,4.087,1250,4.087]],["title/components/ToastComponent.html",[55,0.35,120,1.04]],["body/components/ToastComponent.html",[3,0.147,4,0.129,5,0.129,7,0.506,8,1.202,10,0.947,14,1.043,16,1.258,17,0.018,18,1.022,19,0.823,20,1.258,27,0.864,30,2.007,32,0.313,34,0.267,40,0.147,41,0.075,48,1.036,49,1.306,52,0.008,53,0.011,54,0.008,55,0.532,56,0.947,57,1.578,58,1.653,59,1.189,60,1.189,62,1.441,66,1.085,67,1.189,68,1.653,69,2.54,70,2.317,71,1.653,73,1.316,84,0.789,85,1.653,86,1.578,87,1.189,88,2.054,89,1.189,90,1.653,91,0.99,92,1.189,93,0.947,94,1.653,95,0.947,96,1.653,97,0.947,98,0.864,99,0.99,100,1.135,101,1.189,102,0.99,103,1.189,104,0.99,105,1.189,106,0.947,107,1.377,108,0.947,109,0.99,110,1.189,111,1.189,112,0.947,113,1.189,114,0.99,115,1.189,116,0.947,117,1.189,118,0.947,119,1.189,120,1.711,121,1.189,122,0.947,123,0.99,124,1.189,125,1.189,258,4.264,339,2.145,340,1.886,374,3.021,379,1.779,801,2.742,1251,3.067,1252,5.689,1253,4.901,1254,4.949,1255,4.949,1256,3.56,1257,3.56,1258,4.949,1259,3.56,1260,3.067,1261,3.56,1262,4.264,1263,6.148,1264,3.56,1265,3.56,1266,3.56,1267,3.56]],["title/injectables/ToastService.html",[33,1.193,374,1.59]],["body/injectables/ToastService.html",[3,0.202,4,0.126,5,0.126,7,0.494,8,1.182,14,1.175,16,1.546,17,0.018,18,1.011,19,1.011,20,1.546,27,1.477,32,0.22,33,1.552,34,0.261,38,1.736,39,1.556,40,0.144,41,0.073,49,2.35,52,0.008,53,0.011,54,0.008,65,1.478,73,1.294,75,2.129,76,2.032,223,2.858,256,1.959,272,2.46,370,2.743,374,2.069,627,4.193,844,4.934,984,5.518,1088,4.838,1253,4.838,1260,5.242,1262,5.242,1268,2.994,1269,4.867,1270,5.616,1271,4.867,1272,4.867,1273,3.475,1274,4.867,1275,6.085,1276,3.475,1277,4.867,1278,3.475,1279,6.955,1280,5.242,1281,3.475,1282,6.405,1283,6.405,1284,4.867,1285,6.405,1286,6.085,1287,6.405,1288,4.867,1289,3.475,1290,4.867,1291,3.475,1292,3.475,1293,3.475,1294,3.475,1295,3.475,1296,4.867,1297,3.475,1298,3.475,1299,3.475]],["title/classes/User.html",[41,0.079,222,1.674]],["body/classes/User.html",[3,0.23,4,0.201,5,0.201,7,0.79,14,1.209,17,0.017,18,1.169,19,1.096,40,0.23,41,0.117,52,0.013,53,0.015,54,0.013,73,1.753,193,3.345,222,2.953,223,2.942,351,5.417,1300,4.783,1301,5.551,1302,5.551]],["title/modules/UserModule.html",[129,0.867,154,2.422]],["body/modules/UserModule.html",[3,0.196,4,0.171,5,0.171,17,0.018,32,0.459,34,0.355,35,1.318,40,0.196,41,0.1,52,0.011,53,0.014,54,0.011,84,1.049,122,1.929,129,1.099,131,1.443,132,2.121,133,3.098,134,2.238,135,2.238,136,1.658,148,3.624,153,3.624,154,4.907,156,2.989,157,2.238,158,2.367,160,2.094,164,2.094,172,3.069,173,3.069,186,2.238,207,2.827,249,3.169,1303,4.081,1304,4.081,1305,4.737,1306,4.737,1307,4.737]],["title/modules/UserRoutingModule.html",[129,0.867,155,2.422]],["body/modules/UserRoutingModule.html",[3,0.219,4,0.191,5,0.191,9,2.982,17,0.018,32,0.453,34,0.397,35,1.472,40,0.219,41,0.112,45,1.227,52,0.012,53,0.015,54,0.012,55,0.494,122,1.703,123,1.472,131,1.612,136,1.851,155,4.149,160,1.851,164,2.241,205,2.982,206,3.255,207,3.026,211,2.982,234,3.393,255,3.187,366,3.426,1308,5.289,1309,5.289]],["title/injectables/UserService.html",[33,1.193,567,2.422]],["body/injectables/UserService.html",[3,0.174,4,0.152,5,0.152,7,0.597,8,1.343,10,1.115,14,1.135,16,1.572,17,0.018,18,1.028,19,0.697,20,1.572,27,1.343,28,2.924,29,3.332,32,0.445,33,1.764,34,0.315,36,1.879,38,2.096,39,1.879,40,0.174,41,0.089,43,1.696,44,2.302,45,0.973,48,1.801,52,0.01,53,0.013,54,0.014,65,1.784,187,1.982,188,2.222,222,2.946,252,1.982,256,2.365,266,2.717,267,4.261,269,3.118,370,3.118,371,2.771,374,3.044,379,2.096,381,1.879,383,2.945,390,2.945,391,2.945,392,2.945,393,2.945,394,2.945,399,3.278,417,1.784,439,3.614,544,3.231,567,3.583,590,3.231,1063,4.765,1310,3.614,1311,5.531,1312,5.531,1313,4.195,1314,4.195,1315,5.531,1316,4.195,1317,4.195,1318,4.195,1319,4.195,1320,4.195,1321,4.195]],["title/components/UsersComponent.html",[55,0.35,122,0.994]],["body/components/UsersComponent.html",[3,0.092,4,0.08,5,0.08,7,0.316,8,0.847,10,0.927,12,2.78,14,1.287,16,1.239,17,0.018,18,1.013,19,0.811,20,1.239,27,1.522,32,0.397,34,0.166,35,0.618,40,0.092,41,0.047,42,1.279,44,1.855,45,1.131,48,1.774,49,1.58,51,0.855,52,0.005,53,0.008,54,0.005,55,0.495,56,0.59,57,1.112,58,0.742,59,0.742,60,0.742,62,1.015,65,0.944,66,0.676,67,0.742,68,0.742,69,2.378,70,2.169,71,1.165,73,0.927,74,1.657,75,1.22,76,1.165,77,1.657,79,0.855,80,0.777,84,0.492,85,1.165,86,1.112,87,0.742,88,1.629,89,0.742,90,1.165,91,0.618,92,0.742,93,0.59,94,1.165,95,0.59,96,1.165,97,0.59,98,0.539,99,0.618,100,0.708,101,0.742,102,0.618,103,0.742,104,0.618,105,0.742,106,0.59,107,0.97,108,0.59,109,0.618,110,0.742,111,0.742,112,0.59,113,0.742,114,0.618,115,0.742,116,0.59,117,0.742,118,0.59,119,0.742,120,0.618,121,0.742,122,1.297,123,1.784,124,0.742,125,0.742,222,2.184,223,0.898,241,2.584,272,2.143,348,2.504,350,1.928,367,2.665,368,2.94,371,2.519,378,1.251,381,1.928,396,2.034,398,2.427,399,2.281,400,2.879,401,3.16,402,3.16,403,2.258,404,3.16,405,2.305,406,2.448,409,3.117,410,3.317,414,2.101,417,2.502,428,1.338,429,1.438,430,1.338,432,4.131,433,1.559,434,2.258,435,1.559,437,2.258,438,1.438,441,1.965,442,2.101,443,1.338,444,2.448,446,2.258,475,3.16,476,2.448,486,2.448,488,2.101,489,2.686,496,3.95,497,1.559,498,1.559,499,2.448,500,3.425,501,2.686,502,1.71,503,2.686,504,1.559,505,1.559,506,2.448,533,2.686,567,3.644,589,1.913,590,1.71,596,3.004,600,1.913,1322,1.913,1323,3.486,1324,4.877,1325,2.22,1326,3.486,1327,2.22,1328,2.22,1329,2.22,1330,3.486,1331,2.22,1332,2.22,1333,2.22,1334,2.22,1335,2.22,1336,2.22,1337,2.22,1338,2.22,1339,2.22,1340,2.22,1341,2.22,1342,2.22,1343,2.22,1344,4.305,1345,3.486,1346,3.486,1347,3.486]],["title/coverage.html",[1348,4.41]],["body/coverage.html",[0,3.332,1,1.776,5,0.107,6,2.54,13,1.473,17,0.018,19,0.49,33,2.003,41,0.127,52,0.007,53,0.01,54,0.007,55,0.688,56,0.784,61,2.54,62,1.643,63,2.07,64,3.332,91,0.82,93,0.784,95,0.784,97,0.784,98,0.716,99,0.82,102,0.82,104,0.82,106,0.784,108,0.784,109,0.82,112,0.784,114,0.82,116,0.784,118,0.784,120,0.82,122,0.784,123,0.82,126,2.54,187,2.839,192,2.271,194,2.54,209,2.07,217,3.319,218,2.07,220,3.332,222,1.937,224,1.91,234,1.562,235,2.54,257,2.54,295,2.07,348,1.393,349,2.54,361,2.07,367,1.254,368,1.473,369,2.54,374,1.254,395,2.54,400,1.393,409,1.562,417,1.254,448,2.54,461,2.07,464,2.271,473,2.54,474,2.07,478,1.776,511,1.91,513,2.54,547,5.031,560,2.54,567,1.91,611,2.54,612,2.54,613,2.54,713,2.802,723,4.413,739,2.271,764,2.271,771,2.54,772,2.271,773,2.54,864,3.597,865,1.91,867,2.54,889,2.54,899,2.54,900,2.54,909,2.54,910,2.54,929,1.91,930,2.54,941,2.54,942,2.54,953,2.54,979,2.07,980,3.946,989,2.271,1083,6.214,1101,2.07,1110,2.271,1112,2.271,1113,2.54,1184,2.54,1185,2.54,1190,2.54,1208,2.54,1221,2.54,1251,2.54,1268,2.54,1300,2.54,1310,2.54,1322,2.54,1348,2.54,1349,2.948,1350,2.948,1351,2.948,1352,6.491,1353,7.267,1354,2.948,1355,4.325,1356,2.948,1357,5.123,1358,2.948,1359,2.948,1360,5.123,1361,2.948,1362,2.948,1363,2.948,1364,4.325,1365,2.54,1366,2.948,1367,2.948,1368,2.948,1369,2.948,1370,4.325,1371,2.948,1372,2.948,1373,5.177,1374,5.177,1375,2.948,1376,2.948,1377,2.948,1378,2.948,1379,2.948,1380,2.54,1381,2.948,1382,2.948,1383,2.54,1384,2.54,1385,2.54,1386,2.54,1387,2.54,1388,3.726,1389,2.54,1390,2.54,1391,2.948]],["title/dependencies.html",[132,2.016,1392,3.114]],["body/dependencies.html",[17,0.018,34,0.393,35,1.459,36,2.349,52,0.012,53,0.014,54,0.012,132,2.349,134,2.479,162,5.49,163,4.475,186,2.479,288,4.519,289,4.519,468,4.041,469,3.684,1244,4.041,1245,4.519,1393,5.246,1394,7.596,1395,5.246,1396,6.372,1397,5.246,1398,5.246,1399,5.246,1400,5.246,1401,5.246,1402,5.246,1403,5.246,1404,5.246,1405,5.246]],["title/miscellaneous/enumerations.html",[1406,2.187,1407,3.878]],["body/miscellaneous/enumerations.html",[7,0.841,17,0.016,52,0.013,53,0.016,54,0.013,76,1.975,291,4.804,1406,4.152,1407,5.094,1408,5.913,1409,5.913,1410,5.913,1411,5.913]],["title/index.html",[7,0.443,1412,3.114,1413,3.114]],["body/index.html",[4,0.24,17,0.014,52,0.011,53,0.014,54,0.011,66,1.852,70,2.18,98,1.18,213,4.658,337,4.297,338,4.297,417,2.066,683,5.109,1104,4.682,1107,3.742,1149,4.185,1244,3.742,1414,4.858,1415,4.858,1416,4.858,1417,4.858,1418,6.078,1419,4.858,1420,6.95,1421,7.3,1422,6.633,1423,5.714,1424,6.633,1425,6.633,1426,6.633,1427,6.633,1428,6.633,1429,6.078,1430,4.858,1431,4.858,1432,4.858,1433,4.858,1434,4.858,1435,4.858,1436,4.858,1437,4.858,1438,4.858,1439,4.858,1440,4.858,1441,4.858]],["title/modules.html",[131,1.56]],["body/modules.html",[17,0.014,52,0.011,53,0.014,54,0.011,130,3.482,131,1.511,141,3.212,142,3.212,143,2.988,144,3.212,145,3.212,146,3.212,147,3.212,148,2.478,149,2.988,150,3.212,151,3.212,152,2.988,153,2.478,154,3.212,155,3.212,163,5.279,1442,7.517,1443,7.517,1444,7.805,1445,7.517,1446,7.517]],["title/overview.html",[1447,4.41]],["body/overview.html",[2,2.254,17,0.018,52,0.007,53,0.01,54,0.007,56,1.356,57,0.933,84,0.648,91,1.801,93,1.356,95,1.356,97,1.356,99,1.419,102,1.801,104,1.801,106,1.356,108,1.356,109,1.801,112,1.722,114,1.801,116,1.356,118,1.356,120,1.801,122,1.356,129,0.679,130,5.424,131,0.891,132,1.31,133,1.382,134,1.382,135,1.382,136,1.024,137,2.521,138,2.521,139,2.521,140,2.521,141,3.304,142,4.303,143,3.387,144,4.527,145,3.304,146,4.626,147,3.304,148,3.796,149,3.387,150,3.304,151,4.392,152,3.387,153,3.672,154,4.392,155,3.304,156,2.149,157,1.382,158,1.462,193,1.763,206,1.382,219,2.254,244,2.521,245,2.521,247,2.521,256,1.649,355,2.521,356,2.521,456,2.521,457,2.521,739,2.254,753,2.521,754,2.521,756,2.521,865,3.304,929,3.304,1099,2.521,1202,2.521,1203,2.521,1238,2.521,1239,2.521,1240,2.521,1241,2.521,1303,2.521,1304,2.521,1365,2.521,1380,2.521,1447,2.521,1448,2.926,1449,2.926,1450,2.926]],["title/routes.html",[206,2.419]],["body/routes.html",[17,0.016,52,0.014,53,0.016,54,0.014,206,2.884]],["title/miscellaneous/variables.html",[1406,2.187,1451,3.878]],["body/miscellaneous/variables.html",[7,0.491,17,0.018,19,1.101,49,2.053,51,2.154,52,0.008,53,0.011,54,0.008,75,2.553,76,2.436,123,1.347,187,3.378,189,2.423,221,3.4,269,1.945,336,3.4,337,3.929,338,3.137,339,2.917,340,2.565,341,3.4,342,3.137,343,3.4,350,2.716,367,2.059,370,1.945,400,2.288,511,3.137,962,3.73,979,2.423,980,2.658,983,2.658,989,3.73,1101,3.928,1102,2.973,1103,2.973,1104,3.73,1105,2.973,1106,2.973,1107,2.658,1108,2.658,1109,2.658,1110,2.658,1112,3.73,1280,5.503,1373,2.973,1374,2.973,1383,2.973,1384,4.172,1385,2.973,1386,2.973,1387,2.973,1388,2.973,1389,4.172,1390,4.172,1406,2.423,1423,2.973,1451,2.973,1452,6.388,1453,4.842,1454,3.45,1455,3.45,1456,3.45,1457,3.45,1458,4.842,1459,3.45,1460,3.45,1461,3.45,1462,3.45,1463,3.45,1464,3.45,1465,3.45,1466,3.45,1467,6.065,1468,6.065,1469,4.842,1470,5.594,1471,6.065,1472,4.842,1473,6.065,1474,6.065,1475,4.842,1476,4.842,1477,3.45,1478,4.842,1479,3.45,1480,3.45,1481,3.45,1482,3.45,1483,3.45,1484,3.45,1485,3.45,1486,4.842,1487,3.45,1488,3.45,1489,3.45,1490,4.842,1491,3.45,1492,3.45,1493,3.45,1494,3.45]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponse.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Client.html":{},"modules/ClientModule.html":{},"modules/ClientRoutingModule.html":{},"injectables/ClientService.html":{},"components/ClientsComponent.html":{},"classes/Config.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"components/ConfigSelectionPageComponent.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"modules/CoreModule.html":{},"modules/CoreRoutingModule.html":{},"components/DropDownComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{},"modules/MockModule.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Project.html":{},"modules/ProjectModule.html":{},"modules/ProjectRoutingModule.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"modules/SharedModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"classes/User.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":547,"title":{},"body":{"injectables/ConfigService.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/NavbarComponent.html":{},"coverage.html":{}}}],["0.25em",{"_index":827,"title":{},"body":{"components/DropDownComponent.html":{}}}],["0.3",{"_index":861,"title":{},"body":{"components/DropDownComponent.html":{}}}],["0.35em",{"_index":1179,"title":{},"body":{"components/NavbarComponent.html":{}}}],["0.5",{"_index":1151,"title":{},"body":{"components/NavbarComponent.html":{}}}],["0.5em",{"_index":730,"title":{},"body":{"components/ConfigsTableComponent.html":{},"components/NavbarComponent.html":{}}}],["0.8em",{"_index":896,"title":{},"body":{"components/FooterComponent.html":{}}}],["0.9.1",{"_index":1405,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1353,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1379,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1363,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1358,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1369,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1361,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1375,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":1362,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1352,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1357,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1364,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1354,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1355,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1378,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1359,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":883,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/MockInterceptor.html":{}}}],["1.0em",{"_index":1176,"title":{},"body":{"components/NavbarComponent.html":{}}}],["1.10.0",{"_index":1403,"title":{},"body":{"dependencies.html":{}}}],["1.5em",{"_index":1171,"title":{},"body":{"components/NavbarComponent.html":{}}}],["1.5em;//width",{"_index":848,"title":{},"body":{"components/DropDownComponent.html":{}}}],["1/1",{"_index":1370,"title":{},"body":{"coverage.html":{}}}],["1/18",{"_index":1382,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1368,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1360,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1381,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":1377,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":1366,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":713,"title":{},"body":{"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/NavbarComponent.html":{},"coverage.html":{}}}],["1000",{"_index":1141,"title":{},"body":{"components/NavbarComponent.html":{}}}],["11",{"_index":1365,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["12",{"_index":1376,"title":{},"body":{"coverage.html":{}}}],["12346",{"_index":1477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16",{"_index":1380,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["16px",{"_index":850,"title":{},"body":{"components/DropDownComponent.html":{}}}],["16px;height",{"_index":849,"title":{},"body":{"components/DropDownComponent.html":{}}}],["17",{"_index":1448,"title":{},"body":{"overview.html":{}}}],["1em",{"_index":724,"title":{},"body":{"components/ConfigsTableComponent.html":{},"components/FooterComponent.html":{},"components/NavbarComponent.html":{}}}],["1px",{"_index":732,"title":{},"body":{"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/NavbarComponent.html":{}}}],["1rem",{"_index":831,"title":{},"body":{"components/DropDownComponent.html":{}}}],["2",{"_index":1450,"title":{},"body":{"overview.html":{}}}],["2.2.0",{"_index":1400,"title":{},"body":{"dependencies.html":{}}}],["2/7",{"_index":1372,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":854,"title":{},"body":{"components/DropDownComponent.html":{}}}],["200",{"_index":1087,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["2000",{"_index":1286,"title":{},"body":{"injectables/ToastService.html":{}}}],["25",{"_index":723,"title":{},"body":{"components/ConfigsTableComponent.html":{},"coverage.html":{}}}],["28",{"_index":1371,"title":{},"body":{"coverage.html":{}}}],["2em",{"_index":722,"title":{},"body":{"components/ConfigsTableComponent.html":{},"components/NavbarComponent.html":{}}}],["2k1yo1ibbjgb_o6xdiiag",{"_index":1484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2px",{"_index":1152,"title":{},"body":{"components/NavbarComponent.html":{}}}],["3",{"_index":1099,"title":{},"body":{"interceptors/MockInterceptor.html":{},"overview.html":{}}}],["3.75em",{"_index":895,"title":{},"body":{"components/FooterComponent.html":{}}}],["3000",{"_index":1299,"title":{},"body":{"injectables/ToastService.html":{}}}],["3em",{"_index":1166,"title":{},"body":{"components/NavbarComponent.html":{}}}],["401",{"_index":881,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/MockInterceptor.html":{}}}],["403].indexof(err.status",{"_index":882,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["40px",{"_index":1157,"title":{},"body":{"components/NavbarComponent.html":{}}}],["47",{"_index":736,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["48px",{"_index":746,"title":{},"body":{"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{}}}],["4f7d91",{"_index":1154,"title":{},"body":{"components/NavbarComponent.html":{}}}],["5",{"_index":739,"title":{},"body":{"components/ConfigsTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["5.2.1",{"_index":1399,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":1367,"title":{},"body":{"coverage.html":{}}}],["5em",{"_index":1143,"title":{},"body":{"components/NavbarComponent.html":{}}}],["5rem",{"_index":830,"title":{},"body":{"components/DropDownComponent.html":{}}}],["6",{"_index":1449,"title":{},"body":{"overview.html":{}}}],["6.4.0",{"_index":1401,"title":{},"body":{"dependencies.html":{}}}],["64px",{"_index":1153,"title":{},"body":{"components/NavbarComponent.html":{}}}],["75",{"_index":718,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["8.2.14",{"_index":1394,"title":{},"body":{"dependencies.html":{}}}],["8.2.3",{"_index":1396,"title":{},"body":{"dependencies.html":{}}}],["8.3.24",{"_index":1419,"title":{},"body":{"index.html":{}}}],["84936",{"_index":1481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8px",{"_index":737,"title":{},"body":{"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{}}}],["999",{"_index":748,"title":{},"body":{"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{}}}],["9_",{"_index":1012,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["__",{"_index":74,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/UsersComponent.html":{}}}],["__.allprojects",{"_index":83,"title":{},"body":{"components/AdminSelectionPageComponent.html":{}}}],["__.appconfig",{"_index":1132,"title":{},"body":{"components/NavbarComponent.html":{}}}],["__.application",{"_index":506,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/UsersComponent.html":{}}}],["__.cancel",{"_index":703,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["__.configurations",{"_index":507,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/GlobalConfigsComponent.html":{}}}],["__.defaultvalue",{"_index":698,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["__.footer",{"_index":894,"title":{},"body":{"components/FooterComponent.html":{}}}],["__.globalapplications",{"_index":908,"title":{},"body":{"components/GlobalClientsComponent.html":{}}}],["__.globalconfigurations",{"_index":82,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/NavbarComponent.html":{}}}],["__.loading",{"_index":446,"title":{},"body":{"components/ClientsComponent.html":{},"components/GlobalClientsComponent.html":{},"components/LoginComponent.html":{},"components/ProjectsComponent.html":{},"components/UsersComponent.html":{}}}],["__.location",{"_index":1236,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["__.login",{"_index":977,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["__.loginwithmanagementportaladmin",{"_index":978,"title":{},"body":{"components/LoginComponent.html":{}}}],["__.logout",{"_index":1136,"title":{},"body":{"components/NavbarComponent.html":{}}}],["__.name",{"_index":696,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["__.organization",{"_index":1234,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["__.pagenotfound",{"_index":1189,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["__.project",{"_index":444,"title":{},"body":{"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/UsersComponent.html":{}}}],["__.projects",{"_index":1135,"title":{},"body":{"components/NavbarComponent.html":{}}}],["__.publish",{"_index":701,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["__.radarbase",{"_index":1131,"title":{},"body":{"components/NavbarComponent.html":{}}}],["__.reset",{"_index":702,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["__.selectanapplication",{"_index":445,"title":{},"body":{"components/ClientsComponent.html":{},"components/GlobalClientsComponent.html":{}}}],["__.selectaproject",{"_index":1231,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["__.selectauser",{"_index":1345,"title":{},"body":{"components/UsersComponent.html":{}}}],["__.user",{"_index":609,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["__.value",{"_index":697,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["aa0000",{"_index":1158,"title":{},"body":{"components/NavbarComponent.html":{}}}],["absolute",{"_index":852,"title":{},"body":{"components/DropDownComponent.html":{},"components/NavbarComponent.html":{}}}],["access_token",{"_index":225,"title":{},"body":{"interfaces/AuthData.html":{},"interfaces/AuthResponse.html":{}}}],["accessors",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{},"components/ConfigsTableComponent.html":{}}}],["activate",{"_index":685,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["activatedroute",{"_index":410,"title":{},"body":{"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LoginComponent.html":{},"components/UsersComponent.html":{}}}],["activatedroutesnapshot",{"_index":22,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["active",{"_index":862,"title":{},"body":{"components/DropDownComponent.html":{},"components/NavbarComponent.html":{}}}],["active{display",{"_index":855,"title":{},"body":{"components/DropDownComponent.html":{}}}],["actual_component",{"_index":125,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{}}}],["add_circle{{__.addanamevalueconfiguration",{"_index":700,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["addconfig",{"_index":618,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["admin",{"_index":66,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"modules/CoreRoutingModule.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["adminguard",{"_index":1,"title":{"guards/AdminGuard.html":{}},"body":{"guards/AdminGuard.html":{},"modules/ClientRoutingModule.html":{},"modules/ConfigRoutingModule.html":{},"modules/CoreRoutingModule.html":{},"coverage.html":{}}}],["adminselectionpagecomponent",{"_index":56,"title":{"components/AdminSelectionPageComponent.html":{}},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"modules/CoreModule.html":{},"modules/CoreRoutingModule.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["align",{"_index":833,"title":{},"body":{"components/DropDownComponent.html":{},"components/NavbarComponent.html":{}}}],["alpha",{"_index":860,"title":{},"body":{"components/DropDownComponent.html":{}}}],["angular",{"_index":1416,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1393,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1395,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":186,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ClientModule.html":{},"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"modules/MockModule.html":{},"modules/ProjectModule.html":{},"modules/SharedModule.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":252,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/ClientService.html":{},"injectables/ConfigService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"interceptors/MockInterceptor.html":{},"injectables/ProjectService.html":{},"modules/SharedModule.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":1397,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":34,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"modules/ClientModule.html":{},"modules/ClientRoutingModule.html":{},"injectables/ClientService.html":{},"components/ClientsComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"components/ConfigSelectionPageComponent.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"modules/CoreModule.html":{},"modules/CoreRoutingModule.html":{},"components/DropDownComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{},"modules/MockModule.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"modules/ProjectModule.html":{},"modules/ProjectRoutingModule.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"modules/SharedModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":468,"title":{},"body":{"modules/ConfigModule.html":{},"components/ConfigsTableComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":469,"title":{},"body":{"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/material/icon",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":35,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthRoutingModule.html":{},"modules/ClientModule.html":{},"modules/ClientRoutingModule.html":{},"components/ClientsComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"modules/CoreRoutingModule.html":{},"components/GlobalConfigsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"modules/ProjectRoutingModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"components/UsersComponent.html":{},"dependencies.html":{}}}],["api",{"_index":1494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":70,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["app.component",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":128,"title":{},"body":{"components/AppComponent.html":{}}}],["app/_models",{"_index":988,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["app/auth/auth",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["app/auth/containers/login/login.component",{"_index":254,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["app/auth/enums/roles.enum",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{}}}],["app/auth/helpers",{"_index":366,"title":{},"body":{"modules/ClientRoutingModule.html":{},"modules/ConfigRoutingModule.html":{},"modules/CoreRoutingModule.html":{},"modules/ProjectRoutingModule.html":{},"modules/UserRoutingModule.html":{}}}],["app/auth/models/auth",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{}}}],["app/auth/models/user",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["app/auth/services/auth.service",{"_index":37,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["app/client/client",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["app/client/client.module",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["app/client/containers/clients/clients.component",{"_index":364,"title":{},"body":{"modules/ClientRoutingModule.html":{}}}],["app/client/containers/global",{"_index":365,"title":{},"body":{"modules/ClientRoutingModule.html":{}}}],["app/client/models/client",{"_index":378,"title":{},"body":{"injectables/ClientService.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/UsersComponent.html":{}}}],["app/client/services/client.service",{"_index":430,"title":{},"body":{"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/UsersComponent.html":{}}}],["app/config/config",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["app/config/config.module",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["app/config/containers/configs/configs.component",{"_index":471,"title":{},"body":{"modules/ConfigRoutingModule.html":{}}}],["app/config/containers/global",{"_index":472,"title":{},"body":{"modules/ConfigRoutingModule.html":{}}}],["app/config/models/config",{"_index":537,"title":{},"body":{"injectables/ConfigService.html":{}}}],["app/config/services/config.service",{"_index":495,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/GlobalConfigsComponent.html":{}}}],["app/core/containers/admin",{"_index":768,"title":{},"body":{"modules/CoreRoutingModule.html":{}}}],["app/core/containers/config",{"_index":769,"title":{},"body":{"modules/CoreRoutingModule.html":{}}}],["app/core/containers/page",{"_index":208,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["app/core/core",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{}}}],["app/core/core.module",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"modules/ClientModule.html":{},"modules/ConfigModule.html":{},"modules/ProjectModule.html":{},"modules/UserModule.html":{}}}],["app/mock/mock.module",{"_index":184,"title":{},"body":{"modules/AppModule.html":{}}}],["app/mock/services/mock.service",{"_index":1111,"title":{},"body":{"modules/MockModule.html":{}}}],["app/project/containers/projects/projects.component",{"_index":1206,"title":{},"body":{"modules/ProjectModule.html":{},"modules/ProjectRoutingModule.html":{}}}],["app/project/models/project",{"_index":428,"title":{},"body":{"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/UsersComponent.html":{}}}],["app/project/project",{"_index":177,"title":{},"body":{"modules/AppModule.html":{},"modules/ProjectModule.html":{}}}],["app/project/project.module",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["app/project/services/project.service",{"_index":429,"title":{},"body":{"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ProjectsComponent.html":{},"components/UsersComponent.html":{}}}],["app/shared/helpers/error.interceptor",{"_index":1250,"title":{},"body":{"modules/SharedModule.html":{}}}],["app/shared/helpers/jwt.interceptor",{"_index":1249,"title":{},"body":{"modules/SharedModule.html":{}}}],["app/shared/services/toast.service",{"_index":379,"title":{},"body":{"injectables/ClientService.html":{},"components/ConfigSelectionPageComponent.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"components/DropDownComponent.html":{},"components/GlobalConfigsComponent.html":{},"injectables/ProjectService.html":{},"components/ToastComponent.html":{},"injectables/UserService.html":{}}}],["app/shared/shared.module",{"_index":173,"title":{},"body":{"modules/AppModule.html":{},"modules/ClientModule.html":{},"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"modules/UserModule.html":{}}}],["app/user/containers/users/users.component",{"_index":1309,"title":{},"body":{"modules/UserRoutingModule.html":{}}}],["app/user/models/user",{"_index":590,"title":{},"body":{"components/ConfigsComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["app/user/services/user.service",{"_index":589,"title":{},"body":{"components/ConfigsComponent.html":{},"components/UsersComponent.html":{}}}],["app/user/user",{"_index":183,"title":{},"body":{"modules/AppModule.html":{}}}],["app/user/user.module",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["app_base_href",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["appcomponent",{"_index":91,"title":{"components/AppComponent.html":{}},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appconfig",{"_index":1414,"title":{},"body":{"index.html":{}}}],["appconfig_frontend",{"_index":1473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["append('client_id",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{}}}],["append('code",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{}}}],["append('grant_type",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{}}}],["append('redirect_uri",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{}}}],["application",{"_index":509,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{}}}],["application/json",{"_index":557,"title":{},"body":{"injectables/ConfigService.html":{}}}],["application/x",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{}}}],["applications",{"_index":505,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/UsersComponent.html":{}}}],["appmodule",{"_index":130,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":192,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["approutingmodule",{"_index":141,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appurl",{"_index":1469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["args",{"_index":1279,"title":{},"body":{"injectables/ToastService.html":{}}}],["arguments",{"_index":791,"title":{},"body":{"components/DropDownComponent.html":{}}}],["async",{"_index":371,"title":{},"body":{"injectables/ClientService.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["auth/auth.module",{"_index":167,"title":{},"body":{"modules/AppModule.html":{}}}],["authapi",{"_index":1471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authcallback",{"_index":1474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authcode",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{}}}],["authdata",{"_index":218,"title":{"interfaces/AuthData.html":{}},"body":{"interfaces/AuthData.html":{},"interfaces/AuthResponse.html":{},"coverage.html":{}}}],["authenticationservice",{"_index":933,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["authguard",{"_index":234,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"modules/ClientRoutingModule.html":{},"modules/ConfigRoutingModule.html":{},"modules/CoreRoutingModule.html":{},"modules/ProjectRoutingModule.html":{},"modules/UserRoutingModule.html":{},"coverage.html":{}}}],["authheader",{"_index":1089,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["authheader.startswith(`bearer",{"_index":1091,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["authmodule",{"_index":142,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authorization",{"_index":938,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["authorization_code",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{}}}],["authorize",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{}}}],["authorize?client_id=${environment.clientid}&response_type=code&redirect_uri=${environment.authcallback",{"_index":1022,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["authresponse",{"_index":224,"title":{"interfaces/AuthResponse.html":{}},"body":{"interfaces/AuthData.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["authroutingmodule",{"_index":143,"title":{"modules/AuthRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["authservice",{"_index":13,"title":{"injectables/AuthService.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"coverage.html":{}}}],["autohide",{"_index":1287,"title":{},"body":{"injectables/ToastService.html":{}}}],["automatically",{"_index":1426,"title":{},"body":{"index.html":{}}}],["available",{"_index":1446,"title":{},"body":{"modules.html":{}}}],["await",{"_index":381,"title":{},"body":{"injectables/ClientService.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["a{display",{"_index":1180,"title":{},"body":{"components/NavbarComponent.html":{}}}],["b",{"_index":1080,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["backbutton",{"_index":944,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["backbuttonobject",{"_index":922,"title":{},"body":{"components/GlobalConfigsComponent.html":{}}}],["backend",{"_index":1104,"title":{},"body":{"interceptors/MockInterceptor.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["backendurl",{"_index":1490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["background",{"_index":815,"title":{},"body":{"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/NavbarComponent.html":{}}}],["base",{"_index":1440,"title":{},"body":{"index.html":{}}}],["base/radar",{"_index":1434,"title":{},"body":{"index.html":{}}}],["baseurl",{"_index":1486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bearer",{"_index":939,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["behaviorsubject",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{}}}],["behaviorsubject(json.parse(localstorage.getitem('currentuser",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{}}}],["between",{"_index":838,"title":{},"body":{"components/DropDownComponent.html":{},"components/NavbarComponent.html":{}}}],["bg",{"_index":1283,"title":{},"body":{"injectables/ToastService.html":{}}}],["block",{"_index":727,"title":{},"body":{"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/NavbarComponent.html":{}}}],["body",{"_index":851,"title":{},"body":{"components/DropDownComponent.html":{},"interceptors/MockInterceptor.html":{}}}],["bold",{"_index":1173,"title":{},"body":{"components/NavbarComponent.html":{}}}],["boolean",{"_index":30,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/NavbarComponent.html":{},"components/ToastComponent.html":{}}}],["boolean(currentuser",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{}}}],["bootstrap",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ClientModule.html":{},"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"modules/ProjectModule.html":{},"modules/SharedModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":1245,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["border",{"_index":741,"title":{},"body":{"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/NavbarComponent.html":{}}}],["bottom",{"_index":729,"title":{},"body":{"components/ConfigsTableComponent.html":{},"components/NavbarComponent.html":{}}}],["box",{"_index":828,"title":{},"body":{"components/DropDownComponent.html":{}}}],["branding",{"_index":1165,"title":{},"body":{"components/NavbarComponent.html":{}}}],["browse",{"_index":1444,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get(browser.baseurl",{"_index":200,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/animations",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":726,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["c",{"_index":665,"title":{},"body":{"components/ConfigsTableComponent.html":{},"interceptors/MockInterceptor.html":{}}}],["c.clientid",{"_index":388,"title":{},"body":{"injectables/ClientService.html":{},"interceptors/MockInterceptor.html":{}}}],["c.default",{"_index":548,"title":{},"body":{"injectables/ConfigService.html":{},"components/ConfigsTableComponent.html":{}}}],["c.id",{"_index":386,"title":{},"body":{"injectables/ClientService.html":{}}}],["c.name",{"_index":387,"title":{},"body":{"injectables/ClientService.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/GlobalConfigsComponent.html":{}}}],["c.scope",{"_index":669,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["c.value",{"_index":605,"title":{},"body":{"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/GlobalConfigsComponent.html":{}}}],["canactivate",{"_index":9,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"modules/ClientRoutingModule.html":{},"modules/ConfigRoutingModule.html":{},"modules/CoreRoutingModule.html":{},"modules/ProjectRoutingModule.html":{},"modules/UserRoutingModule.html":{}}}],["canactivate(route",{"_index":21,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["case",{"_index":1006,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["catch(e",{"_index":391,"title":{},"body":{"injectables/ClientService.html":{},"injectables/ConfigService.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{}}}],["catcherror",{"_index":879,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["ccc",{"_index":706,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["center",{"_index":835,"title":{},"body":{"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/NavbarComponent.html":{}}}],["change",{"_index":683,"title":{},"body":{"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"index.html":{}}}],["changed",{"_index":607,"title":{},"body":{"components/ConfigsComponent.html":{},"components/GlobalConfigsComponent.html":{}}}],["check",{"_index":688,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["class",{"_index":41,"title":{"classes/AppPage.html":{},"classes/Client.html":{},"classes/Config.html":{},"classes/Project.html":{},"classes/User.html":{}},"body":{"guards/AdminGuard.html":{},"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Client.html":{},"modules/ClientModule.html":{},"modules/ClientRoutingModule.html":{},"injectables/ClientService.html":{},"components/ClientsComponent.html":{},"classes/Config.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"components/ConfigSelectionPageComponent.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"modules/CoreModule.html":{},"modules/CoreRoutingModule.html":{},"components/DropDownComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{},"modules/MockModule.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Project.html":{},"modules/ProjectModule.html":{},"modules/ProjectRoutingModule.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"modules/SharedModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"classes/User.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["class.ngb",{"_index":1265,"title":{},"body":{"components/ToastComponent.html":{}}}],["classes",{"_index":193,"title":{},"body":{"classes/AppPage.html":{},"classes/Client.html":{},"classes/Config.html":{},"classes/Project.html":{},"classes/User.html":{},"overview.html":{}}}],["classname",{"_index":1282,"title":{},"body":{"injectables/ToastService.html":{}}}],["cli",{"_index":1417,"title":{},"body":{"index.html":{}}}],["click",{"_index":1121,"title":{},"body":{"components/NavbarComponent.html":{}}}],["clickout(event",{"_index":811,"title":{},"body":{"components/DropDownComponent.html":{}}}],["client",{"_index":348,"title":{"classes/Client.html":{}},"body":{"classes/Client.html":{},"injectables/ClientService.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["client.clientid",{"_index":447,"title":{},"body":{"components/ClientsComponent.html":{},"components/GlobalClientsComponent.html":{}}}],["clientid",{"_index":350,"title":{},"body":{"classes/Client.html":{},"components/ClientsComponent.html":{},"classes/Config.html":{},"components/ConfigSelectionPageComponent.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"interceptors/MockInterceptor.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["clientid).topromise",{"_index":553,"title":{},"body":{"injectables/ConfigService.html":{}}}],["clientid)[0",{"_index":1060,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["clientidfromurl",{"_index":1076,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["clientmodule",{"_index":144,"title":{"modules/ClientModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ClientModule.html":{},"modules.html":{},"overview.html":{}}}],["clientroutingmodule",{"_index":145,"title":{"modules/ClientRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ClientRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["clients",{"_index":367,"title":{},"body":{"modules/ClientRoutingModule.html":{},"injectables/ClientService.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"interceptors/MockInterceptor.html":{},"components/UsersComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["clients'},{'name",{"_index":94,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{}}}],["clients.clients.filter(c",{"_index":1059,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["clients.component",{"_index":362,"title":{},"body":{"modules/ClientModule.html":{},"modules/ClientRoutingModule.html":{}}}],["clients.component.html",{"_index":397,"title":{},"body":{"components/ClientsComponent.html":{},"components/GlobalClientsComponent.html":{}}}],["clients.component.scss",{"_index":431,"title":{},"body":{"components/ClientsComponent.html":{},"components/GlobalClientsComponent.html":{}}}],["clients.component.ts",{"_index":900,"title":{},"body":{"components/GlobalClientsComponent.html":{},"coverage.html":{}}}],["clients.component.ts:13",{"_index":906,"title":{},"body":{"components/GlobalClientsComponent.html":{}}}],["clients.component.ts:14",{"_index":907,"title":{},"body":{"components/GlobalClientsComponent.html":{}}}],["clients.component.ts:15",{"_index":901,"title":{},"body":{"components/GlobalClientsComponent.html":{}}}],["clients.component.ts:19",{"_index":904,"title":{},"body":{"components/GlobalClientsComponent.html":{}}}],["clients.component.ts:23",{"_index":905,"title":{},"body":{"components/GlobalClientsComponent.html":{}}}],["clients.component.ts:29",{"_index":903,"title":{},"body":{"components/GlobalClientsComponent.html":{}}}],["clients.component.ts:33",{"_index":902,"title":{},"body":{"components/GlobalClientsComponent.html":{}}}],["clients.foreach(c",{"_index":385,"title":{},"body":{"injectables/ClientService.html":{}}}],["clients/global",{"_index":361,"title":{},"body":{"modules/ClientModule.html":{},"modules/ClientRoutingModule.html":{},"components/GlobalClientsComponent.html":{},"coverage.html":{}}}],["clientscomponent",{"_index":93,"title":{"components/ClientsComponent.html":{}},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"modules/ClientModule.html":{},"modules/ClientRoutingModule.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["clientservice",{"_index":368,"title":{"injectables/ClientService.html":{}},"body":{"injectables/ClientService.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["clientslist",{"_index":1057,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["clientsofselectedproject",{"_index":1054,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["clientsofselectedproject.map(clientid",{"_index":1058,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["close",{"_index":1134,"title":{},"body":{"components/NavbarComponent.html":{}}}],["cls",{"_index":1460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster_appmodule",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":244,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declarations",{"_index":245,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":247,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":246,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_clientmodule",{"_index":355,"title":{},"body":{"modules/ClientModule.html":{},"overview.html":{}}}],["cluster_clientmodule_declarations",{"_index":356,"title":{},"body":{"modules/ClientModule.html":{},"overview.html":{}}}],["cluster_clientmodule_imports",{"_index":357,"title":{},"body":{"modules/ClientModule.html":{}}}],["cluster_configmodule",{"_index":456,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_configmodule_declarations",{"_index":457,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_configmodule_imports",{"_index":458,"title":{},"body":{"modules/ConfigModule.html":{}}}],["cluster_coremodule",{"_index":753,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_declarations",{"_index":754,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_exports",{"_index":756,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":755,"title":{},"body":{"modules/CoreModule.html":{}}}],["cluster_projectmodule",{"_index":1202,"title":{},"body":{"modules/ProjectModule.html":{},"overview.html":{}}}],["cluster_projectmodule_declarations",{"_index":1203,"title":{},"body":{"modules/ProjectModule.html":{},"overview.html":{}}}],["cluster_projectmodule_imports",{"_index":1204,"title":{},"body":{"modules/ProjectModule.html":{}}}],["cluster_sharedmodule",{"_index":1238,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":1239,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":1240,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_providers",{"_index":1241,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":1303,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_declarations",{"_index":1304,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":1305,"title":{},"body":{"modules/UserModule.html":{}}}],["code",{"_index":962,"title":{},"body":{"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{},"miscellaneous/variables.html":{}}}],["color",{"_index":747,"title":{},"body":{"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/NavbarComponent.html":{}}}],["color__accent",{"_index":816,"title":{},"body":{"components/DropDownComponent.html":{}}}],["color__accent_bg",{"_index":859,"title":{},"body":{"components/DropDownComponent.html":{}}}],["color__accent_bg_semi_transparent",{"_index":898,"title":{},"body":{"components/FooterComponent.html":{}}}],["color__main_bg",{"_index":897,"title":{},"body":{"components/FooterComponent.html":{}}}],["color__navbar",{"_index":1147,"title":{},"body":{"components/NavbarComponent.html":{}}}],["color__navbar_bg",{"_index":1146,"title":{},"body":{"components/NavbarComponent.html":{}}}],["color__navbar_link",{"_index":1160,"title":{},"body":{"components/NavbarComponent.html":{}}}],["color__navbar_link_hover",{"_index":1163,"title":{},"body":{"components/NavbarComponent.html":{}}}],["color__navbar_link_visited",{"_index":1162,"title":{},"body":{"components/NavbarComponent.html":{}}}],["color__table_border",{"_index":705,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["column",{"_index":1170,"title":{},"body":{"components/NavbarComponent.html":{}}}],["commonmodule",{"_index":249,"title":{},"body":{"modules/AuthModule.html":{},"modules/ClientModule.html":{},"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"modules/MockModule.html":{},"modules/ProjectModule.html":{},"modules/SharedModule.html":{},"modules/UserModule.html":{}}}],["component",{"_index":55,"title":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{}},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/ClientRoutingModule.html":{},"components/ClientsComponent.html":{},"modules/ConfigRoutingModule.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"modules/CoreRoutingModule.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"modules/ProjectRoutingModule.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"modules/UserRoutingModule.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":89,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{}}}],["components",{"_index":57,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{},"overview.html":{}}}],["components/drop",{"_index":1247,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/toast/toast.component",{"_index":1246,"title":{},"body":{"modules/SharedModule.html":{}}}],["config",{"_index":98,"title":{"classes/Config.html":{}},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"classes/Config.html":{},"components/ConfigSelectionPageComponent.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"modules/CoreRoutingModule.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"index.html":{}}}],["config#docker",{"_index":1435,"title":{},"body":{"index.html":{}}}],["config.foreach(c",{"_index":541,"title":{},"body":{"injectables/ConfigService.html":{}}}],["config\\/[a",{"_index":1018,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["configform",{"_index":616,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["configmodule",{"_index":146,"title":{"modules/ConfigModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules.html":{},"overview.html":{}}}],["configobject",{"_index":629,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["configroutingmodule",{"_index":147,"title":{"modules/ConfigRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ConfigRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["configs",{"_index":100,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"modules/ConfigRoutingModule.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{}}}],["configs'},{'name",{"_index":96,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{}}}],["configs.component",{"_index":462,"title":{},"body":{"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{}}}],["configs.component.html",{"_index":561,"title":{},"body":{"components/ConfigsComponent.html":{},"components/GlobalConfigsComponent.html":{}}}],["configs.component.scss",{"_index":591,"title":{},"body":{"components/ConfigsComponent.html":{},"components/GlobalConfigsComponent.html":{}}}],["configs.component.ts",{"_index":910,"title":{},"body":{"components/GlobalConfigsComponent.html":{},"coverage.html":{}}}],["configs.component.ts:17",{"_index":918,"title":{},"body":{"components/GlobalConfigsComponent.html":{}}}],["configs.component.ts:19",{"_index":919,"title":{},"body":{"components/GlobalConfigsComponent.html":{}}}],["configs.component.ts:20",{"_index":921,"title":{},"body":{"components/GlobalConfigsComponent.html":{}}}],["configs.component.ts:21",{"_index":920,"title":{},"body":{"components/GlobalConfigsComponent.html":{}}}],["configs.component.ts:22",{"_index":911,"title":{},"body":{"components/GlobalConfigsComponent.html":{}}}],["configs.component.ts:32",{"_index":914,"title":{},"body":{"components/GlobalConfigsComponent.html":{}}}],["configs.component.ts:38",{"_index":912,"title":{},"body":{"components/GlobalConfigsComponent.html":{}}}],["configs.component.ts:44",{"_index":915,"title":{},"body":{"components/GlobalConfigsComponent.html":{}}}],["configs.component.ts:50",{"_index":917,"title":{},"body":{"components/GlobalConfigsComponent.html":{}}}],["configs.component.ts:56",{"_index":916,"title":{},"body":{"components/GlobalConfigsComponent.html":{}}}],["configs.component.ts:63",{"_index":913,"title":{},"body":{"components/GlobalConfigsComponent.html":{}}}],["configs/global",{"_index":461,"title":{},"body":{"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"components/GlobalConfigsComponent.html":{},"coverage.html":{}}}],["configscomponent",{"_index":95,"title":{"components/ConfigsComponent.html":{}},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["configselectionpagecomponent",{"_index":97,"title":{"components/ConfigSelectionPageComponent.html":{}},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"modules/CoreModule.html":{},"modules/CoreRoutingModule.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["configservice",{"_index":478,"title":{"injectables/ConfigService.html":{}},"body":{"components/ConfigSelectionPageComponent.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"components/GlobalConfigsComponent.html":{},"coverage.html":{}}}],["configstablecomponent",{"_index":99,"title":{"components/ConfigsTableComponent.html":{}},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"modules/ConfigModule.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["configuration",{"_index":510,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{}}}],["configurations",{"_index":928,"title":{},"body":{"components/GlobalConfigsComponent.html":{}}}],["configvalue",{"_index":689,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["console.log('authorize",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('onblur',event",{"_index":692,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["console.log(888",{"_index":1033,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["console.log(clientslist",{"_index":1061,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["console.log(clientsofselectedproject",{"_index":1056,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["console.log(configvalue",{"_index":691,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["console.log(e",{"_index":393,"title":{},"body":{"injectables/ClientService.html":{},"injectables/ConfigService.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{}}}],["console.log(error",{"_index":972,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log(projectid",{"_index":1050,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["console.log(selectedproject",{"_index":1053,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["console.log(this.clients",{"_index":595,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["console.log(this.configform.value.config",{"_index":694,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["console.log(this.configobject",{"_index":693,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["console.log(this.global",{"_index":680,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["console.log(this.userid",{"_index":594,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["console.log(this.users",{"_index":598,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["const",{"_index":45,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"modules/ClientRoutingModule.html":{},"injectables/ClientService.html":{},"components/ClientsComponent.html":{},"modules/ConfigRoutingModule.html":{},"components/ConfigSelectionPageComponent.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"modules/CoreRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/GlobalConfigsComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{},"modules/MockModule.html":{},"modules/ProjectRoutingModule.html":{},"injectables/ProjectService.html":{},"modules/UserRoutingModule.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["constructor",{"_index":10,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ClientService.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["constructor(authenticationservice",{"_index":931,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["constructor(authservice",{"_index":869,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["constructor(clientservice",{"_index":408,"title":{},"body":{"components/ClientsComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{}}}],["constructor(configservice",{"_index":477,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{}}}],["constructor(eref",{"_index":784,"title":{},"body":{"components/DropDownComponent.html":{}}}],["constructor(http",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ClientService.html":{},"injectables/ConfigService.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":43,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ClientService.html":{},"injectables/ConfigService.html":{},"components/ConfigsTableComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/GlobalClientsComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/NavbarComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"injectables/UserService.html":{}}}],["constructor(projectservice",{"_index":566,"title":{},"body":{"components/ConfigsComponent.html":{},"components/ProjectsComponent.html":{}}}],["constructor(public",{"_index":1266,"title":{},"body":{"components/ToastComponent.html":{}}}],["constructor(route",{"_index":633,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["constructor(router",{"_index":11,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["constructor(toastservice",{"_index":1256,"title":{},"body":{"components/ToastComponent.html":{}}}],["constructor(userservice",{"_index":1325,"title":{},"body":{"components/UsersComponent.html":{}}}],["container",{"_index":711,"title":{},"body":{"components/ConfigsTableComponent.html":{},"components/LeftSidebarComponent.html":{}}}],["containers/admin",{"_index":761,"title":{},"body":{"modules/CoreModule.html":{}}}],["containers/clients/clients.component",{"_index":359,"title":{},"body":{"modules/ClientModule.html":{}}}],["containers/config",{"_index":766,"title":{},"body":{"modules/CoreModule.html":{}}}],["containers/configs",{"_index":463,"title":{},"body":{"modules/ConfigModule.html":{}}}],["containers/configs/configs.component",{"_index":460,"title":{},"body":{"modules/ConfigModule.html":{}}}],["containers/footer/footer.component",{"_index":759,"title":{},"body":{"modules/CoreModule.html":{}}}],["containers/global",{"_index":360,"title":{},"body":{"modules/ClientModule.html":{},"modules/ConfigModule.html":{}}}],["containers/left",{"_index":763,"title":{},"body":{"modules/CoreModule.html":{}}}],["containers/login/login.component",{"_index":250,"title":{},"body":{"modules/AuthModule.html":{}}}],["containers/navbar/navbar.component",{"_index":758,"title":{},"body":{"modules/CoreModule.html":{}}}],["containers/page",{"_index":760,"title":{},"body":{"modules/CoreModule.html":{}}}],["containers/users/users.component",{"_index":1307,"title":{},"body":{"modules/UserModule.html":{}}}],["content",{"_index":202,"title":{},"body":{"classes/AppPage.html":{},"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/NavbarComponent.html":{}}}],["context",{"_index":1389,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["control",{"_index":663,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["control.push(grp",{"_index":670,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["control.push(this.initialform",{"_index":671,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["control.removeat(index",{"_index":672,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["coremodule",{"_index":148,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ClientModule.html":{},"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"modules/ProjectModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["coreroutingmodule",{"_index":149,"title":{"modules/CoreRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/CoreRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["coverage",{"_index":1348,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["currentdecodeduservalue",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{}}}],["currentuser",{"_index":238,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{},"components/NavbarComponent.html":{}}}],["currentuser().role",{"_index":1093,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["currentuser.access_token",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/JwtInterceptor.html":{}}}],["currentuser.role",{"_index":969,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["currentuser.username",{"_index":1138,"title":{},"body":{"components/NavbarComponent.html":{}}}],["currentusersubject",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{}}}],["currentuservalue",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{}}}],["cursor",{"_index":822,"title":{},"body":{"components/DropDownComponent.html":{}}}],["d",{"_index":422,"title":{},"body":{"components/ClientsComponent.html":{},"interceptors/MockInterceptor.html":{}}}],["d.id",{"_index":439,"title":{},"body":{"components/ClientsComponent.html":{},"injectables/UserService.html":{}}}],["d.name",{"_index":544,"title":{},"body":{"injectables/ConfigService.html":{},"components/DropDownComponent.html":{},"injectables/UserService.html":{}}}],["d.scope",{"_index":545,"title":{},"body":{"injectables/ConfigService.html":{}}}],["danger",{"_index":1284,"title":{},"body":{"injectables/ToastService.html":{}}}],["data",{"_index":540,"title":{},"body":{"injectables/ConfigService.html":{},"components/DropDownComponent.html":{},"interceptors/MockInterceptor.html":{}}}],["data.clients",{"_index":384,"title":{},"body":{"injectables/ClientService.html":{}}}],["data.projects",{"_index":1216,"title":{},"body":{"injectables/ProjectService.html":{}}}],["data.users",{"_index":1319,"title":{},"body":{"injectables/UserService.html":{}}}],["data/index.ts",{"_index":1374,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["dd",{"_index":824,"title":{},"body":{"components/DropDownComponent.html":{}}}],["declarations",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ClientModule.html":{},"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"modules/MockModule.html":{},"modules/ProjectModule.html":{},"modules/SharedModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decode",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["default",{"_index":75,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/ClientsComponent.html":{},"classes/Config.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{},"components/NavbarComponent.html":{},"components/ProjectsComponent.html":{},"injectables/ToastService.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":449,"title":{},"body":{"classes/Config.html":{},"injectables/ConfigService.html":{},"interceptors/MockInterceptor.html":{}}}],["defaults.filter(d",{"_index":543,"title":{},"body":{"injectables/ConfigService.html":{}}}],["defaultvalues",{"_index":542,"title":{},"body":{"injectables/ConfigService.html":{}}}],["defaultvalues.length",{"_index":546,"title":{},"body":{"injectables/ConfigService.html":{}}}],["defaultvalues[0].value",{"_index":549,"title":{},"body":{"injectables/ConfigService.html":{}}}],["defined",{"_index":14,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminSelectionPageComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Client.html":{},"injectables/ClientService.html":{},"components/ClientsComponent.html":{},"classes/Config.html":{},"components/ConfigSelectionPageComponent.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{},"components/NavbarComponent.html":{},"classes/Project.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["delay",{"_index":984,"title":{},"body":{"interceptors/MockInterceptor.html":{},"injectables/ToastService.html":{}}}],["delete",{"_index":679,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["dematerialize",{"_index":987,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["dependencies",{"_index":132,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ClientModule.html":{},"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"modules/ProjectModule.html":{},"modules/SharedModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":65,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"injectables/ClientService.html":{},"injectables/ConfigService.html":{},"components/FooterComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Project.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"injectables/ToastService.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["dev",{"_index":1423,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["development",{"_index":1107,"title":{},"body":{"interceptors/MockInterceptor.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["direction",{"_index":1169,"title":{},"body":{"components/NavbarComponent.html":{}}}],["directive",{"_index":87,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{}}}],["directives",{"_index":124,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{}}}],["disabled",{"_index":752,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["display",{"_index":708,"title":{},"body":{"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/NavbarComponent.html":{}}}],["document:click",{"_index":783,"title":{},"body":{"components/DropDownComponent.html":{}}}],["document:click(event",{"_index":792,"title":{},"body":{"components/DropDownComponent.html":{}}}],["documentation",{"_index":1349,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":59,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{}}}],["down.component",{"_index":1248,"title":{},"body":{"modules/SharedModule.html":{}}}],["down.component.html",{"_index":777,"title":{},"body":{"components/DropDownComponent.html":{}}}],["down.component.scss",{"_index":776,"title":{},"body":{"components/DropDownComponent.html":{}}}],["down.component.ts",{"_index":773,"title":{},"body":{"components/DropDownComponent.html":{},"coverage.html":{}}}],["down.component.ts:11",{"_index":788,"title":{},"body":{"components/DropDownComponent.html":{}}}],["down.component.ts:12",{"_index":789,"title":{},"body":{"components/DropDownComponent.html":{}}}],["down.component.ts:14",{"_index":790,"title":{},"body":{"components/DropDownComponent.html":{}}}],["down.component.ts:15",{"_index":799,"title":{},"body":{"components/DropDownComponent.html":{}}}],["down.component.ts:16",{"_index":786,"title":{},"body":{"components/DropDownComponent.html":{}}}],["down.component.ts:22",{"_index":794,"title":{},"body":{"components/DropDownComponent.html":{}}}],["down.component.ts:27",{"_index":795,"title":{},"body":{"components/DropDownComponent.html":{}}}],["down.component.ts:31",{"_index":797,"title":{},"body":{"components/DropDownComponent.html":{}}}],["down.component.ts:38",{"_index":793,"title":{},"body":{"components/DropDownComponent.html":{}}}],["down/drop",{"_index":772,"title":{},"body":{"components/DropDownComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["drop",{"_index":775,"title":{},"body":{"components/DropDownComponent.html":{}}}],["dropdown",{"_index":774,"title":{},"body":{"components/DropDownComponent.html":{}}}],["dropdown'},{'name",{"_index":103,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{}}}],["dropdowncomponent",{"_index":102,"title":{"components/DropDownComponent.html":{}},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"modules/SharedModule.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dynamic",{"_index":1398,"title":{},"body":{"dependencies.html":{}}}],["e2e/src/app.po.ts",{"_index":194,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":198,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":197,"title":{},"body":{"classes/AppPage.html":{}}}],["edit",{"_index":508,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{}}}],["element",{"_index":86,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{}}}],["element(by.css('app",{"_index":201,"title":{},"body":{"classes/AppPage.html":{}}}],["elementref",{"_index":785,"title":{},"body":{"components/DropDownComponent.html":{}}}],["ellipsis",{"_index":845,"title":{},"body":{"components/DropDownComponent.html":{}}}],["enumerations",{"_index":1407,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":990,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["env.envname",{"_index":994,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["envadmin",{"_index":991,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["environment",{"_index":187,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/ClientService.html":{},"injectables/ConfigService.html":{},"interceptors/MockInterceptor.html":{},"modules/MockModule.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.authapi}/authorize?client_id=${environment.clientid}&response_type=code&redirect_uri=${environment.authcallback",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{}}}],["environment.authcallback",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{}}}],["environment.authcallback}?code=${code",{"_index":1031,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["environment.baseurl",{"_index":191,"title":{},"body":{"modules/AppModule.html":{}}}],["environment.clientid",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{}}}],["environment.envname",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/MockInterceptor.html":{},"modules/MockModule.html":{},"miscellaneous/variables.html":{}}}],["environment.fakecode.code",{"_index":1030,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["environment.fakejwttoken.token",{"_index":1092,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["environments/environment",{"_index":188,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/ClientService.html":{},"injectables/ConfigService.html":{},"interceptors/MockInterceptor.html":{},"modules/MockModule.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{}}}],["environments/environment.mock",{"_index":992,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["envname",{"_index":1467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["envresearcher",{"_index":993,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["eref",{"_index":787,"title":{},"body":{"components/DropDownComponent.html":{}}}],["err.error.message",{"_index":886,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["err.statustext",{"_index":887,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["error",{"_index":807,"title":{},"body":{"components/DropDownComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{}}}],["errorinterceptor",{"_index":865,"title":{"interceptors/ErrorInterceptor.html":{}},"body":{"interceptors/ErrorInterceptor.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["event",{"_index":488,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/UsersComponent.html":{}}}],["event.config.map(c",{"_index":604,"title":{},"body":{"components/ConfigsComponent.html":{},"components/GlobalConfigsComponent.html":{}}}],["event.id",{"_index":499,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/UsersComponent.html":{}}}],["eventemitter",{"_index":639,"title":{},"body":{"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{}}}],["expires_in",{"_index":226,"title":{},"body":{"interfaces/AuthData.html":{},"interfaces/AuthResponse.html":{}}}],["export",{"_index":40,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponse.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Client.html":{},"modules/ClientModule.html":{},"modules/ClientRoutingModule.html":{},"injectables/ClientService.html":{},"components/ClientsComponent.html":{},"classes/Config.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"components/ConfigSelectionPageComponent.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"modules/CoreModule.html":{},"modules/CoreRoutingModule.html":{},"components/DropDownComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{},"modules/MockModule.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Project.html":{},"modules/ProjectModule.html":{},"modules/ProjectRoutingModule.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"modules/SharedModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"classes/User.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["exports",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/ClientModule.html":{},"modules/ClientRoutingModule.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"modules/CoreModule.html":{},"modules/CoreRoutingModule.html":{},"modules/ProjectModule.html":{},"modules/ProjectRoutingModule.html":{},"modules/SharedModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"overview.html":{}}}],["extraproviders",{"_index":1112,"title":{},"body":{"modules/MockModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["eyj0exaioijkv1qilcjhbgcioijfuzi1nij9.eyjhdwqioijyzxnfyxbwy29uzmlniiwic3viijoicgv5bwfuiiwic291cmnlcyi6w10simdyyw50x3r5cguioijwyxnzd29yzcisinvzzxjfbmftzsi6inblew1hbiisinjvbgvzijpbxswic2nvcguiolsiu1vcskvdvc5vuerbveuilcjquk9krunulknsrufursisilbst0pfq1quvvbeqvrfiiwituvbu1vsru1ftlquq1jfqvrfiiwiufjpskvdvc5srufeiiwit0fvvehdtelftlrtlljfquqilcjtvujkrunulljfquqixswiaxnzijoitwfuywdlbwvudfbvcnrhbcisimv4cci6mtu4mdi5nzm2mswiawf0ijoxntgwmjkznzyxlcjhdxrob3jpdgllcyi6wyjst0xfx1nzu19bre1jtijdlcjjbgllbnrfawqioijhchbjb25mawdfznjvbnrlbmqifq.hf2kzum0b1cimedmiundyvapg72pptxsgdswx",{"_index":1482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjhdwqioijyzxnfyxbwy29uzmlniiwic3viijoicgv5bwfuiiwic291cmnlcyi6w10simdyyw50x3r5cguioijwyxnzd29yzcisinvzzxjfbmftzsi6ikpvag4ilcjyb2xlcyi6w10sinnjb3blijpbilnvqkpfq1quvvbeqvrfiiwiufjpskvdvc5dukvbveuilcjquk9krunullvqrefursisik1fqvnvukvnru5ulknsrufursisilbst0pfq1quukvbrcisik9bvvriq0xjru5uuy5srufeiiwiu1vcskvdvc5srufeil0simlzcyi6ik1hbmfnzw1lbnrqb3j0ywwilcjlehaioje1odayotcznjesimlhdci6mtu4mdi5mzc2mswiyxv0ag9yaxrpzxmiolsiuk9mrv9srvnfqvjdsevsil0simnsawvudf9pzci6imfwcgnvbmzpz19mcm9udgvuzcj9.ilqxcmkxr8jcy9r6xg7dv",{"_index":1479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fake",{"_index":1103,"title":{},"body":{"interceptors/MockInterceptor.html":{},"miscellaneous/variables.html":{}}}],["fakeclientid",{"_index":1073,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["fakecode",{"_index":1476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fakejwttoken",{"_index":1478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["false",{"_index":51,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClientsComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectsComponent.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":750,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["fb",{"_index":634,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["fff",{"_index":1183,"title":{},"body":{"components/NavbarComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponse.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Client.html":{},"modules/ClientModule.html":{},"modules/ClientRoutingModule.html":{},"injectables/ClientService.html":{},"components/ClientsComponent.html":{},"classes/Config.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"components/ConfigSelectionPageComponent.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"modules/CoreModule.html":{},"modules/CoreRoutingModule.html":{},"components/DropDownComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{},"modules/MockModule.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Project.html":{},"modules/ProjectModule.html":{},"modules/ProjectRoutingModule.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"modules/SharedModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"classes/User.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["files",{"_index":1428,"title":{},"body":{"index.html":{}}}],["finally",{"_index":394,"title":{},"body":{"injectables/ClientService.html":{},"injectables/ConfigService.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{}}}],["first",{"_index":959,"title":{},"body":{"components/LoginComponent.html":{}}}],["fixed",{"_index":1140,"title":{},"body":{"components/NavbarComponent.html":{}}}],["flex",{"_index":709,"title":{},"body":{"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/NavbarComponent.html":{}}}],["focus",{"_index":686,"title":{},"body":{"components/ConfigsTableComponent.html":{},"components/NavbarComponent.html":{}}}],["font",{"_index":749,"title":{},"body":{"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/NavbarComponent.html":{}}}],["footer",{"_index":890,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":105,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{}}}],["footer.component.html",{"_index":892,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":891,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercomponent",{"_index":104,"title":{"components/FooterComponent.html":{}},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"modules/CoreModule.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["form",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{}}}],["formarray",{"_index":661,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["formbuilder",{"_index":635,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["formgroup",{"_index":645,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["formsmodule",{"_index":466,"title":{},"body":{"modules/ConfigModule.html":{}}}],["found",{"_index":1186,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found'},{'name",{"_index":117,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{}}}],["found.component",{"_index":210,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{}}}],["found.component.html",{"_index":1187,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.scss",{"_index":1188,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts",{"_index":1185,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["found/page",{"_index":209,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["full",{"_index":215,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":1003,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["functions",{"_index":1027,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["generatecode",{"_index":1020,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["generatecode('researcher",{"_index":1023,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["generated",{"_index":1415,"title":{},"body":{"index.html":{}}}],["generatetoken",{"_index":1025,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["generatetoken('researcher",{"_index":1026,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["getallclients",{"_index":372,"title":{},"body":{"injectables/ClientService.html":{}}}],["getallclientsobservable",{"_index":373,"title":{},"body":{"injectables/ClientService.html":{}}}],["getallprojects",{"_index":1209,"title":{},"body":{"injectables/ProjectService.html":{}}}],["getallprojectsobservable",{"_index":1210,"title":{},"body":{"injectables/ProjectService.html":{}}}],["getclients",{"_index":475,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/GlobalConfigsComponent.html":{},"interceptors/MockInterceptor.html":{},"components/UsersComponent.html":{}}}],["getclientsbyprojectid(getprojectidfromurl",{"_index":1013,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["getclientsbyprojectid(projectid",{"_index":1049,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["getconfigbyclientid",{"_index":1016,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["getconfigbyclientidandprojectid",{"_index":1017,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["getconfigbyprojectidclientid",{"_index":514,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getconfigbyprojectidclientid(projectid",{"_index":522,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getconfigbyprojectidclientidobservable",{"_index":515,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getconfigbyprojectidclientidobservable(projectid",{"_index":524,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getconfigbyprojectidclientiduserid(projectid",{"_index":555,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getconfigbyprojectidclientiduseridobservable(projectid",{"_index":554,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getconfigformvalue",{"_index":619,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["getconfigs",{"_index":620,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["getcurrentdecodeduservalue",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcurrentuservalue",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{}}}],["getformdata",{"_index":632,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["getgetformdata",{"_index":657,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["getglobalconfigbyclientid",{"_index":516,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getglobalconfigbyclientid(clientid",{"_index":526,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getglobalconfigbyclientidobservable",{"_index":517,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getglobalconfigbyclientidobservable(clientid",{"_index":528,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getisadmin",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{}}}],["getprojectidandclientidfromurl",{"_index":1100,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["getprojectidfromurl",{"_index":1098,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["getprojects",{"_index":401,"title":{},"body":{"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"interceptors/MockInterceptor.html":{},"components/UsersComponent.html":{}}}],["getting",{"_index":1412,"title":{"index.html":{}},"body":{}}],["gettitletext",{"_index":195,"title":{},"body":{"classes/AppPage.html":{}}}],["getusers",{"_index":562,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["getusersbyprojectid",{"_index":1311,"title":{},"body":{"injectables/UserService.html":{}}}],["getusersbyprojectid(getprojectidfromurl",{"_index":1014,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["getusersbyprojectid(projectid",{"_index":1063,"title":{},"body":{"interceptors/MockInterceptor.html":{},"injectables/UserService.html":{}}}],["getusersbyprojectidobservable",{"_index":1312,"title":{},"body":{"injectables/UserService.html":{}}}],["getusersbyprojectidobservable(projectid",{"_index":1315,"title":{},"body":{"injectables/UserService.html":{}}}],["global",{"_index":107,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"modules/ClientRoutingModule.html":{},"components/ClientsComponent.html":{},"modules/ConfigRoutingModule.html":{},"components/ConfigSelectionPageComponent.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{}}}],["globalclientscomponent",{"_index":106,"title":{"components/GlobalClientsComponent.html":{}},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"modules/ClientModule.html":{},"modules/ClientRoutingModule.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["globalconfigs.find(c",{"_index":1075,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["globalconfigscomponent",{"_index":108,"title":{"components/GlobalConfigsComponent.html":{}},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["graph",{"_index":1445,"title":{},"body":{"modules.html":{}}}],["greeting",{"_index":1155,"title":{},"body":{"components/NavbarComponent.html":{}}}],["group.value.default",{"_index":699,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["groups",{"_index":511,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{},"components/ConfigsTableComponent.html":{},"interceptors/MockInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["grp",{"_index":667,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["grs",{"_index":1461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["guard",{"_index":0,"title":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":2,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"overview.html":{}}}],["handler",{"_index":1122,"title":{},"body":{"components/NavbarComponent.html":{}}}],["handleroute",{"_index":1004,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["happens",{"_index":687,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["head",{"_index":778,"title":{},"body":{"components/DropDownComponent.html":{}}}],["head.name",{"_index":813,"title":{},"body":{"components/DropDownComponent.html":{}}}],["headers",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"interceptors/MockInterceptor.html":{}}}],["headers.get('authorization",{"_index":1090,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["headisactive",{"_index":779,"title":{},"body":{"components/DropDownComponent.html":{}}}],["height",{"_index":745,"title":{},"body":{"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/NavbarComponent.html":{}}}],["hello",{"_index":1137,"title":{},"body":{"components/NavbarComponent.html":{}}}],["help",{"_index":1139,"title":{},"body":{"components/NavbarComponent.html":{}}}],["helper",{"_index":1081,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["hidden",{"_index":843,"title":{},"body":{"components/DropDownComponent.html":{}}}],["history.state",{"_index":437,"title":{},"body":{"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/UsersComponent.html":{}}}],["host",{"_index":1252,"title":{},"body":{"components/ToastComponent.html":{}}}],["hostbinding",{"_index":949,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["hostbinding('class",{"_index":951,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["hostbindings",{"_index":945,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["hostlistener",{"_index":800,"title":{},"body":{"components/DropDownComponent.html":{}}}],["hostlistener('document:click",{"_index":810,"title":{},"body":{"components/DropDownComponent.html":{}}}],["hostlisteners",{"_index":782,"title":{},"body":{"components/DropDownComponent.html":{}}}],["hover",{"_index":857,"title":{},"body":{"components/DropDownComponent.html":{},"components/NavbarComponent.html":{}}}],["href=/appconfig",{"_index":1441,"title":{},"body":{"index.html":{}}}],["html",{"_index":85,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{}}}],["http",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ClientService.html":{},"injectables/ConfigService.html":{},"interceptors/MockInterceptor.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":1470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200/appconfig",{"_index":1425,"title":{},"body":{"index.html":{}}}],["http://localhost:4200/appconfig/login",{"_index":1475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200/appconfig/managementportal/oauth",{"_index":1472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200/login",{"_index":1493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:8080/managementportal/oauth",{"_index":1492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http_interceptors",{"_index":983,"title":{},"body":{"interceptors/MockInterceptor.html":{},"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["httpclient",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ClientService.html":{},"injectables/ConfigService.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{}}}],["httpclientmodule",{"_index":251,"title":{},"body":{"modules/AuthModule.html":{}}}],["httpevent",{"_index":876,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"interceptors/MockInterceptor.html":{}}}],["httphandler",{"_index":873,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"interceptors/MockInterceptor.html":{}}}],["httpinterceptor",{"_index":877,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"interceptors/MockInterceptor.html":{}}}],["httpparams",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{}}}],["httprequest",{"_index":872,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"interceptors/MockInterceptor.html":{}}}],["httpresponse",{"_index":982,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["https://github.com/radar",{"_index":1433,"title":{},"body":{"index.html":{}}}],["humanreadableprojectname",{"_index":1191,"title":{},"body":{"classes/Project.html":{}}}],["i18n/strings.json",{"_index":79,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/UsersComponent.html":{}}}],["i=0;i",{"_index":695,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["iat",{"_index":228,"title":{},"body":{"interfaces/AuthData.html":{},"interfaces/AuthResponse.html":{}}}],["icon",{"_index":738,"title":{},"body":{"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/NavbarComponent.html":{}}}],["id",{"_index":351,"title":{},"body":{"classes/Client.html":{},"classes/Project.html":{},"classes/User.html":{}}}],["identifier",{"_index":1350,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":893,"title":{},"body":{"components/FooterComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["img",{"_index":1168,"title":{},"body":{"components/NavbarComponent.html":{}}}],["imp",{"_index":973,"title":{},"body":{"components/LoginComponent.html":{}}}],["implements",{"_index":42,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{},"components/ProjectsComponent.html":{},"components/UsersComponent.html":{}}}],["import",{"_index":32,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponse.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"modules/ClientModule.html":{},"modules/ClientRoutingModule.html":{},"injectables/ClientService.html":{},"components/ClientsComponent.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"components/ConfigSelectionPageComponent.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"modules/CoreModule.html":{},"modules/CoreRoutingModule.html":{},"components/DropDownComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{},"modules/MockModule.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"modules/ProjectModule.html":{},"modules/ProjectRoutingModule.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"modules/SharedModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["imports",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/ClientModule.html":{},"modules/ClientRoutingModule.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"modules/CoreModule.html":{},"modules/CoreRoutingModule.html":{},"modules/MockModule.html":{},"modules/ProjectModule.html":{},"modules/ProjectRoutingModule.html":{},"modules/SharedModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"guards/AdminGuard.html":{},"components/AdminSelectionPageComponent.html":{},"classes/AppPage.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"classes/Client.html":{},"injectables/ClientService.html":{},"components/ClientsComponent.html":{},"classes/Config.html":{},"components/ConfigSelectionPageComponent.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{},"components/NavbarComponent.html":{},"classes/Project.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponse.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Client.html":{},"modules/ClientModule.html":{},"modules/ClientRoutingModule.html":{},"injectables/ClientService.html":{},"components/ClientsComponent.html":{},"classes/Config.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"components/ConfigSelectionPageComponent.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"modules/CoreModule.html":{},"modules/CoreRoutingModule.html":{},"components/DropDownComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{},"modules/MockModule.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Project.html":{},"modules/ProjectModule.html":{},"modules/ProjectRoutingModule.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"modules/SharedModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"classes/User.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["initialform",{"_index":621,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["initialize",{"_index":622,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["injectable",{"_index":33,"title":{"injectables/AuthService.html":{},"injectables/ClientService.html":{},"injectables/ConfigService.html":{},"injectables/ProjectService.html":{},"injectables/ToastService.html":{},"injectables/UserService.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ClientService.html":{},"injectables/ConfigService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"interceptors/MockInterceptor.html":{},"injectables/ProjectService.html":{},"injectables/ToastService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ClientService.html":{},"injectables/ConfigService.html":{},"injectables/ProjectService.html":{},"injectables/ToastService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["inline",{"_index":1181,"title":{},"body":{"components/NavbarComponent.html":{}}}],["input",{"_index":659,"title":{},"body":{"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/LeftSidebarComponent.html":{}}}],["inputs",{"_index":628,"title":{},"body":{"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/LeftSidebarComponent.html":{}}}],["instanceof",{"_index":1267,"title":{},"body":{"components/ToastComponent.html":{}}}],["intercept",{"_index":868,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"interceptors/MockInterceptor.html":{}}}],["intercept(request",{"_index":871,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"interceptors/MockInterceptor.html":{}}}],["interceptor",{"_index":864,"title":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"interceptors/MockInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":866,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"interceptors/MockInterceptor.html":{}}}],["interface",{"_index":217,"title":{"interfaces/AuthData.html":{},"interfaces/AuthResponse.html":{}},"body":{"interfaces/AuthData.html":{},"interfaces/AuthResponse.html":{},"coverage.html":{}}}],["interfaces",{"_index":219,"title":{},"body":{"interfaces/AuthData.html":{},"interfaces/AuthResponse.html":{},"overview.html":{}}}],["isadmin",{"_index":46,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AuthService.html":{},"interceptors/MockInterceptor.html":{},"components/NavbarComponent.html":{}}}],["isloggedin",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/JwtInterceptor.html":{},"interceptors/MockInterceptor.html":{}}}],["isnavmenuactive",{"_index":1117,"title":{},"body":{"components/NavbarComponent.html":{}}}],["iss",{"_index":229,"title":{},"body":{"interfaces/AuthData.html":{},"interfaces/AuthResponse.html":{}}}],["istemplate",{"_index":1255,"title":{},"body":{"components/ToastComponent.html":{}}}],["istemplate(toast",{"_index":1258,"title":{},"body":{"components/ToastComponent.html":{}}}],["item",{"_index":798,"title":{},"body":{"components/DropDownComponent.html":{},"components/NavbarComponent.html":{}}}],["items",{"_index":834,"title":{},"body":{"components/DropDownComponent.html":{},"components/NavbarComponent.html":{}}}],["json.stringify(user",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{}}}],["jti",{"_index":230,"title":{},"body":{"interfaces/AuthData.html":{},"interfaces/AuthResponse.html":{}}}],["justify",{"_index":836,"title":{},"body":{"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/NavbarComponent.html":{}}}],["jwt",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["jwt_decode",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwt_decode(currentuser.access_token",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtdecoded",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtdecoded.authorities[0",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtdecoded.user_name",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtinterceptor",{"_index":929,"title":{"interceptors/JwtInterceptor.html":{}},"body":{"interceptors/JwtInterceptor.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["keyboard_arrow_down",{"_index":814,"title":{},"body":{"components/DropDownComponent.html":{}}}],["keyboard_arrow_left{{__.backto}}{{backbutton.name",{"_index":952,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["kstjcsby0y09e8xe9sfbs",{"_index":1480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["left",{"_index":110,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{}}}],["leftsidebarcomponent",{"_index":109,"title":{"components/LeftSidebarComponent.html":{}},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"modules/CoreModule.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["legend",{"_index":84,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ClientModule.html":{},"components/ClientsComponent.html":{},"modules/ConfigModule.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"modules/CoreModule.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"modules/ProjectModule.html":{},"components/ProjectsComponent.html":{},"modules/SharedModule.html":{},"components/ToastComponent.html":{},"modules/UserModule.html":{},"components/UsersComponent.html":{},"overview.html":{}}}],["length",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{},"components/ConfigsComponent.html":{},"interceptors/MockInterceptor.html":{},"miscellaneous/variables.html":{}}}],["less",{"_index":1106,"title":{},"body":{"interceptors/MockInterceptor.html":{},"miscellaneous/variables.html":{}}}],["letter",{"_index":1177,"title":{},"body":{"components/NavbarComponent.html":{}}}],["li",{"_index":821,"title":{},"body":{"components/DropDownComponent.html":{}}}],["light",{"_index":1285,"title":{},"body":{"injectables/ToastService.html":{}}}],["line",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"interceptors/MockInterceptor.html":{},"miscellaneous/variables.html":{}}}],["line:max",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{},"components/ConfigsComponent.html":{},"interceptors/MockInterceptor.html":{},"miscellaneous/variables.html":{}}}],["line:no",{"_index":801,"title":{},"body":{"components/DropDownComponent.html":{},"interceptors/MockInterceptor.html":{},"components/ToastComponent.html":{}}}],["link",{"_index":1149,"title":{},"body":{"components/NavbarComponent.html":{},"index.html":{}}}],["list",{"_index":856,"title":{},"body":{"components/DropDownComponent.html":{}}}],["literal",{"_index":452,"title":{},"body":{"classes/Config.html":{},"components/LeftSidebarComponent.html":{}}}],["loaded",{"_index":390,"title":{},"body":{"injectables/ClientService.html":{},"injectables/ConfigService.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{}}}],["loading",{"_index":398,"title":{},"body":{"components/ClientsComponent.html":{},"components/ConfigsComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LoginComponent.html":{},"components/ProjectsComponent.html":{},"components/UsersComponent.html":{}}}],["local",{"_index":1429,"title":{},"body":{"index.html":{}}}],["localstorage.getitem('returnurl",{"_index":967,"title":{},"body":{"components/LoginComponent.html":{}}}],["localstorage.removeitem('currentuser",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem('returnurl",{"_index":1128,"title":{},"body":{"components/NavbarComponent.html":{}}}],["localstorage.setitem('currentuser",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('returnurl",{"_index":964,"title":{},"body":{"components/LoginComponent.html":{}}}],["location",{"_index":1192,"title":{},"body":{"classes/Project.html":{}}}],["location.reload(true",{"_index":885,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["logger",{"_index":974,"title":{},"body":{"components/LoginComponent.html":{}}}],["login",{"_index":213,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["login'},{'name",{"_index":113,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{}}}],["login.component.html",{"_index":954,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":960,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":112,"title":{"components/LoginComponent.html":{}},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logo",{"_index":1167,"title":{},"body":{"components/NavbarComponent.html":{}}}],["logout",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["main",{"_index":770,"title":{},"body":{"modules/CoreRoutingModule.html":{},"components/LoginComponent.html":{}}}],["makebackbutton",{"_index":402,"title":{},"body":{"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/UsersComponent.html":{}}}],["makequeryparams",{"_index":403,"title":{},"body":{"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/GlobalClientsComponent.html":{},"components/ProjectsComponent.html":{},"components/UsersComponent.html":{}}}],["makequeryparams(clientid",{"_index":415,"title":{},"body":{"components/ClientsComponent.html":{},"components/GlobalClientsComponent.html":{}}}],["makequeryparams(projectid",{"_index":1224,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["makequeryparams(userid",{"_index":1330,"title":{},"body":{"components/UsersComponent.html":{}}}],["makestate",{"_index":404,"title":{},"body":{"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/GlobalClientsComponent.html":{},"components/ProjectsComponent.html":{},"components/UsersComponent.html":{}}}],["managementportal",{"_index":1431,"title":{},"body":{"index.html":{}}}],["map",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{}}}],["margin",{"_index":728,"title":{},"body":{"components/ConfigsTableComponent.html":{},"components/NavbarComponent.html":{}}}],["mat",{"_index":846,"title":{},"body":{"components/DropDownComponent.html":{},"components/NavbarComponent.html":{}}}],["matching",{"_index":53,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponse.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Client.html":{},"modules/ClientModule.html":{},"modules/ClientRoutingModule.html":{},"injectables/ClientService.html":{},"components/ClientsComponent.html":{},"classes/Config.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"components/ConfigSelectionPageComponent.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"modules/CoreModule.html":{},"modules/CoreRoutingModule.html":{},"components/DropDownComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{},"modules/MockModule.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Project.html":{},"modules/ProjectModule.html":{},"modules/ProjectRoutingModule.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"modules/SharedModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"classes/User.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["materialize",{"_index":986,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["maticonmodule",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{}}}],["max",{"_index":1144,"title":{},"body":{"components/NavbarComponent.html":{}}}],["media",{"_index":714,"title":{},"body":{"components/ConfigsTableComponent.html":{},"components/NavbarComponent.html":{}}}],["menu",{"_index":1133,"title":{},"body":{"components/NavbarComponent.html":{}}}],["mergemap",{"_index":985,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["message",{"_index":1088,"title":{},"body":{"interceptors/MockInterceptor.html":{},"injectables/ToastService.html":{}}}],["metadata",{"_index":68,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{}}}],["method",{"_index":997,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["methods",{"_index":8,"title":{},"body":{"guards/AdminGuard.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ClientService.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{},"components/NavbarComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["min",{"_index":716,"title":{},"body":{"components/ConfigsTableComponent.html":{},"components/NavbarComponent.html":{}}}],["miscellaneous",{"_index":1406,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mock",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/MockInterceptor.html":{},"modules/MockModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["mockbackendprovider",{"_index":1101,"title":{},"body":{"interceptors/MockInterceptor.html":{},"modules/MockModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockinterceptor",{"_index":979,"title":{"interceptors/MockInterceptor.html":{}},"body":{"interceptors/MockInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockmodule",{"_index":150,"title":{"modules/MockModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MockModule.html":{},"modules.html":{},"overview.html":{}}}],["module",{"_index":129,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/ClientModule.html":{},"modules/ClientRoutingModule.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"modules/CoreModule.html":{},"modules/CoreRoutingModule.html":{},"modules/MockModule.html":{},"modules/ProjectModule.html":{},"modules/ProjectRoutingModule.html":{},"modules/SharedModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ClientModule.html":{},"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"modules/ProjectModule.html":{},"modules/SharedModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":131,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/ClientModule.html":{},"modules/ClientRoutingModule.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"modules/CoreModule.html":{},"modules/CoreRoutingModule.html":{},"modules/MockModule.html":{},"modules/ProjectModule.html":{},"modules/ProjectRoutingModule.html":{},"modules/SharedModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["montserrat",{"_index":751,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["multi",{"_index":1109,"title":{},"body":{"interceptors/MockInterceptor.html":{},"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["name",{"_index":18,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Client.html":{},"injectables/ClientService.html":{},"components/ClientsComponent.html":{},"classes/Config.html":{},"components/ConfigSelectionPageComponent.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Project.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["native",{"_index":802,"title":{},"body":{"components/DropDownComponent.html":{}}}],["nav",{"_index":1148,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar",{"_index":1114,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":115,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{}}}],["navbar.component.html",{"_index":1116,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.scss",{"_index":1115,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbarcomponent",{"_index":114,"title":{"components/NavbarComponent.html":{}},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"modules/CoreModule.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navigate",{"_index":1424,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":196,"title":{},"body":{"classes/AppPage.html":{}}}],["new",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"coverage.html":{}}}],["newconfigarray",{"_index":603,"title":{},"body":{"components/ConfigsComponent.html":{},"components/GlobalConfigsComponent.html":{}}}],["newconfigarray}).subscribe",{"_index":926,"title":{},"body":{"components/GlobalConfigsComponent.html":{}}}],["next",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{},"components/ConfigsComponent.html":{},"components/DropDownComponent.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"interceptors/MockInterceptor.html":{},"components/ToastComponent.html":{},"miscellaneous/variables.html":{}}}],["next.handle(request",{"_index":940,"title":{},"body":{"interceptors/JwtInterceptor.html":{},"interceptors/MockInterceptor.html":{}}}],["next.handle(request).pipe(catcherror(err",{"_index":880,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["ng",{"_index":1244,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{},"index.html":{}}}],["ngbmodule",{"_index":1243,"title":{},"body":{"modules/SharedModule.html":{}}}],["ngmodule",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/ClientModule.html":{},"modules/ClientRoutingModule.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"modules/CoreModule.html":{},"modules/CoreRoutingModule.html":{},"modules/MockModule.html":{},"modules/ProjectModule.html":{},"modules/ProjectRoutingModule.html":{},"modules/SharedModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{}}}],["ngoninit",{"_index":405,"title":{},"body":{"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LoginComponent.html":{},"components/ProjectsComponent.html":{},"components/UsersComponent.html":{}}}],["none",{"_index":742,"title":{},"body":{"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/NavbarComponent.html":{}}}],["nonglobalconfigs.find(c",{"_index":1078,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["nowrap",{"_index":841,"title":{},"body":{"components/DropDownComponent.html":{}}}],["npm",{"_index":1422,"title":{},"body":{"index.html":{}}}],["null",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{},"components/ConfigsComponent.html":{},"components/GlobalConfigsComponent.html":{},"interceptors/MockInterceptor.html":{},"components/NavbarComponent.html":{}}}],["number",{"_index":227,"title":{},"body":{"interfaces/AuthData.html":{},"interfaces/AuthResponse.html":{},"components/ConfigsTableComponent.html":{},"classes/Project.html":{}}}],["object",{"_index":1280,"title":{},"body":{"injectables/ToastService.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":28,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ClientService.html":{},"injectables/ConfigService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"interceptors/MockInterceptor.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{}}}],["occurred",{"_index":684,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["of(new",{"_index":1085,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["of(null",{"_index":998,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["ok(body",{"_index":1084,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["ok(clients",{"_index":1046,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["ok(config",{"_index":1077,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["ok(null",{"_index":1047,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["ok(projects",{"_index":1045,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["ok(user",{"_index":1029,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["ok(user.projects.map(projectid",{"_index":1044,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["ok({clients",{"_index":1062,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["ok({projects",{"_index":1037,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["ok({users",{"_index":1072,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["onblur",{"_index":623,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["onblur(event",{"_index":648,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["oncancel",{"_index":624,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["onclientchange",{"_index":476,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/UsersComponent.html":{}}}],["onclientchange(event",{"_index":486,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/UsersComponent.html":{}}}],["onheadclick",{"_index":780,"title":{},"body":{"components/DropDownComponent.html":{}}}],["oninit",{"_index":396,"title":{},"body":{"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LoginComponent.html":{},"components/ProjectsComponent.html":{},"components/UsersComponent.html":{}}}],["onitemclick",{"_index":781,"title":{},"body":{"components/DropDownComponent.html":{}}}],["onitemclick(item",{"_index":796,"title":{},"body":{"components/DropDownComponent.html":{}}}],["onnavbartogglerclick",{"_index":1118,"title":{},"body":{"components/NavbarComponent.html":{}}}],["onprojectchange",{"_index":406,"title":{},"body":{"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/UsersComponent.html":{}}}],["onprojectchange(d",{"_index":420,"title":{},"body":{"components/ClientsComponent.html":{}}}],["onprojectchange(event",{"_index":489,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/UsersComponent.html":{}}}],["onpublish",{"_index":625,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["onreset",{"_index":626,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["onsave",{"_index":563,"title":{},"body":{"components/ConfigsComponent.html":{},"components/GlobalConfigsComponent.html":{}}}],["onsave(event",{"_index":576,"title":{},"body":{"components/ConfigsComponent.html":{},"components/GlobalConfigsComponent.html":{}}}],["onuserchange",{"_index":564,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["onuserchange(event",{"_index":578,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["optional",{"_index":20,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ClientService.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{},"components/NavbarComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["options",{"_index":1275,"title":{},"body":{"injectables/ToastService.html":{}}}],["organization",{"_index":1193,"title":{},"body":{"classes/Project.html":{}}}],["out",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ClientModule.html":{},"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"modules/ProjectModule.html":{},"modules/SharedModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["output",{"_index":660,"title":{},"body":{"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{}}}],["outputs",{"_index":630,"title":{},"body":{"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{}}}],["overflow",{"_index":842,"title":{},"body":{"components/DropDownComponent.html":{}}}],["overview",{"_index":1447,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":744,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["p.data",{"_index":1036,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["p.data.id",{"_index":1042,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["p.data.projectname",{"_index":1064,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["p.name",{"_index":1218,"title":{},"body":{"injectables/ProjectService.html":{}}}],["p.projectname",{"_index":1219,"title":{},"body":{"injectables/ProjectService.html":{}}}],["package",{"_index":1392,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":720,"title":{},"body":{"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/NavbarComponent.html":{}}}],["page",{"_index":67,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{}}}],["page'},{'name",{"_index":90,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{}}}],["page.component",{"_index":762,"title":{},"body":{"modules/CoreModule.html":{},"modules/CoreRoutingModule.html":{}}}],["page.component.html",{"_index":72,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/ConfigSelectionPageComponent.html":{}}}],["page.component.scss",{"_index":81,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/ConfigSelectionPageComponent.html":{}}}],["page.component.ts",{"_index":64,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:13",{"_index":78,"title":{},"body":{"components/AdminSelectionPageComponent.html":{}}}],["page.component.ts:17",{"_index":491,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{}}}],["page.component.ts:19",{"_index":493,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{}}}],["page.component.ts:20",{"_index":492,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{}}}],["page.component.ts:21",{"_index":494,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{}}}],["page.component.ts:22",{"_index":479,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{}}}],["page.component.ts:32",{"_index":485,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{}}}],["page.component.ts:40",{"_index":481,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{}}}],["page.component.ts:46",{"_index":480,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{}}}],["page.component.ts:52",{"_index":490,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{}}}],["page.component.ts:59",{"_index":487,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{}}}],["page.component.ts:66",{"_index":484,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{}}}],["page.component.ts:70",{"_index":483,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{}}}],["page.component.ts:74",{"_index":482,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{}}}],["page/admin",{"_index":63,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"modules/CoreModule.html":{},"modules/CoreRoutingModule.html":{},"coverage.html":{}}}],["page/config",{"_index":474,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{},"modules/CoreModule.html":{},"modules/CoreRoutingModule.html":{},"coverage.html":{}}}],["pagenotfoundcomponent",{"_index":116,"title":{"components/PageNotFoundComponent.html":{}},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"modules/CoreModule.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["parameters",{"_index":16,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ClientService.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{},"components/NavbarComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["params",{"_index":963,"title":{},"body":{"components/LoginComponent.html":{}}}],["participants",{"_index":989,"title":{},"body":{"interceptors/MockInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["participants.participants.filter(u",{"_index":1069,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["pas",{"_index":1462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["path",{"_index":211,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/ClientRoutingModule.html":{},"modules/ConfigRoutingModule.html":{},"modules/CoreRoutingModule.html":{},"modules/ProjectRoutingModule.html":{},"modules/UserRoutingModule.html":{}}}],["pathmatch",{"_index":214,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["payload",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ConfigService.html":{}}}],["pipe(delay(500",{"_index":1001,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["pipe(dematerialize",{"_index":1002,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["pipe(map((user",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{}}}],["pipe(materialize",{"_index":1000,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["pipe(mergemap(handleroute",{"_index":999,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["place",{"_index":1105,"title":{},"body":{"interceptors/MockInterceptor.html":{},"miscellaneous/variables.html":{}}}],["plugins",{"_index":1074,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["pointer",{"_index":823,"title":{},"body":{"components/DropDownComponent.html":{}}}],["port=4200",{"_index":1439,"title":{},"body":{"index.html":{}}}],["position",{"_index":817,"title":{},"body":{"components/DropDownComponent.html":{},"components/NavbarComponent.html":{}}}],["postconfigbyprojectidandclientid",{"_index":518,"title":{},"body":{"injectables/ConfigService.html":{}}}],["postconfigbyprojectidandclientid(projectid",{"_index":530,"title":{},"body":{"injectables/ConfigService.html":{}}}],["postconfigbyprojectidandclientidanduserid",{"_index":519,"title":{},"body":{"injectables/ConfigService.html":{}}}],["postconfigbyprojectidandclientidanduserid(projectid",{"_index":532,"title":{},"body":{"injectables/ConfigService.html":{}}}],["postglobalconfigbyclientid",{"_index":520,"title":{},"body":{"injectables/ConfigService.html":{}}}],["postglobalconfigbyclientid(clientid",{"_index":535,"title":{},"body":{"injectables/ConfigService.html":{}}}],["private",{"_index":44,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ClientService.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["processlogin",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{}}}],["processlogin(authcode",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{}}}],["prod",{"_index":1485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":1468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":417,"title":{"classes/Project.html":{}},"body":{"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"classes/Project.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"coverage.html":{},"index.html":{}}}],["project.description",{"_index":1233,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["project.fakeprojectid",{"_index":1079,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["project.location",{"_index":1237,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["project.organization",{"_index":1235,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["project.projectname",{"_index":1232,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["projectid",{"_index":399,"title":{},"body":{"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"interceptors/MockInterceptor.html":{},"components/ProjectsComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["projectmodule",{"_index":151,"title":{"modules/ProjectModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProjectModule.html":{},"modules.html":{},"overview.html":{}}}],["projectname",{"_index":1194,"title":{},"body":{"classes/Project.html":{}}}],["projectroutingmodule",{"_index":152,"title":{"modules/ProjectRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProjectModule.html":{},"modules/ProjectRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["projects",{"_index":400,"title":{},"body":{"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"interceptors/MockInterceptor.html":{},"modules/ProjectRoutingModule.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects'},{'name",{"_index":119,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{}}}],["projects.component.html",{"_index":1222,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["projects.component.scss",{"_index":1230,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["projects.foreach(p",{"_index":1217,"title":{},"body":{"injectables/ProjectService.html":{}}}],["projects.projects.filter(p",{"_index":1052,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["projects.projects.find(p",{"_index":1041,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["projects.projects.map(p",{"_index":1035,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["projectscomponent",{"_index":118,"title":{"components/ProjectsComponent.html":{}},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"modules/ProjectModule.html":{},"modules/ProjectRoutingModule.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["projectservice",{"_index":409,"title":{"injectables/ProjectService.html":{}},"body":{"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["projectslist",{"_index":1034,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["projectslists",{"_index":1039,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["projectslists.map(p",{"_index":1043,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["promise",{"_index":29,"title":{},"body":{"guards/AdminGuard.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"injectables/ClientService.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{}}}],["properties",{"_index":73,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"interfaces/AuthData.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"classes/Client.html":{},"components/ClientsComponent.html":{},"classes/Config.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"classes/Project.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"classes/User.html":{},"components/UsersComponent.html":{}}}],["property",{"_index":1264,"title":{},"body":{"components/ToastComponent.html":{}}}],["protractor",{"_index":199,"title":{},"body":{"classes/AppPage.html":{}}}],["provide",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"interceptors/MockInterceptor.html":{},"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["providedin",{"_index":38,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ClientService.html":{},"injectables/ConfigService.html":{},"interceptors/MockInterceptor.html":{},"injectables/ProjectService.html":{},"injectables/ToastService.html":{},"injectables/UserService.html":{}}}],["providers",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ClientModule.html":{},"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"modules/MockModule.html":{},"modules/ProjectModule.html":{},"modules/SharedModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["prs",{"_index":1463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{},"components/ToastComponent.html":{}}}],["queryparams",{"_index":241,"title":{},"body":{"guards/AuthGuard.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/UsersComponent.html":{}}}],["racf_auth_api",{"_index":1488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["racf_auth_callback",{"_index":1489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["racf_backend_url",{"_index":1491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["racf_base_url",{"_index":1487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["radar",{"_index":1430,"title":{},"body":{"index.html":{}}}],["radius",{"_index":826,"title":{},"body":{"components/DropDownComponent.html":{}}}],["radix",{"_index":1096,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["reactiveformsmodule",{"_index":467,"title":{},"body":{"modules/ConfigModule.html":{}}}],["redirectto",{"_index":212,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["relative",{"_index":818,"title":{},"body":{"components/DropDownComponent.html":{}}}],["reload",{"_index":1427,"title":{},"body":{"index.html":{}}}],["remove",{"_index":627,"title":{},"body":{"components/ConfigsTableComponent.html":{},"injectables/ToastService.html":{}}}],["remove(index",{"_index":653,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["remove(toast",{"_index":1272,"title":{},"body":{"injectables/ToastService.html":{}}}],["request",{"_index":875,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"interceptors/MockInterceptor.html":{}}}],["request.clone",{"_index":936,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["require",{"_index":1390,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["researcher",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/MockInterceptor.html":{},"modules/MockModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["researcher.ts",{"_index":1384,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["researcherclients",{"_index":1048,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["reset",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ClientModule.html":{},"modules/ConfigModule.html":{},"components/ConfigsTableComponent.html":{},"modules/CoreModule.html":{},"modules/ProjectModule.html":{},"modules/SharedModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["result",{"_index":52,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponse.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Client.html":{},"modules/ClientModule.html":{},"modules/ClientRoutingModule.html":{},"injectables/ClientService.html":{},"components/ClientsComponent.html":{},"classes/Config.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"components/ConfigSelectionPageComponent.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"modules/CoreModule.html":{},"modules/CoreRoutingModule.html":{},"components/DropDownComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{},"modules/MockModule.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Project.html":{},"modules/ProjectModule.html":{},"modules/ProjectRoutingModule.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"modules/SharedModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"classes/User.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":54,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponse.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Client.html":{},"modules/ClientModule.html":{},"modules/ClientRoutingModule.html":{},"injectables/ClientService.html":{},"components/ClientsComponent.html":{},"classes/Config.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"components/ConfigSelectionPageComponent.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"modules/CoreModule.html":{},"modules/CoreRoutingModule.html":{},"components/DropDownComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{},"modules/MockModule.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Project.html":{},"modules/ProjectModule.html":{},"modules/ProjectRoutingModule.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"modules/SharedModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"classes/User.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results.foreach(d",{"_index":1320,"title":{},"body":{"injectables/UserService.html":{}}}],["return",{"_index":48,"title":{},"body":{"guards/AdminGuard.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ClientService.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"interceptors/JwtInterceptor.html":{},"interceptors/MockInterceptor.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["returns",{"_index":27,"title":{},"body":{"guards/AdminGuard.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ClientService.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{},"components/NavbarComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["returnurl",{"_index":242,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["rgba(#fff",{"_index":1150,"title":{},"body":{"components/NavbarComponent.html":{}}}],["rgba($color",{"_index":858,"title":{},"body":{"components/DropDownComponent.html":{}}}],["rgba(0,0,0,.15",{"_index":832,"title":{},"body":{"components/DropDownComponent.html":{}}}],["rgba(0,0,0,0.15",{"_index":825,"title":{},"body":{"components/DropDownComponent.html":{}}}],["right",{"_index":725,"title":{},"body":{"components/ConfigsTableComponent.html":{},"components/NavbarComponent.html":{}}}],["role",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/MockInterceptor.html":{}}}],["role_sys_admin",{"_index":1411,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["roles",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{},"miscellaneous/enumerations.html":{}}}],["roles.system_admin",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{}}}],["root",{"_index":39,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ClientService.html":{},"injectables/ConfigService.html":{},"interceptors/MockInterceptor.html":{},"injectables/ProjectService.html":{},"injectables/ToastService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":92,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{}}}],["route",{"_index":26,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"components/ConfigsTableComponent.html":{},"interceptors/MockInterceptor.html":{}}}],["router",{"_index":12,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/UsersComponent.html":{}}}],["routerlink",{"_index":414,"title":{},"body":{"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/UsersComponent.html":{}}}],["routermodule",{"_index":207,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/ClientModule.html":{},"modules/ClientRoutingModule.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"modules/CoreRoutingModule.html":{},"modules/ProjectRoutingModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":255,"title":{},"body":{"modules/AuthRoutingModule.html":{},"modules/ClientRoutingModule.html":{},"modules/ConfigRoutingModule.html":{},"modules/CoreRoutingModule.html":{},"modules/ProjectRoutingModule.html":{},"modules/UserRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":216,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":24,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["routes",{"_index":206,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/ClientRoutingModule.html":{},"modules/ConfigRoutingModule.html":{},"modules/CoreRoutingModule.html":{},"modules/ProjectRoutingModule.html":{},"modules/UserRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/ProjectModule.html":{}}}],["routing.module.ts",{"_index":205,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/ClientRoutingModule.html":{},"modules/ConfigRoutingModule.html":{},"modules/CoreRoutingModule.html":{},"modules/ProjectRoutingModule.html":{},"modules/UserRoutingModule.html":{}}}],["run",{"_index":1421,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":36,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ClientService.html":{},"injectables/ConfigService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"interceptors/MockInterceptor.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{}}}],["save",{"_index":631,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["scope",{"_index":450,"title":{},"body":{"classes/Config.html":{},"components/ConfigsTableComponent.html":{},"interceptors/MockInterceptor.html":{}}}],["screen",{"_index":715,"title":{},"body":{"components/ConfigsTableComponent.html":{},"components/NavbarComponent.html":{}}}],["see",{"_index":1432,"title":{},"body":{"index.html":{}}}],["selected",{"_index":512,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{},"components/DropDownComponent.html":{}}}],["selectedproject",{"_index":1051,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["selectedproject[0].clients",{"_index":1055,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["selectedproject[0].participants",{"_index":1066,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["selection",{"_index":62,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"modules/CoreModule.html":{},"modules/CoreRoutingModule.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["selector",{"_index":69,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{}}}],["separator",{"_index":1182,"title":{},"body":{"components/NavbarComponent.html":{}}}],["serve",{"_index":1438,"title":{},"body":{"index.html":{}}}],["server",{"_index":1420,"title":{},"body":{"index.html":{}}}],["service",{"_index":370,"title":{},"body":{"injectables/ClientService.html":{},"injectables/ConfigService.html":{},"interceptors/MockInterceptor.html":{},"injectables/ProjectService.html":{},"injectables/ToastService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["setheaders",{"_index":937,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["shadow",{"_index":829,"title":{},"body":{"components/DropDownComponent.html":{}}}],["shadowed",{"_index":1082,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["sharedmodule",{"_index":153,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ClientModule.html":{},"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["show",{"_index":1269,"title":{},"body":{"injectables/ToastService.html":{}}}],["show(textortpl",{"_index":1274,"title":{},"body":{"injectables/ToastService.html":{}}}],["showcustomtoast(customtpl",{"_index":1297,"title":{},"body":{"injectables/ToastService.html":{}}}],["showerror",{"_index":1270,"title":{},"body":{"injectables/ToastService.html":{}}}],["showerror(message",{"_index":1278,"title":{},"body":{"injectables/ToastService.html":{}}}],["showsuccess",{"_index":1271,"title":{},"body":{"injectables/ToastService.html":{}}}],["showsuccess(message",{"_index":1288,"title":{},"body":{"injectables/ToastService.html":{}}}],["sidebar",{"_index":719,"title":{},"body":{"components/ConfigsTableComponent.html":{},"components/LeftSidebarComponent.html":{}}}],["sidebar'},{'name",{"_index":111,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{}}}],["sidebar.component",{"_index":765,"title":{},"body":{"modules/CoreModule.html":{}}}],["sidebar.component.html",{"_index":943,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar.component.scss",{"_index":950,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar.component.ts",{"_index":942,"title":{},"body":{"components/LeftSidebarComponent.html":{},"coverage.html":{}}}],["sidebar.component.ts:12",{"_index":948,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar.component.ts:13",{"_index":947,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar.component.ts:14",{"_index":946,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar/left",{"_index":764,"title":{},"body":{"modules/CoreModule.html":{},"components/LeftSidebarComponent.html":{},"coverage.html":{}}}],["site",{"_index":1164,"title":{},"body":{"components/NavbarComponent.html":{}}}],["size",{"_index":847,"title":{},"body":{"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/NavbarComponent.html":{}}}],["size__small",{"_index":717,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["size__tablet",{"_index":1145,"title":{},"body":{"components/NavbarComponent.html":{}}}],["solid",{"_index":733,"title":{},"body":{"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/NavbarComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponse.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Client.html":{},"modules/ClientModule.html":{},"modules/ClientRoutingModule.html":{},"injectables/ClientService.html":{},"components/ClientsComponent.html":{},"classes/Config.html":{},"modules/ConfigModule.html":{},"modules/ConfigRoutingModule.html":{},"components/ConfigSelectionPageComponent.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"modules/CoreModule.html":{},"modules/CoreRoutingModule.html":{},"components/DropDownComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{},"modules/MockModule.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Project.html":{},"modules/ProjectModule.html":{},"modules/ProjectRoutingModule.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"modules/SharedModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"classes/User.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["space",{"_index":837,"title":{},"body":{"components/DropDownComponent.html":{},"components/NavbarComponent.html":{}}}],["spacing",{"_index":1178,"title":{},"body":{"components/NavbarComponent.html":{}}}],["span')).gettext",{"_index":203,"title":{},"body":{"classes/AppPage.html":{}}}],["spec\\.ts",{"_index":1466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.mock",{"_index":1454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.mock.ts",{"_index":1455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":1452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mock.module.ts",{"_index":1459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mock.service.ts",{"_index":1458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../roles.enum.ts",{"_index":1408,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../test.ts",{"_index":1453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":204,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.module.ts",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/auth/auth",{"_index":253,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["src/app/auth/auth.module.ts",{"_index":248,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/auth/containers/login/login.component.ts",{"_index":953,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/auth/containers/login/login.component.ts:15",{"_index":958,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/containers/login/login.component.ts:17",{"_index":955,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/containers/login/login.component.ts:25",{"_index":957,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/containers/login/login.component.ts:62",{"_index":956,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/enums/roles.enum.ts",{"_index":1409,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/auth/helpers/admin.guard.ts",{"_index":6,"title":{},"body":{"guards/AdminGuard.html":{},"coverage.html":{}}}],["src/app/auth/helpers/admin.guard.ts:10",{"_index":15,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/auth/helpers/admin.guard.ts:14",{"_index":25,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/auth/helpers/auth.guard.ts",{"_index":235,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/auth/helpers/auth.guard.ts:10",{"_index":236,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/helpers/auth.guard.ts:14",{"_index":237,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/models/auth.ts",{"_index":220,"title":{},"body":{"interfaces/AuthData.html":{},"interfaces/AuthResponse.html":{},"coverage.html":{}}}],["src/app/auth/models/user.ts",{"_index":1356,"title":{},"body":{"coverage.html":{}}}],["src/app/auth/services/auth.service.ts",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/auth/services/auth.service.ts:16",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:17",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:24",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:28",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:33",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:44",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:49",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:68",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/client/client",{"_index":363,"title":{},"body":{"modules/ClientRoutingModule.html":{}}}],["src/app/client/client.module.ts",{"_index":358,"title":{},"body":{"modules/ClientModule.html":{}}}],["src/app/client/containers/clients/clients.component.ts",{"_index":395,"title":{},"body":{"components/ClientsComponent.html":{},"coverage.html":{}}}],["src/app/client/containers/clients/clients.component.ts:16",{"_index":424,"title":{},"body":{"components/ClientsComponent.html":{}}}],["src/app/client/containers/clients/clients.component.ts:17",{"_index":426,"title":{},"body":{"components/ClientsComponent.html":{}}}],["src/app/client/containers/clients/clients.component.ts:18",{"_index":427,"title":{},"body":{"components/ClientsComponent.html":{}}}],["src/app/client/containers/clients/clients.component.ts:19",{"_index":425,"title":{},"body":{"components/ClientsComponent.html":{}}}],["src/app/client/containers/clients/clients.component.ts:20",{"_index":411,"title":{},"body":{"components/ClientsComponent.html":{}}}],["src/app/client/containers/clients/clients.component.ts:28",{"_index":419,"title":{},"body":{"components/ClientsComponent.html":{}}}],["src/app/client/containers/clients/clients.component.ts:34",{"_index":412,"title":{},"body":{"components/ClientsComponent.html":{}}}],["src/app/client/containers/clients/clients.component.ts:40",{"_index":421,"title":{},"body":{"components/ClientsComponent.html":{}}}],["src/app/client/containers/clients/clients.component.ts:46",{"_index":423,"title":{},"body":{"components/ClientsComponent.html":{}}}],["src/app/client/containers/clients/clients.component.ts:52",{"_index":418,"title":{},"body":{"components/ClientsComponent.html":{}}}],["src/app/client/containers/clients/clients.component.ts:56",{"_index":416,"title":{},"body":{"components/ClientsComponent.html":{}}}],["src/app/client/containers/clients/clients.component.ts:60",{"_index":413,"title":{},"body":{"components/ClientsComponent.html":{}}}],["src/app/client/containers/global",{"_index":899,"title":{},"body":{"components/GlobalClientsComponent.html":{},"coverage.html":{}}}],["src/app/client/models/client.ts",{"_index":349,"title":{},"body":{"classes/Client.html":{},"coverage.html":{}}}],["src/app/client/models/client.ts:2",{"_index":353,"title":{},"body":{"classes/Client.html":{}}}],["src/app/client/models/client.ts:3",{"_index":352,"title":{},"body":{"classes/Client.html":{}}}],["src/app/client/models/client.ts:4",{"_index":354,"title":{},"body":{"classes/Client.html":{}}}],["src/app/client/services/client.service.ts",{"_index":369,"title":{},"body":{"injectables/ClientService.html":{},"coverage.html":{}}}],["src/app/client/services/client.service.ts:14",{"_index":375,"title":{},"body":{"injectables/ClientService.html":{}}}],["src/app/client/services/client.service.ts:19",{"_index":377,"title":{},"body":{"injectables/ClientService.html":{}}}],["src/app/client/services/client.service.ts:23",{"_index":376,"title":{},"body":{"injectables/ClientService.html":{}}}],["src/app/config/config",{"_index":470,"title":{},"body":{"modules/ConfigRoutingModule.html":{}}}],["src/app/config/config.module.ts",{"_index":459,"title":{},"body":{"modules/ConfigModule.html":{}}}],["src/app/config/containers/configs",{"_index":611,"title":{},"body":{"components/ConfigsTableComponent.html":{},"coverage.html":{}}}],["src/app/config/containers/configs/configs.component.ts",{"_index":560,"title":{},"body":{"components/ConfigsComponent.html":{},"coverage.html":{}}}],["src/app/config/containers/configs/configs.component.ts:105",{"_index":577,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["src/app/config/containers/configs/configs.component.ts:121",{"_index":572,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["src/app/config/containers/configs/configs.component.ts:20",{"_index":581,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["src/app/config/containers/configs/configs.component.ts:22",{"_index":585,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["src/app/config/containers/configs/configs.component.ts:23",{"_index":582,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["src/app/config/containers/configs/configs.component.ts:24",{"_index":587,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["src/app/config/containers/configs/configs.component.ts:25",{"_index":584,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["src/app/config/containers/configs/configs.component.ts:27",{"_index":586,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["src/app/config/containers/configs/configs.component.ts:28",{"_index":583,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["src/app/config/containers/configs/configs.component.ts:29",{"_index":588,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["src/app/config/containers/configs/configs.component.ts:30",{"_index":568,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["src/app/config/containers/configs/configs.component.ts:41",{"_index":573,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["src/app/config/containers/configs/configs.component.ts:56",{"_index":570,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["src/app/config/containers/configs/configs.component.ts:62",{"_index":569,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["src/app/config/containers/configs/configs.component.ts:68",{"_index":571,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["src/app/config/containers/configs/configs.component.ts:75",{"_index":575,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["src/app/config/containers/configs/configs.component.ts:83",{"_index":574,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["src/app/config/containers/configs/configs.component.ts:91",{"_index":579,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["src/app/config/containers/configs/configs.component.ts:99",{"_index":580,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["src/app/config/containers/global",{"_index":909,"title":{},"body":{"components/GlobalConfigsComponent.html":{},"coverage.html":{}}}],["src/app/config/models/config.ts",{"_index":448,"title":{},"body":{"classes/Config.html":{},"coverage.html":{}}}],["src/app/config/models/config.ts:2",{"_index":451,"title":{},"body":{"classes/Config.html":{}}}],["src/app/config/models/config.ts:3",{"_index":455,"title":{},"body":{"classes/Config.html":{}}}],["src/app/config/models/config.ts:4",{"_index":453,"title":{},"body":{"classes/Config.html":{}}}],["src/app/config/models/config.ts:9",{"_index":454,"title":{},"body":{"classes/Config.html":{}}}],["src/app/config/services/config.service.ts",{"_index":513,"title":{},"body":{"injectables/ConfigService.html":{},"coverage.html":{}}}],["src/app/config/services/config.service.ts:14",{"_index":521,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/config/services/config.service.ts:18",{"_index":529,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/config/services/config.service.ts:22",{"_index":527,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/config/services/config.service.ts:45",{"_index":525,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/config/services/config.service.ts:49",{"_index":523,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/config/services/config.service.ts:76",{"_index":536,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/config/services/config.service.ts:84",{"_index":531,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/config/services/config.service.ts:92",{"_index":534,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/core/containers/admin",{"_index":61,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"coverage.html":{}}}],["src/app/core/containers/config",{"_index":473,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{},"coverage.html":{}}}],["src/app/core/containers/footer/footer.component.ts",{"_index":889,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/core/containers/left",{"_index":941,"title":{},"body":{"components/LeftSidebarComponent.html":{},"coverage.html":{}}}],["src/app/core/containers/navbar/navbar.component.ts",{"_index":1113,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/core/containers/navbar/navbar.component.ts:22",{"_index":1124,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/core/containers/navbar/navbar.component.ts:23",{"_index":1125,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/core/containers/navbar/navbar.component.ts:24",{"_index":1119,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/core/containers/navbar/navbar.component.ts:36",{"_index":1120,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/core/containers/navbar/navbar.component.ts:44",{"_index":1123,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/core/containers/page",{"_index":1184,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["src/app/core/core",{"_index":767,"title":{},"body":{"modules/CoreRoutingModule.html":{}}}],["src/app/core/core.module.ts",{"_index":757,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/mock/mock",{"_index":1373,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/mock/mock.module.ts",{"_index":1110,"title":{},"body":{"modules/MockModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/mock/services/mock.service.ts",{"_index":980,"title":{},"body":{"interceptors/MockInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/mock/services/mock.service.ts:24",{"_index":981,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["src/app/project/containers/projects/projects.component.ts",{"_index":1221,"title":{},"body":{"components/ProjectsComponent.html":{},"coverage.html":{}}}],["src/app/project/containers/projects/projects.component.ts:15",{"_index":1228,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["src/app/project/containers/projects/projects.component.ts:16",{"_index":1229,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["src/app/project/containers/projects/projects.component.ts:17",{"_index":1223,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["src/app/project/containers/projects/projects.component.ts:21",{"_index":1227,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["src/app/project/containers/projects/projects.component.ts:26",{"_index":1226,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["src/app/project/containers/projects/projects.component.ts:30",{"_index":1225,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["src/app/project/models/project.ts",{"_index":1190,"title":{},"body":{"classes/Project.html":{},"coverage.html":{}}}],["src/app/project/models/project.ts:2",{"_index":1197,"title":{},"body":{"classes/Project.html":{}}}],["src/app/project/models/project.ts:3",{"_index":1199,"title":{},"body":{"classes/Project.html":{}}}],["src/app/project/models/project.ts:4",{"_index":1201,"title":{},"body":{"classes/Project.html":{}}}],["src/app/project/models/project.ts:5",{"_index":1196,"title":{},"body":{"classes/Project.html":{}}}],["src/app/project/models/project.ts:6",{"_index":1198,"title":{},"body":{"classes/Project.html":{}}}],["src/app/project/models/project.ts:7",{"_index":1200,"title":{},"body":{"classes/Project.html":{}}}],["src/app/project/models/project.ts:8",{"_index":1195,"title":{},"body":{"classes/Project.html":{}}}],["src/app/project/project",{"_index":1207,"title":{},"body":{"modules/ProjectRoutingModule.html":{}}}],["src/app/project/project.module.ts",{"_index":1205,"title":{},"body":{"modules/ProjectModule.html":{}}}],["src/app/project/services/project.service.ts",{"_index":1208,"title":{},"body":{"injectables/ProjectService.html":{},"coverage.html":{}}}],["src/app/project/services/project.service.ts:14",{"_index":1211,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/project/services/project.service.ts:18",{"_index":1213,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/project/services/project.service.ts:22",{"_index":1212,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/shared/components/drop",{"_index":771,"title":{},"body":{"components/DropDownComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/toast/toast.component.ts",{"_index":1251,"title":{},"body":{"components/ToastComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/toast/toast.component.ts:25",{"_index":1257,"title":{},"body":{"components/ToastComponent.html":{}}}],["src/app/shared/components/toast/toast.component.ts:26",{"_index":1261,"title":{},"body":{"components/ToastComponent.html":{}}}],["src/app/shared/components/toast/toast.component.ts:27",{"_index":1259,"title":{},"body":{"components/ToastComponent.html":{}}}],["src/app/shared/helpers/error.interceptor.ts",{"_index":867,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"coverage.html":{}}}],["src/app/shared/helpers/error.interceptor.ts:11",{"_index":874,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/shared/helpers/error.interceptor.ts:8",{"_index":870,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/shared/helpers/jwt.interceptor.ts",{"_index":930,"title":{},"body":{"interceptors/JwtInterceptor.html":{},"coverage.html":{}}}],["src/app/shared/helpers/jwt.interceptor.ts:11",{"_index":934,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["src/app/shared/helpers/jwt.interceptor.ts:7",{"_index":932,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["src/app/shared/services/toast.service.ts",{"_index":1268,"title":{},"body":{"injectables/ToastService.html":{},"coverage.html":{}}}],["src/app/shared/services/toast.service.ts:10",{"_index":1291,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/shared/services/toast.service.ts:12",{"_index":1276,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/shared/services/toast.service.ts:16",{"_index":1273,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/shared/services/toast.service.ts:20",{"_index":1289,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/shared/services/toast.service.ts:29",{"_index":1281,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/shared/shared.module.ts",{"_index":1242,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/user/containers/users/users.component.ts",{"_index":1322,"title":{},"body":{"components/UsersComponent.html":{},"coverage.html":{}}}],["src/app/user/containers/users/users.component.ts:21",{"_index":1337,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/user/containers/users/users.component.ts:23",{"_index":1340,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/user/containers/users/users.component.ts:24",{"_index":1338,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/user/containers/users/users.component.ts:26",{"_index":1341,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/user/containers/users/users.component.ts:27",{"_index":1339,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/user/containers/users/users.component.ts:28",{"_index":1342,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/user/containers/users/users.component.ts:30",{"_index":1326,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/user/containers/users/users.component.ts:39",{"_index":1333,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/user/containers/users/users.component.ts:49",{"_index":1328,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/user/containers/users/users.component.ts:55",{"_index":1327,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/user/containers/users/users.component.ts:61",{"_index":1335,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/user/containers/users/users.component.ts:69",{"_index":1334,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/user/containers/users/users.component.ts:77",{"_index":1336,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/user/containers/users/users.component.ts:83",{"_index":1332,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/user/containers/users/users.component.ts:87",{"_index":1331,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/user/containers/users/users.component.ts:91",{"_index":1329,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/user/models/user.ts",{"_index":1300,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/user/models/user.ts:2",{"_index":1301,"title":{},"body":{"classes/User.html":{}}}],["src/app/user/models/user.ts:3",{"_index":1302,"title":{},"body":{"classes/User.html":{}}}],["src/app/user/services/user.service.ts",{"_index":1310,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/user/services/user.service.ts:14",{"_index":1313,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/user/services/user.service.ts:18",{"_index":1316,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/user/services/user.service.ts:22",{"_index":1314,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/user/user",{"_index":1308,"title":{},"body":{"modules/UserRoutingModule.html":{}}}],["src/app/user/user.module.ts",{"_index":1306,"title":{},"body":{"modules/UserModule.html":{}}}],["src/environments/environment.mock",{"_index":1383,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.mock.ts",{"_index":1385,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":1386,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1387,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1388,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":1437,"title":{},"body":{"index.html":{}}}],["started",{"_index":1413,"title":{"index.html":{}},"body":{}}],["state",{"_index":23,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["state.url",{"_index":243,"title":{},"body":{"guards/AuthGuard.html":{}}}],["statements",{"_index":1351,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":1086,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["string",{"_index":223,"title":{},"body":{"interfaces/AuthData.html":{},"interfaces/AuthResponse.html":{},"classes/Client.html":{},"components/ClientsComponent.html":{},"classes/Config.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"classes/Project.html":{},"injectables/ToastService.html":{},"classes/User.html":{},"components/UsersComponent.html":{}}}],["strings",{"_index":77,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/UsersComponent.html":{}}}],["style",{"_index":820,"title":{},"body":{"components/DropDownComponent.html":{}}}],["styles",{"_index":610,"title":{},"body":{"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/NavbarComponent.html":{}}}],["styles.scss",{"_index":704,"title":{},"body":{"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/NavbarComponent.html":{}}}],["styleurls",{"_index":80,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/UsersComponent.html":{}}}],["subscribe",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{},"components/ConfigsComponent.html":{},"components/LoginComponent.html":{}}}],["success",{"_index":1290,"title":{},"body":{"injectables/ToastService.html":{}}}],["support",{"_index":1442,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1443,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1005,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["system_admin",{"_index":1410,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["t",{"_index":1295,"title":{},"body":{"injectables/ToastService.html":{}}}],["table",{"_index":613,"title":{},"body":{"components/ConfigsTableComponent.html":{},"coverage.html":{}}}],["table'},{'name",{"_index":101,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{}}}],["table.component",{"_index":465,"title":{},"body":{"modules/ConfigModule.html":{}}}],["table.component.html",{"_index":615,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["table.component.scss",{"_index":614,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["table.component.ts",{"_index":612,"title":{},"body":{"components/ConfigsTableComponent.html":{},"coverage.html":{}}}],["table.component.ts:118",{"_index":642,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["table.component.ts:12",{"_index":655,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["table.component.ts:13",{"_index":638,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["table.component.ts:14",{"_index":637,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["table.component.ts:15",{"_index":640,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["table.component.ts:16",{"_index":656,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["table.component.ts:17",{"_index":636,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["table.component.ts:23",{"_index":647,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["table.component.ts:27",{"_index":643,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["table.component.ts:40",{"_index":644,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["table.component.ts:49",{"_index":658,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["table.component.ts:53",{"_index":641,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["table.component.ts:58",{"_index":654,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["table.component.ts:63",{"_index":651,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["table.component.ts:67",{"_index":646,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["table.component.ts:74",{"_index":652,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["table.component.ts:79",{"_index":650,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["table.component.ts:93",{"_index":649,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["table/configs",{"_index":464,"title":{},"body":{"modules/ConfigModule.html":{},"components/ConfigsTableComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1391,"title":{},"body":{"coverage.html":{}}}],["table{border",{"_index":731,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["td",{"_index":743,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["template",{"_index":58,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{}}}],["templateref",{"_index":1262,"title":{},"body":{"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["templateurl",{"_index":71,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{}}}],["tempobject",{"_index":500,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/UsersComponent.html":{}}}],["tempobject.client",{"_index":504,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/UsersComponent.html":{}}}],["tempobject.project",{"_index":502,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/UsersComponent.html":{}}}],["text",{"_index":844,"title":{},"body":{"components/DropDownComponent.html":{},"components/NavbarComponent.html":{},"injectables/ToastService.html":{}}}],["textortpl",{"_index":1277,"title":{},"body":{"injectables/ToastService.html":{}}}],["th",{"_index":735,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["thead",{"_index":734,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["then((data",{"_index":383,"title":{},"body":{"injectables/ClientService.html":{},"injectables/ConfigService.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{}}}],["this.activatedroute.queryparams.pipe(first()).subscribe(params",{"_index":961,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.activatedroute.snapshot.queryparams",{"_index":501,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/UsersComponent.html":{}}}],["this.activatedroute.snapshot.queryparams.client",{"_index":497,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/UsersComponent.html":{}}}],["this.activatedroute.snapshot.queryparams.project",{"_index":433,"title":{},"body":{"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/UsersComponent.html":{}}}],["this.activatedroute.snapshot.queryparams.user",{"_index":593,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["this.authenticationservice.currentuservalue",{"_index":935,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["this.authservice.authorize",{"_index":976,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.currentdecodeduservalue",{"_index":966,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["this.authservice.currentuser.subscribe",{"_index":1126,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.authservice.currentuservalue",{"_index":239,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.authservice.isadmin",{"_index":47,"title":{},"body":{"guards/AdminGuard.html":{},"components/NavbarComponent.html":{}}}],["this.authservice.logout",{"_index":884,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/NavbarComponent.html":{}}}],["this.authservice.processlogin(code).pipe(first",{"_index":965,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.change.emit(item",{"_index":809,"title":{},"body":{"components/DropDownComponent.html":{}}}],["this.clientid",{"_index":496,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/UsersComponent.html":{}}}],["this.clientid}}).then",{"_index":923,"title":{},"body":{"components/GlobalConfigsComponent.html":{}}}],["this.clients",{"_index":442,"title":{},"body":{"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/UsersComponent.html":{}}}],["this.clientservice.getallclients",{"_index":443,"title":{},"body":{"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/UsersComponent.html":{}}}],["this.configform",{"_index":674,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["this.configform.get('config",{"_index":664,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["this.configobject",{"_index":666,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["this.configs",{"_index":601,"title":{},"body":{"components/ConfigsComponent.html":{},"components/GlobalConfigsComponent.html":{}}}],["this.configservice.getconfigbyprojectidclientid(this.projectid",{"_index":602,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["this.configservice.getglobalconfigbyclientid(this.clientid",{"_index":924,"title":{},"body":{"components/GlobalConfigsComponent.html":{}}}],["this.configservice.postconfigbyprojectidandclientid(this.projectid",{"_index":608,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["this.configservice.postconfigbyprojectidandclientidanduserid(this.projectid",{"_index":606,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["this.configservice.postglobalconfigbyclientid(this.clientid",{"_index":925,"title":{},"body":{"components/GlobalConfigsComponent.html":{}}}],["this.currentdecodeduservalue",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentdecodeduservalue.role",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentuser",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["this.currentusersubject",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentusersubject.asobservable",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentusersubject.next(null",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentusersubject.next(user",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentusersubject.value",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentuservalue",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.data.find(d",{"_index":804,"title":{},"body":{"components/DropDownComponent.html":{}}}],["this.eref.nativeelement.contains(event.target",{"_index":812,"title":{},"body":{"components/DropDownComponent.html":{}}}],["this.error",{"_index":975,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.fb.array",{"_index":675,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["this.fb.group",{"_index":668,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["this.getallclientsobservable().topromise",{"_index":382,"title":{},"body":{"injectables/ClientService.html":{}}}],["this.getallprojectsobservable().topromise",{"_index":1215,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.getclients",{"_index":498,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/UsersComponent.html":{}}}],["this.getconfigbyprojectidclientidobservable(projectid",{"_index":552,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.getconfigformvalue().config",{"_index":690,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["this.getconfigs",{"_index":676,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["this.getglobalconfigbyclientidobservable(clientid).topromise",{"_index":539,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.getprojects",{"_index":435,"title":{},"body":{"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/UsersComponent.html":{}}}],["this.getusers",{"_index":597,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["this.getusersbyprojectidobservable(projectid).topromise",{"_index":1318,"title":{},"body":{"injectables/UserService.html":{}}}],["this.global",{"_index":681,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["this.head",{"_index":803,"title":{},"body":{"components/DropDownComponent.html":{}}}],["this.headisactive",{"_index":808,"title":{},"body":{"components/DropDownComponent.html":{}}}],["this.http.get(`${environment.authapi}/authorize?client_id=${environment.clientid}&response_type=code&redirect_uri=${environment.authcallback",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.get(`${environment.backendurl}/clients",{"_index":380,"title":{},"body":{"injectables/ClientService.html":{}}}],["this.http.get(`${environment.backendurl}/global/config/${clientid",{"_index":538,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.http.get(`${environment.backendurl}/projects",{"_index":1214,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.http.get(`${environment.backendurl}/projects/${projectid}/users",{"_index":1317,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(`/api/projects/${projectid}/config/${clientid",{"_index":551,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.http.post(`${environment.authapi}/token",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(`/api/global/config/${clientid",{"_index":556,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.http.post(`/api/projects/${projectid}/config/${clientid",{"_index":558,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.http.post(`/api/projects/${projectid}/users/${userid}/config/${clientid",{"_index":559,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.initialize",{"_index":662,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["this.isadmin",{"_index":1127,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.isnavmenuactive",{"_index":1129,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.loading",{"_index":441,"title":{},"body":{"components/ClientsComponent.html":{},"components/ConfigsComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LoginComponent.html":{},"components/ProjectsComponent.html":{},"components/UsersComponent.html":{}}}],["this.projectid",{"_index":432,"title":{},"body":{"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/UsersComponent.html":{}}}],["this.projects",{"_index":434,"title":{},"body":{"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ProjectsComponent.html":{},"components/UsersComponent.html":{}}}],["this.projectservice.getallprojects",{"_index":438,"title":{},"body":{"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ProjectsComponent.html":{},"components/UsersComponent.html":{}}}],["this.route.snapshot.queryparams",{"_index":678,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["this.router.navigate(['/clients",{"_index":440,"title":{},"body":{"components/ClientsComponent.html":{},"components/ConfigsTableComponent.html":{}}}],["this.router.navigate(['/configs",{"_index":503,"title":{},"body":{"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/UsersComponent.html":{}}}],["this.router.navigate(['/global",{"_index":682,"title":{},"body":{"components/ConfigsTableComponent.html":{},"components/GlobalConfigsComponent.html":{}}}],["this.router.navigate(['/login",{"_index":1130,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.router.navigate(['login",{"_index":240,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.navigate(['projects",{"_index":50,"title":{},"body":{"guards/AdminGuard.html":{}}}],["this.router.navigatebyurl('admin",{"_index":971,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigatebyurl('projects",{"_index":970,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigatebyurl(returnurl",{"_index":968,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.save.emit(this.configform.value",{"_index":673,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["this.selected",{"_index":805,"title":{},"body":{"components/DropDownComponent.html":{}}}],["this.show(customtpl",{"_index":1298,"title":{},"body":{"injectables/ToastService.html":{}}}],["this.show(message",{"_index":1296,"title":{},"body":{"injectables/ToastService.html":{}}}],["this.toasts",{"_index":1293,"title":{},"body":{"injectables/ToastService.html":{}}}],["this.toasts.filter(t",{"_index":1294,"title":{},"body":{"injectables/ToastService.html":{}}}],["this.toasts.push",{"_index":1292,"title":{},"body":{"injectables/ToastService.html":{}}}],["this.toastservice.showerror('id",{"_index":806,"title":{},"body":{"components/DropDownComponent.html":{}}}],["this.toastservice.showerror(e",{"_index":392,"title":{},"body":{"injectables/ClientService.html":{},"injectables/ConfigService.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{}}}],["this.toastservice.showsuccess('clients",{"_index":389,"title":{},"body":{"injectables/ClientService.html":{}}}],["this.toastservice.showsuccess('projects",{"_index":1220,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.toastservice.showsuccess(`configurations",{"_index":550,"title":{},"body":{"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{}}}],["this.toastservice.showsuccess(`global",{"_index":927,"title":{},"body":{"components/GlobalConfigsComponent.html":{}}}],["this.toastservice.showsuccess(`users",{"_index":1321,"title":{},"body":{"injectables/UserService.html":{}}}],["this.updateclients",{"_index":436,"title":{},"body":{"components/ClientsComponent.html":{},"components/GlobalClientsComponent.html":{}}}],["this.updateconfigs",{"_index":599,"title":{},"body":{"components/ConfigsComponent.html":{},"components/GlobalConfigsComponent.html":{}}}],["this.updateenabled",{"_index":677,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["this.updateusers",{"_index":1344,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.userid",{"_index":592,"title":{},"body":{"components/ConfigsComponent.html":{}}}],["this.users",{"_index":596,"title":{},"body":{"components/ConfigsComponent.html":{},"components/UsersComponent.html":{}}}],["this.userservice.getusersbyprojectid(this.projectid",{"_index":600,"title":{},"body":{"components/ConfigsComponent.html":{},"components/UsersComponent.html":{}}}],["throwerror",{"_index":878,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/MockInterceptor.html":{}}}],["throwerror(error",{"_index":888,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["title",{"_index":839,"title":{},"body":{"components/DropDownComponent.html":{},"components/NavbarComponent.html":{}}}],["toast",{"_index":1260,"title":{},"body":{"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["toast.component.html",{"_index":1254,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast.textortpl",{"_index":1263,"title":{},"body":{"components/ToastComponent.html":{}}}],["toastcomponent",{"_index":120,"title":{"components/ToastComponent.html":{}},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"modules/SharedModule.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["toasts",{"_index":1253,"title":{},"body":{"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["toasts'},{'name",{"_index":121,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{}}}],["toastservice",{"_index":374,"title":{"injectables/ToastService.html":{}},"body":{"injectables/ClientService.html":{},"components/ConfigSelectionPageComponent.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"components/DropDownComponent.html":{},"components/GlobalConfigsComponent.html":{},"injectables/ProjectService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["todo",{"_index":232,"title":{},"body":{"interfaces/AuthData.html":{},"interfaces/AuthResponse.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{}}}],["toggle",{"_index":863,"title":{},"body":{"components/DropDownComponent.html":{}}}],["toggler",{"_index":1156,"title":{},"body":{"components/NavbarComponent.html":{}}}],["token",{"_index":221,"title":{},"body":{"interfaces/AuthData.html":{},"interfaces/AuthResponse.html":{},"interceptors/MockInterceptor.html":{},"miscellaneous/variables.html":{}}}],["token_type",{"_index":231,"title":{},"body":{"interfaces/AuthData.html":{},"interfaces/AuthResponse.html":{}}}],["top",{"_index":721,"title":{},"body":{"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/NavbarComponent.html":{}}}],["top:0",{"_index":1142,"title":{},"body":{"components/NavbarComponent.html":{}}}],["tr",{"_index":740,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["transform",{"_index":1174,"title":{},"body":{"components/NavbarComponent.html":{}}}],["transparent",{"_index":1159,"title":{},"body":{"components/NavbarComponent.html":{}}}],["tree",{"_index":60,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{}}}],["true",{"_index":49,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"components/ClientsComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{},"components/ProjectsComponent.html":{},"modules/SharedModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1402,"title":{},"body":{"dependencies.html":{}}}],["tslint:disable",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{},"components/ConfigsComponent.html":{},"components/DropDownComponent.html":{},"interceptors/MockInterceptor.html":{},"components/ToastComponent.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":19,"title":{},"body":{"guards/AdminGuard.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"classes/Client.html":{},"injectables/ClientService.html":{},"components/ClientsComponent.html":{},"classes/Config.html":{},"components/ConfigSelectionPageComponent.html":{},"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{},"components/NavbarComponent.html":{},"classes/Project.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["u.id",{"_index":1070,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["ubw9aobgiv7zw7we1tpldpwdcd",{"_index":1483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ul,li{margin:0;padding:0;list",{"_index":819,"title":{},"body":{"components/DropDownComponent.html":{}}}],["unauthorized",{"_index":1032,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["updateclients",{"_index":407,"title":{},"body":{"components/ClientsComponent.html":{},"components/GlobalClientsComponent.html":{}}}],["updateconfigs",{"_index":565,"title":{},"body":{"components/ConfigsComponent.html":{},"components/GlobalConfigsComponent.html":{}}}],["updateenabled",{"_index":617,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["updateusers",{"_index":1324,"title":{},"body":{"components/UsersComponent.html":{}}}],["uppercase",{"_index":1175,"title":{},"body":{"components/NavbarComponent.html":{}}}],["url",{"_index":996,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["url.endswith('/api/clients",{"_index":1008,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["url.endswith('/api/projects",{"_index":1007,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["url.match(/\\/api\\/global\\/config",{"_index":1015,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["url.match(/\\/api\\/projects\\/[a",{"_index":1009,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["url.split",{"_index":1095,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["url.startswith(`${environment.authapi}/authorize?client_id=${environment.clientid}&response_type=code&redirect_uri=${environment.authcallback",{"_index":1019,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["url.startswith(`${environment.authapi}/researcher",{"_index":1021,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["url.startswith(`${environment.authapi}/token",{"_index":1024,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["urlencoded",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{}}}],["urlparts",{"_index":1094,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["urlparts[urlparts.length",{"_index":1097,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["urltree",{"_index":31,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["usage",{"_index":1436,"title":{},"body":{"index.html":{}}}],["use",{"_index":1102,"title":{},"body":{"interceptors/MockInterceptor.html":{},"miscellaneous/variables.html":{}}}],["useclass",{"_index":1108,"title":{},"body":{"interceptors/MockInterceptor.html":{},"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["used",{"_index":233,"title":{},"body":{"interfaces/AuthData.html":{},"interfaces/AuthResponse.html":{}}}],["user",{"_index":222,"title":{"classes/User.html":{}},"body":{"interfaces/AuthData.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConfigsComponent.html":{},"interceptors/MockInterceptor.html":{},"components/NavbarComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["user.access_token",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.id",{"_index":1347,"title":{},"body":{"components/UsersComponent.html":{}}}],["user.name",{"_index":1346,"title":{},"body":{"components/UsersComponent.html":{}}}],["user.projects",{"_index":1038,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["user.projects.map(projectid",{"_index":1040,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["userid",{"_index":533,"title":{},"body":{"injectables/ConfigService.html":{},"components/ConfigsComponent.html":{},"components/UsersComponent.html":{}}}],["userid)[0",{"_index":1071,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["usermodule",{"_index":154,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{}}}],["userroutingmodule",{"_index":155,"title":{"modules/UserRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["users",{"_index":123,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"modules/UserRoutingModule.html":{},"components/UsersComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["users.component.html",{"_index":1323,"title":{},"body":{"components/UsersComponent.html":{}}}],["users.component.scss",{"_index":1343,"title":{},"body":{"components/UsersComponent.html":{}}}],["users.users[0",{"_index":995,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["users.users[1",{"_index":1028,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["userscomponent",{"_index":122,"title":{"components/UsersComponent.html":{}},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["userservice",{"_index":567,"title":{"injectables/UserService.html":{}},"body":{"components/ConfigsComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["userslist",{"_index":1067,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["usersofselectedproject",{"_index":1065,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["usersofselectedproject.map(userid",{"_index":1068,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["usevalue",{"_index":190,"title":{},"body":{"modules/AppModule.html":{}}}],["uss",{"_index":1464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["value",{"_index":76,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/ClientsComponent.html":{},"classes/Config.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"interceptors/MockInterceptor.html":{},"components/NavbarComponent.html":{},"components/ProjectsComponent.html":{},"injectables/ToastService.html":{},"components/UsersComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":88,"title":{},"body":{"components/AdminSelectionPageComponent.html":{},"components/AppComponent.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ToastComponent.html":{},"components/UsersComponent.html":{}}}],["variable",{"_index":1083,"title":{},"body":{"interceptors/MockInterceptor.html":{},"coverage.html":{}}}],["variables",{"_index":1451,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1418,"title":{},"body":{"index.html":{}}}],["visited",{"_index":1161,"title":{},"body":{"components/NavbarComponent.html":{}}}],["void",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{},"components/ClientsComponent.html":{},"components/ConfigSelectionPageComponent.html":{},"components/ConfigsComponent.html":{},"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/GlobalClientsComponent.html":{},"components/GlobalConfigsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProjectsComponent.html":{},"injectables/ToastService.html":{},"components/UsersComponent.html":{}}}],["weight",{"_index":1172,"title":{},"body":{"components/NavbarComponent.html":{}}}],["white",{"_index":840,"title":{},"body":{"components/DropDownComponent.html":{},"components/NavbarComponent.html":{}}}],["width",{"_index":712,"title":{},"body":{"components/ConfigsTableComponent.html":{},"components/DropDownComponent.html":{},"components/FooterComponent.html":{},"components/NavbarComponent.html":{}}}],["window.location.href",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/MockInterceptor.html":{}}}],["wrap",{"_index":710,"title":{},"body":{"components/ConfigsTableComponent.html":{}}}],["wrapper",{"_index":707,"title":{},"body":{"components/ConfigsTableComponent.html":{},"components/NavbarComponent.html":{}}}],["www",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{}}}],["z",{"_index":853,"title":{},"body":{"components/DropDownComponent.html":{},"components/NavbarComponent.html":{}}}],["z0",{"_index":1011,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["za",{"_index":1010,"title":{},"body":{"interceptors/MockInterceptor.html":{}}}],["zone.js",{"_index":1404,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ClientModule.html":{},"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"modules/ProjectModule.html":{},"modules/SharedModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"guards/AdminGuard.html":{"url":"guards/AdminGuard.html","title":"guard - AdminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth/helpers/admin.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/helpers/admin.guard.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/helpers/admin.guard.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport {AuthService} from '@app/auth/services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AdminGuard implements CanActivate {\n\n  constructor(private router: Router, private authService: AuthService) { }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean | UrlTree {\n    const isAdmin = this.authService.isAdmin;\n    if (isAdmin) {\n      return true;\n    }\n\n    this.router.navigate(['projects']);\n    return false;\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminSelectionPageComponent.html":{"url":"components/AdminSelectionPageComponent.html","title":"component - AdminSelectionPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdminSelectionPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/containers/admin-selection-page/admin-selection-page.component.ts\n\n\n    \n        Description\n    \n    \n        Admin Selection Page Component\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin-selection-page\n            \n\n\n\n\n            \n                templateUrl\n                ./admin-selection-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                __\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            __\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : strings\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/containers/admin-selection-page/admin-selection-page.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport strings from '@i18n/strings.json';\n\n/**\n * Admin Selection Page Component\n */\n@Component({\n  selector: 'app-admin-selection-page',\n  templateUrl: './admin-selection-page.component.html',\n  // styleUrls: ['./admin-selection-page.component.scss']\n})\nexport class AdminSelectionPageComponent {\n  __ = strings;\n}\n\n    \n\n    \n        \n  \n    \n      {{__.globalConfigurations}}\n    \n    \n      {{__.allProjects}}\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{__.globalConfigurations}}              {{__.allProjects}}      '\n    var COMPONENTS = [{'name': 'AdminSelectionPageComponent', 'selector': 'app-admin-selection-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ClientsComponent', 'selector': 'app-clients'},{'name': 'ConfigsComponent', 'selector': 'app-configs'},{'name': 'ConfigSelectionPageComponent', 'selector': 'app-config-selection-page'},{'name': 'ConfigsTableComponent', 'selector': 'app-configs-table'},{'name': 'DropDownComponent', 'selector': 'app-dropdown'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalClientsComponent', 'selector': 'app-global-clients'},{'name': 'GlobalConfigsComponent', 'selector': 'app-global-configs'},{'name': 'LeftSidebarComponent', 'selector': 'app-left-sidebar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ToastComponent', 'selector': 'app-toasts'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminSelectionPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  // styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {}\n\n    \n\n    \n        \n\n  \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AdminSelectionPageComponent', 'selector': 'app-admin-selection-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ClientsComponent', 'selector': 'app-clients'},{'name': 'ConfigsComponent', 'selector': 'app-configs'},{'name': 'ConfigSelectionPageComponent', 'selector': 'app-config-selection-page'},{'name': 'ConfigsTableComponent', 'selector': 'app-configs-table'},{'name': 'DropDownComponent', 'selector': 'app-dropdown'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalClientsComponent', 'selector': 'app-global-clients'},{'name': 'GlobalConfigsComponent', 'selector': 'app-global-configs'},{'name': 'LeftSidebarComponent', 'selector': 'app-left-sidebar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ToastComponent', 'selector': 'app-toasts'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAppModule -->\n\nAuthRoutingModule->AppModule\n\n\n\n\n\nClientModule\n\nClientModule\n\nAppModule -->\n\nClientModule->AppModule\n\n\n\n\n\nClientRoutingModule\n\nClientRoutingModule\n\nAppModule -->\n\nClientRoutingModule->AppModule\n\n\n\n\n\nConfigModule\n\nConfigModule\n\nAppModule -->\n\nConfigModule->AppModule\n\n\n\n\n\nConfigRoutingModule\n\nConfigRoutingModule\n\nAppModule -->\n\nConfigRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nCoreRoutingModule\n\nCoreRoutingModule\n\nAppModule -->\n\nCoreRoutingModule->AppModule\n\n\n\n\n\nMockModule\n\nMockModule\n\nAppModule -->\n\nMockModule->AppModule\n\n\n\n\n\nProjectModule\n\nProjectModule\n\nAppModule -->\n\nProjectModule->AppModule\n\n\n\n\n\nProjectRoutingModule\n\nProjectRoutingModule\n\nAppModule -->\n\nProjectRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserRoutingModule\n\nUserRoutingModule\n\nAppModule -->\n\nUserRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            AuthRoutingModule\n                        \n                        \n                            ClientModule\n                        \n                        \n                            ClientRoutingModule\n                        \n                        \n                            ConfigModule\n                        \n                        \n                            ConfigRoutingModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            CoreRoutingModule\n                        \n                        \n                            MockModule\n                        \n                        \n                            ProjectModule\n                        \n                        \n                            ProjectRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                        \n                            UserModule\n                        \n                        \n                            UserRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AuthModule } from './auth/auth.module';\nimport { MatIconModule } from '@angular/material/icon';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CoreModule } from '@app/core/core.module';\nimport { SharedModule } from '@app/shared/shared.module';\nimport {AuthRoutingModule} from '@app/auth/auth-routing.module';\nimport {ProjectModule} from '@app/project/project.module';\nimport {CoreRoutingModule} from '@app/core/core-routing.module';\nimport {ProjectRoutingModule} from '@app/project/project-routing.module';\nimport {ClientRoutingModule} from '@app/client/client-routing.module';\nimport {ClientModule} from '@app/client/client.module';\nimport {ConfigRoutingModule} from '@app/config/config-routing.module';\nimport {ConfigModule} from '@app/config/config.module';\nimport {UserModule} from '@app/user/user.module';\nimport {UserRoutingModule} from '@app/user/user-routing.module';\nimport {MockModule} from '@app/mock/mock.module';\nimport {APP_BASE_HREF} from \"@angular/common\";\nimport {environment} from \"@environments/environment\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    SharedModule,\n    MockModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatIconModule,\n    AuthModule,\n    CoreModule,\n    ProjectModule,\n    ClientModule,\n    UserModule,\n    ConfigModule,\n    ConfigRoutingModule,\n    CoreRoutingModule,\n    UserRoutingModule,\n    ClientRoutingModule,\n    ProjectRoutingModule,\n    AuthRoutingModule,\n    AppRoutingModule,\n  ],\n  providers: [\n    { provide: APP_BASE_HREF, useValue: environment.baseURL },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitleText\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo() {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n\n  getTitleText() {\n    return element(by.css('app-root .content span')).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PageNotFoundComponent } from '@app/core/containers/page-not-found/page-not-found.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: '/login',\n    pathMatch: 'full'\n  },\n  {\n    path: '**',\n    component: PageNotFoundComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthData.html":{"url":"interfaces/AuthData.html","title":"interface - AuthData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/models/auth.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        token\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { User } from './user';\n\nexport interface AuthResponse {\n  access_token: string;\n  expires_in: number;\n  iat: number;\n  iss: string;\n  jti: string;\n  token_type: string;\n}\n\n// TODO Not used?\nexport interface AuthData {\n  token: string;\n  user: User;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth/helpers/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/helpers/auth.guard.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/helpers/auth.guard.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport {AuthService} from '@app/auth/services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthGuard implements CanActivate {\n\n  constructor(private router: Router, private authService: AuthService) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean | UrlTree {\n\n    const currentUser = this.authService.currentUserValue;\n    if (currentUser) {\n      return true;\n    }\n\n    this.router.navigate(['login'], { queryParams: { returnUrl: state.url } });\n    return false;\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nAuthModule->LoginComponent \n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoginComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthRoutingModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LoginComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './containers/login/login.component';\nimport { HttpClientModule} from '@angular/common/http';\nimport { AuthRoutingModule } from '@app/auth/auth-routing.module';\n\n@NgModule({\n  declarations: [LoginComponent],\n  exports: [\n    LoginComponent\n  ],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    AuthRoutingModule\n  ],\n  providers: [],\n})\nexport class AuthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthResponse.html":{"url":"interfaces/AuthResponse.html","title":"interface - AuthResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/models/auth.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        access_token\n                                \n                                \n                                        expires_in\n                                \n                                \n                                        iat\n                                \n                                \n                                        iss\n                                \n                                \n                                        jti\n                                \n                                \n                                        token_type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        access_token\n                                    \n                                \n                                \n                                    \n                                        access_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expires_in\n                                    \n                                \n                                \n                                    \n                                        expires_in:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iat\n                                    \n                                \n                                \n                                    \n                                        iat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iss\n                                    \n                                \n                                \n                                    \n                                        iss:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jti\n                                    \n                                \n                                \n                                    \n                                        jti:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token_type\n                                    \n                                \n                                \n                                    \n                                        token_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { User } from './user';\n\nexport interface AuthResponse {\n  access_token: string;\n  expires_in: number;\n  iat: number;\n  iss: string;\n  jti: string;\n  token_type: string;\n}\n\n// TODO Not used?\nexport interface AuthData {\n  token: string;\n  user: User;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthRoutingModule.html":{"url":"modules/AuthRoutingModule.html","title":"module - AuthRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {LoginComponent} from '@app/auth/containers/login/login.component';\n\nconst routes: Routes = [\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/services/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentUser\n                            \n                            \n                                    Private\n                                currentUserSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authorize\n                            \n                            \n                                logout\n                            \n                            \n                                processLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    currentUserValue\n                                \n                                \n                                    isAdmin\n                                \n                                \n                                    currentDecodedUserValue\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/services/auth.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            authorize\n                        \n                        \n                    \n                \n            \n            \n                \nauthorize()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/services/auth.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/services/auth.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            processLogin\n                        \n                        \n                    \n                \n            \n            \n                \nprocessLogin(authCode: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/services/auth.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authCode\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/services/auth.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentUserSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BehaviorSubject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/services/auth.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        currentUserValue\n                    \n                \n\n                \n                    \n                        getcurrentUserValue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/services/auth.service.ts:24\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isAdmin\n                    \n                \n\n                \n                    \n                        getisAdmin()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/services/auth.service.ts:28\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        currentDecodedUserValue\n                    \n                \n\n                \n                    \n                        getcurrentDecodedUserValue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/services/auth.service.ts:33\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {map} from 'rxjs/operators';\nimport * as jwt_decode from 'jwt-decode';\nimport {AuthResponse} from '@app/auth/models/auth';\nimport {Roles} from '@app/auth/enums/roles.enum';\nimport {User} from '@app/auth/models/user';\nimport {environment} from '@environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private currentUserSubject: BehaviorSubject;\n  public currentUser: Observable;\n\n  constructor(private http: HttpClient) {\n    this.currentUserSubject = new BehaviorSubject(JSON.parse(localStorage.getItem('currentUser')));\n    this.currentUser = this.currentUserSubject.asObservable();\n  }\n\n  public get currentUserValue(): AuthResponse {\n    return this.currentUserSubject.value;\n  }\n\n  public get isAdmin(): boolean {\n    if (this.currentDecodedUserValue) { return this.currentDecodedUserValue.role === Roles.SYSTEM_ADMIN; }\n    return false;\n  }\n\n  public get currentDecodedUserValue(): User {\n    const currentUser = this.currentUserValue;\n    const isLoggedIn = Boolean(currentUser && currentUser.access_token);\n\n    if (isLoggedIn) {\n      const jwtDecoded = jwt_decode(currentUser.access_token);\n      return {username: jwtDecoded.user_name, role: jwtDecoded.authorities[0] };\n    }\n    return null;\n  }\n\n  logout() {\n    localStorage.removeItem('currentUser');\n    this.currentUserSubject.next(null);\n  }\n\n  processLogin(authCode: any) {\n    const payload = new HttpParams()\n      .append('grant_type', 'authorization_code')\n      .append('code', authCode)\n      .append('redirect_uri', environment.authCallback)\n      .append('client_id', environment.clientId);\n    return this.http.post(`${environment.authAPI}/token`, payload, {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      }\n    }).pipe(map((user: AuthResponse) => {\n      if (user && user.access_token) {\n        localStorage.setItem('currentUser', JSON.stringify(user));\n        this.currentUserSubject.next(user);\n      }\n      return user;\n    }));\n  }\n\n  authorize() {\n    console.log('authorize');\n    if (environment.envName === 'mock' || environment.envName === 'mock-researcher') {\n      // tslint:disable-next-line:max-line-length\n      return this.http.get(`${environment.authAPI}/authorize?client_id=${environment.clientId}&response_type=code&redirect_uri=${environment.authCallback}`)\n        .subscribe();\n    } else {\n      window.location.href =\n        `${environment.authAPI}/authorize?client_id=${environment.clientId}&response_type=code&redirect_uri=${environment.authCallback}`;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Client.html":{"url":"classes/Client.html","title":"class - Client","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Client\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/client/models/client.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clientId\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clientId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/client/models/client.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/client/models/client.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/client/models/client.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Client {\n  id: string;\n  clientId: string;\n  name: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ClientModule.html":{"url":"modules/ClientModule.html","title":"module - ClientModule","body":"\n                   \n\n\n\n\n    Modules\n    ClientModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ClientModule\n\n\n\ncluster_ClientModule_declarations\n\n\n\ncluster_ClientModule_imports\n\n\n\n\nClientsComponent\n\nClientsComponent\n\n\n\nClientModule\n\nClientModule\n\nClientModule -->\n\nClientsComponent->ClientModule\n\n\n\n\n\nGlobalClientsComponent\n\nGlobalClientsComponent\n\nClientModule -->\n\nGlobalClientsComponent->ClientModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nClientModule -->\n\nCoreModule->ClientModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nClientModule -->\n\nSharedModule->ClientModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/client/client.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ClientsComponent\n                        \n                        \n                            GlobalClientsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CoreModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClientsComponent } from './containers/clients/clients.component';\nimport {CoreModule} from '@app/core/core.module';\nimport {RouterModule} from '@angular/router';\nimport {SharedModule} from '@app/shared/shared.module';\nimport { GlobalClientsComponent } from './containers/global-clients/global-clients.component';\n\n@NgModule({\n  declarations: [ClientsComponent, GlobalClientsComponent],\n  imports: [\n    CommonModule,\n    CoreModule,\n    RouterModule,\n    SharedModule\n  ]\n})\nexport class ClientModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ClientRoutingModule.html":{"url":"modules/ClientRoutingModule.html","title":"module - ClientRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ClientRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/client/client-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {ClientsComponent} from '@app/client/containers/clients/clients.component';\nimport {GlobalClientsComponent} from '@app/client/containers/global-clients/global-clients.component';\nimport {AuthGuard, AdminGuard} from '@app/auth/helpers';\n\nconst routes: Routes = [\n  {\n    path: 'clients',\n    component: ClientsComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'global-clients',\n    component: GlobalClientsComponent,\n    canActivate: [AuthGuard, AdminGuard]\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ClientRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ClientService.html":{"url":"injectables/ClientService.html","title":"injectable - ClientService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ClientService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/client/services/client.service.ts\n        \n\n            \n                Description\n            \n            \n                Client Service\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getAllClients\n                            \n                            \n                                    Private\n                                getAllClientsObservable\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/client/services/client.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllClients\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllClients()\n                \n            \n\n\n            \n                \n                    Defined in src/app/client/services/client.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getAllClientsObservable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllClientsObservable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/client/services/client.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable<>\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {Client} from '@app/client/models/client';\nimport {ToastService} from '@app/shared/services/toast.service';\nimport {environment} from \"@environments/environment\";\n\n/**\n * Client Service\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientService {\n\n  constructor(private http: HttpClient, private toastService: ToastService) { }\n\n\n  private getAllClientsObservable(): Observable {\n    return this.http.get(`${environment.backendUrl}/clients`);\n  }\n\n  async getAllClients(): Promise {\n    return await this.getAllClientsObservable().toPromise()\n      .then((data: any) => {\n        const clients: [Client] = data.clients;\n        clients.forEach(c => c.id = c.name = c.clientId);\n        this.toastService.showSuccess('Clients loaded.');\n        return clients;\n      })\n      .catch(e => {\n        this.toastService.showError(e);\n        console.log(e);\n      })\n      .finally(() => {});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ClientsComponent.html":{"url":"components/ClientsComponent.html","title":"component - ClientsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ClientsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/client/containers/clients/clients.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-clients\n            \n\n\n\n\n            \n                templateUrl\n                ./clients.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                __\n                            \n                            \n                                clients\n                            \n                            \n                                loading\n                            \n                            \n                                projectId\n                            \n                            \n                                projects\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getProjects\n                            \n                            \n                                makeBackButton\n                            \n                            \n                                makeQueryParams\n                            \n                            \n                                makeState\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                onProjectChange\n                            \n                            \n                                    Async\n                                updateClients\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(clientService: ClientService, projectService: ProjectService, activatedRoute: ActivatedRoute, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/client/containers/clients/clients.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clientService\n                                                  \n                                                        \n                                                                        ClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getProjects\n                        \n                        \n                    \n                \n            \n            \n                \ngetProjects()\n                \n            \n\n\n            \n                \n                    Defined in src/app/client/containers/clients/clients.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            makeBackButton\n                        \n                        \n                    \n                \n            \n            \n                \nmakeBackButton()\n                \n            \n\n\n            \n                \n                    Defined in src/app/client/containers/clients/clients.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { routerLink: {}; queryParams: string; name: string; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            makeQueryParams\n                        \n                        \n                    \n                \n            \n            \n                \nmakeQueryParams(clientId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/client/containers/clients/clients.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    clientId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { project: any; client: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            makeState\n                        \n                        \n                    \n                \n            \n            \n                \nmakeState()\n                \n            \n\n\n            \n                \n                    Defined in src/app/client/containers/clients/clients.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { projects: [any]; clients: void | [any]; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/client/containers/clients/clients.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onProjectChange\n                        \n                        \n                    \n                \n            \n            \n                \nonProjectChange(d)\n                \n            \n\n\n            \n                \n                    Defined in src/app/client/containers/clients/clients.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    d\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateClients\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateClients()\n                \n            \n\n\n            \n                \n                    Defined in src/app/client/containers/clients/clients.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            __\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : strings\n                        \n                    \n                        \n                            \n                                    Defined in src/app/client/containers/clients/clients.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clients\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :      | void\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/client/containers/clients/clients.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/client/containers/clients/clients.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            projectId\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/client/containers/clients/clients.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            projects\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         [Project]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/client/containers/clients/clients.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {Project} from '@app/project/models/project';\nimport {ProjectService} from '@app/project/services/project.service';\nimport {Client} from '@app/client/models/client';\nimport {ClientService} from '@app/client/services/client.service';\nimport strings from '@i18n/strings.json';\n\n@Component({\n  selector: 'app-clients',\n  templateUrl: './clients.component.html',\n  // styleUrls: ['./clients.component.scss']\n})\n\nexport class ClientsComponent implements OnInit {\n  __ = strings;\n  loading = false;\n  projectId;\n  clients: [Client] | void;\n  projects: [Project];\n\n  constructor(\n    private clientService: ClientService,\n    private projectService: ProjectService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router) {}\n\n  async ngOnInit() {\n    this.projectId = this.activatedRoute.snapshot.queryParams.project;\n    this.projects = await this.getProjects();\n    this.updateClients();\n  }\n\n  getProjects() {\n    if (!this.projectId) { return; }\n    const {projects} = history.state;\n    return (projects ? projects : this.projectService.getAllProjects());\n  }\n\n  onProjectChange(d) {\n    this.updateClients();\n    this.projectId = d.id;\n    this.router.navigate(['/clients'], {queryParams: {project: this.projectId}});\n  }\n\n  async updateClients() {\n    this.loading = true;\n    this.clients = await this.clientService.getAllClients();\n    this.loading = false;\n  }\n\n  makeState() {\n    return {projects: this.projects, clients: this.clients};\n  }\n\n  makeQueryParams(clientId) {\n    return {project: this.projectId, client: clientId};\n  }\n\n  makeBackButton() {\n    if (!this.projectId) { return; }\n    return {routerLink: ['/projects'], queryParams: '', name: 'Projects'};\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n        {{__.project}}:\n        \n      \n    \n    \n      \n        {{__.selectAnApplication}}\n      \n      {{__.loading}}\n      \n        \n          \n            \n              \n                {{client.clientId}}\n              \n            \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      {{__.project}}:                                    {{__.selectAnApplication}}            {{__.loading}}                                                                  {{client.clientId}}                                                        '\n    var COMPONENTS = [{'name': 'AdminSelectionPageComponent', 'selector': 'app-admin-selection-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ClientsComponent', 'selector': 'app-clients'},{'name': 'ConfigsComponent', 'selector': 'app-configs'},{'name': 'ConfigSelectionPageComponent', 'selector': 'app-config-selection-page'},{'name': 'ConfigsTableComponent', 'selector': 'app-configs-table'},{'name': 'DropDownComponent', 'selector': 'app-dropdown'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalClientsComponent', 'selector': 'app-global-clients'},{'name': 'GlobalConfigsComponent', 'selector': 'app-global-configs'},{'name': 'LeftSidebarComponent', 'selector': 'app-left-sidebar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ToastComponent', 'selector': 'app-toasts'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ClientsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Config.html":{"url":"classes/Config.html","title":"class - Config","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Config\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/config/models/config.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clientId\n                            \n                            \n                                config\n                            \n                            \n                                defaults\n                            \n                            \n                                scope\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clientId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/config/models/config.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     [literal type]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/config/models/config.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaults\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     [literal type]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/config/models/config.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scope\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/config/models/config.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Config {\n  clientId: string;\n  scope: string;\n  config: [{\n    name: string;\n    value: string;\n    default: string;\n  }];\n  defaults: [\n    {\n      name: string;\n      value: string;\n      scope: string;\n    }\n  ];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigModule.html":{"url":"modules/ConfigModule.html","title":"module - ConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    ConfigModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_declarations\n\n\n\ncluster_ConfigModule_imports\n\n\n\n\nConfigsComponent\n\nConfigsComponent\n\n\n\nConfigModule\n\nConfigModule\n\nConfigModule -->\n\nConfigsComponent->ConfigModule\n\n\n\n\n\nConfigsTableComponent\n\nConfigsTableComponent\n\nConfigModule -->\n\nConfigsTableComponent->ConfigModule\n\n\n\n\n\nGlobalConfigsComponent\n\nGlobalConfigsComponent\n\nConfigModule -->\n\nGlobalConfigsComponent->ConfigModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nConfigModule -->\n\nCoreModule->ConfigModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nConfigModule -->\n\nSharedModule->ConfigModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/config/config.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ConfigsComponent\n                        \n                        \n                            ConfigsTableComponent\n                        \n                        \n                            GlobalConfigsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CoreModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ConfigsComponent } from './containers/configs/configs.component';\nimport { GlobalConfigsComponent } from './containers/global-configs/global-configs.component';\nimport {RouterModule} from '@angular/router';\nimport {CoreModule} from '@app/core/core.module';\nimport {SharedModule} from '@app/shared/shared.module';\nimport { ConfigsTableComponent } from './containers/configs-table/configs-table.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatIconModule} from '@angular/material';\n\n@NgModule({\n  declarations: [ConfigsComponent, GlobalConfigsComponent, ConfigsTableComponent],\n  imports: [\n    CommonModule,\n    RouterModule,\n    CoreModule,\n    SharedModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatIconModule\n  ]\n})\nexport class ConfigModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigRoutingModule.html":{"url":"modules/ConfigRoutingModule.html","title":"module - ConfigRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ConfigRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/config/config-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {ConfigsComponent} from '@app/config/containers/configs/configs.component';\nimport {GlobalConfigsComponent} from '@app/config/containers/global-configs/global-configs.component';\nimport {AdminGuard, AuthGuard} from '@app/auth/helpers';\n\nconst routes: Routes = [\n  {\n    path: 'configs',\n    component: ConfigsComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'global-configs',\n    component: GlobalConfigsComponent,\n    canActivate: [AuthGuard, AdminGuard]\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ConfigRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfigSelectionPageComponent.html":{"url":"components/ConfigSelectionPageComponent.html","title":"component - ConfigSelectionPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConfigSelectionPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/containers/config-selection-page/config-selection-page.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-config-selection-page\n            \n\n\n\n\n            \n                templateUrl\n                ./config-selection-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                __\n                            \n                            \n                                clientId\n                            \n                            \n                                clients\n                            \n                            \n                                projectId\n                            \n                            \n                                projects\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getClients\n                            \n                            \n                                getProjects\n                            \n                            \n                                makeBackButton\n                            \n                            \n                                makeQueryParams\n                            \n                            \n                                makeState\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                onClientChange\n                            \n                            \n                                onProjectChange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, activatedRoute: ActivatedRoute, router: Router, toastService: ToastService, projectService: ProjectService, clientService: ClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/containers/config-selection-page/config-selection-page.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clientService\n                                                  \n                                                        \n                                                                        ClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getClients\n                        \n                        \n                    \n                \n            \n            \n                \ngetClients()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/containers/config-selection-page/config-selection-page.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getProjects\n                        \n                        \n                    \n                \n            \n            \n                \ngetProjects()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/containers/config-selection-page/config-selection-page.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            makeBackButton\n                        \n                        \n                    \n                \n            \n            \n                \nmakeBackButton()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/containers/config-selection-page/config-selection-page.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { routerLink: {}; queryParams: { project: any; }; name: string; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            makeQueryParams\n                        \n                        \n                    \n                \n            \n            \n                \nmakeQueryParams()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/containers/config-selection-page/config-selection-page.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { project: any; client: any; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            makeState\n                        \n                        \n                    \n                \n            \n            \n                \nmakeState()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/containers/config-selection-page/config-selection-page.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { projects: [any]; clients: [any]; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/containers/config-selection-page/config-selection-page.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClientChange\n                        \n                        \n                    \n                \n            \n            \n                \nonClientChange(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/containers/config-selection-page/config-selection-page.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onProjectChange\n                        \n                        \n                    \n                \n            \n            \n                \nonProjectChange(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/containers/config-selection-page/config-selection-page.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            __\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : strings\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/containers/config-selection-page/config-selection-page.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clientId\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/core/containers/config-selection-page/config-selection-page.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clients\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         [Client]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/containers/config-selection-page/config-selection-page.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            projectId\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/core/containers/config-selection-page/config-selection-page.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            projects\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         [Project]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/containers/config-selection-page/config-selection-page.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {Project} from '@app/project/models/project';\nimport {Client} from '@app/client/models/client';\nimport {ConfigService} from '@app/config/services/config.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {ToastService} from '@app/shared/services/toast.service';\nimport {ProjectService} from '@app/project/services/project.service';\nimport {ClientService} from '@app/client/services/client.service';\nimport strings from '@i18n/strings.json';\n\n@Component({\n  selector: 'app-config-selection-page',\n  templateUrl: './config-selection-page.component.html',\n  // styleUrls: ['./config-selection-page.component.scss']\n})\nexport class ConfigSelectionPageComponent implements OnInit {\n  __ = strings;\n\n  projectId;\n  clientId;\n  projects: [Project];\n  clients: [Client];\n\n  constructor(\n    private configService: ConfigService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private toastService: ToastService,\n    private projectService: ProjectService,\n    private clientService: ClientService) {}\n\n  async ngOnInit() {\n    this.projectId = this.activatedRoute.snapshot.queryParams.project;\n    this.clientId = this.activatedRoute.snapshot.queryParams.client;\n\n    this.projects = await this.getProjects();\n    this.clients = await this.getClients();\n  }\n\n  getProjects() {\n    if (!this.projectId) { return; }\n    const {projects} = history.state;\n    return (projects ? projects : this.projectService.getAllProjects());\n  }\n\n  getClients() {\n    if (!this.clientId) { return; }\n    const {clients} = history.state;\n    return (clients ? clients : this.clientService.getAllClients());\n  }\n\n  onProjectChange(event) {\n    this.projectId = event.id;\n    const tempObject = {...this.activatedRoute.snapshot.queryParams};\n    tempObject.project = this.projectId;\n    this.router.navigate(['/configs'], {queryParams: tempObject});\n  }\n\n  onClientChange(event) {\n    this.clientId = event.id;\n    const tempObject = {...this.activatedRoute.snapshot.queryParams};\n    tempObject.client = this.clientId;\n    this.router.navigate(['/configs'], {queryParams: tempObject});\n  }\n\n  makeState() {\n    return {projects: this.projects, clients: this.clients};\n  }\n\n  makeQueryParams() {\n    return {project: this.projectId, client: this.clientId};\n  }\n\n  makeBackButton() {\n    if (!this.clientId || !this.projectId) { return; }\n    return {routerLink: ['/clients'], queryParams: {project: this.projectId}, name: 'Applications'};\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n        {{__.project}}:\n        \n      \n      \n        {{__.application}}:\n        \n      \n    \n    \n      {{__.configurations}}\n      \n        Edit Application Configuration for\n        \n          All Groups and Users\n        \n        \n          Selected Groups\n        \n        \n          Selected Users\n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      {{__.project}}:                            {{__.application}}:                            {{__.configurations}}              Edit Application Configuration for                  All Groups and Users                          Selected Groups                          Selected Users                    '\n    var COMPONENTS = [{'name': 'AdminSelectionPageComponent', 'selector': 'app-admin-selection-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ClientsComponent', 'selector': 'app-clients'},{'name': 'ConfigsComponent', 'selector': 'app-configs'},{'name': 'ConfigSelectionPageComponent', 'selector': 'app-config-selection-page'},{'name': 'ConfigsTableComponent', 'selector': 'app-configs-table'},{'name': 'DropDownComponent', 'selector': 'app-dropdown'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalClientsComponent', 'selector': 'app-global-clients'},{'name': 'GlobalConfigsComponent', 'selector': 'app-global-configs'},{'name': 'LeftSidebarComponent', 'selector': 'app-left-sidebar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ToastComponent', 'selector': 'app-toasts'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfigSelectionPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigService.html":{"url":"injectables/ConfigService.html","title":"injectable - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/config/services/config.service.ts\n        \n\n            \n                Description\n            \n            \n                Config Service\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getConfigByProjectIdClientId\n                            \n                            \n                                    Private\n                                getConfigByProjectIdClientIdObservable\n                            \n                            \n                                    Async\n                                getGlobalConfigByClientId\n                            \n                            \n                                    Private\n                                getGlobalConfigByClientIdObservable\n                            \n                            \n                                postConfigByProjectIdAndClientId\n                            \n                            \n                                postConfigByProjectIdAndClientIdAndUserId\n                            \n                            \n                                postGlobalConfigByClientId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/config/services/config.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getConfigByProjectIdClientId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getConfigByProjectIdClientId(projectId, clientId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/config/services/config.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getConfigByProjectIdClientIdObservable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getConfigByProjectIdClientIdObservable(projectId, clientId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/config/services/config.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getGlobalConfigByClientId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGlobalConfigByClientId(clientId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/config/services/config.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    clientId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getGlobalConfigByClientIdObservable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGlobalConfigByClientIdObservable(clientId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/config/services/config.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    clientId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postConfigByProjectIdAndClientId\n                        \n                        \n                    \n                \n            \n            \n                \npostConfigByProjectIdAndClientId(projectId, clientId, payload)\n                \n            \n\n\n            \n                \n                    Defined in src/app/config/services/config.service.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payload\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postConfigByProjectIdAndClientIdAndUserId\n                        \n                        \n                    \n                \n            \n            \n                \npostConfigByProjectIdAndClientIdAndUserId(projectId, clientId, userId, payload)\n                \n            \n\n\n            \n                \n                    Defined in src/app/config/services/config.service.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payload\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postGlobalConfigByClientId\n                        \n                        \n                    \n                \n            \n            \n                \npostGlobalConfigByClientId(clientId, payload)\n                \n            \n\n\n            \n                \n                    Defined in src/app/config/services/config.service.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    clientId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payload\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {Config} from '@app/config/models/config';\nimport {ToastService} from '@app/shared/services/toast.service';\nimport {Observable} from 'rxjs';\nimport {environment} from \"@environments/environment\";\n\n/**\n * Config Service\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigService {\n\n  constructor(private http: HttpClient, private toastService: ToastService) { }\n\n  private getGlobalConfigByClientIdObservable(clientId): Observable {\n    return this.http.get(`${environment.backendUrl}/global/config/${clientId}`);\n  }\n\n  async getGlobalConfigByClientId(clientId) {\n    return await this.getGlobalConfigByClientIdObservable(clientId).toPromise()\n      .then((data: any) => {\n        const {config, defaults} = data;\n        config.forEach(c => {\n          if (defaults) {\n            const defaultValues = defaults.filter(d => d.name === c.name && d.scope === 'global');\n            if (defaultValues.length > 0) {\n              c.default = defaultValues[0].value;\n            }\n          }\n        });\n        this.toastService.showSuccess(`Configurations of Application: ${clientId} loaded.`);\n        return config;\n      })\n      .catch(e => {\n        this.toastService.showError(e);\n        console.log(e);\n      })\n      .finally(() => {});\n  }\n\n\n  private getConfigByProjectIdClientIdObservable(projectId, clientId): Observable {\n    return this.http.get(`/api/projects/${projectId}/config/${clientId}`);\n  }\n\n  async getConfigByProjectIdClientId(projectId, clientId) {\n    return await this.getConfigByProjectIdClientIdObservable(projectId, clientId).toPromise()\n      .then((data: any) => {\n        const {config, defaults} = data;\n        config.forEach(c => {\n          if (defaults) {\n            const defaultValues = defaults.filter(d => d.name === c.name && d.scope === 'global');\n            if (defaultValues.length > 0) {\n              c.default = defaultValues[0].value;\n            }\n          }\n        });\n        this.toastService.showSuccess(`Configurations of Project: ${projectId} - Application: ${clientId} loaded.`);\n        return config;\n      })\n      .catch(e => {\n        this.toastService.showError(e);\n        console.log(e);\n      })\n      .finally();\n  }\n\n  // private getConfigByProjectIdClientIdUserIdObservable(projectId, clientId, userId) {}\n  // getConfigByProjectIdClientIdUserId(projectId, clientId, userId) {}\n\n\n\n  postGlobalConfigByClientId(clientId, payload) {\n    return this.http.post(`/api/global/config/${clientId}`, payload, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n\n  postConfigByProjectIdAndClientId(projectId, clientId, payload) {\n    return this.http.post(`/api/projects/${projectId}/config/${clientId}`, payload, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n\n  postConfigByProjectIdAndClientIdAndUserId(projectId, clientId, userId, payload) {\n    return this.http.post(`/api/projects/${projectId}/users/${userId}/config/${clientId}`, payload, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfigsComponent.html":{"url":"components/ConfigsComponent.html","title":"component - ConfigsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConfigsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/config/containers/configs/configs.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-configs\n            \n\n\n\n\n            \n                templateUrl\n                ./configs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                __\n                            \n                            \n                                clientId\n                            \n                            \n                                clients\n                            \n                            \n                                configs\n                            \n                            \n                                loading\n                            \n                            \n                                projectId\n                            \n                            \n                                projects\n                            \n                            \n                                userId\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getClients\n                            \n                            \n                                getProjects\n                            \n                            \n                                getUsers\n                            \n                            \n                                makeBackButton\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                onClientChange\n                            \n                            \n                                onProjectChange\n                            \n                            \n                                onSave\n                            \n                            \n                                onUserChange\n                            \n                            \n                                    Async\n                                updateConfigs\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(projectService: ProjectService, clientService: ClientService, userService: UserService, configService: ConfigService, activatedRoute: ActivatedRoute, router: Router, toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/config/containers/configs/configs.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clientService\n                                                  \n                                                        \n                                                                        ClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getClients\n                        \n                        \n                    \n                \n            \n            \n                \ngetClients()\n                \n            \n\n\n            \n                \n                    Defined in src/app/config/containers/configs/configs.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getProjects\n                        \n                        \n                    \n                \n            \n            \n                \ngetProjects()\n                \n            \n\n\n            \n                \n                    Defined in src/app/config/containers/configs/configs.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUsers\n                        \n                        \n                    \n                \n            \n            \n                \ngetUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/config/containers/configs/configs.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            makeBackButton\n                        \n                        \n                    \n                \n            \n            \n                \nmakeBackButton()\n                \n            \n\n\n            \n                \n                    Defined in src/app/config/containers/configs/configs.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { routerLink: {}; queryParams: { project: any; }; name: string; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/config/containers/configs/configs.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClientChange\n                        \n                        \n                    \n                \n            \n            \n                \nonClientChange(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/config/containers/configs/configs.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onProjectChange\n                        \n                        \n                    \n                \n            \n            \n                \nonProjectChange(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/config/containers/configs/configs.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSave\n                        \n                        \n                    \n                \n            \n            \n                \nonSave(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/config/containers/configs/configs.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onUserChange\n                        \n                        \n                    \n                \n            \n            \n                \nonUserChange(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/config/containers/configs/configs.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateConfigs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateConfigs()\n                \n            \n\n\n            \n                \n                    Defined in src/app/config/containers/configs/configs.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            __\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : strings\n                        \n                    \n                        \n                            \n                                    Defined in src/app/config/containers/configs/configs.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clientId\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/config/containers/configs/configs.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clients\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :      | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/config/containers/configs/configs.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            configs\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/config/containers/configs/configs.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/config/containers/configs/configs.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            projectId\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/config/containers/configs/configs.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            projects\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :      | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/config/containers/configs/configs.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/config/containers/configs/configs.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            users\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :      | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/config/containers/configs/configs.component.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {ProjectService} from '@app/project/services/project.service';\nimport {ClientService} from '@app/client/services/client.service';\nimport {UserService} from '@app/user/services/user.service';\nimport {ConfigService} from '@app/config/services/config.service';\nimport {Project} from '@app/project/models/project';\nimport {Client} from '@app/client/models/client';\nimport {ToastService} from '@app/shared/services/toast.service';\nimport strings from '@i18n/strings.json';\nimport {User} from \"@app/user/models/user\";\n\n@Component({\n  selector: 'app-configs',\n  templateUrl: './configs.component.html',\n  // styleUrls: ['./configs.component.scss']\n})\n\nexport class ConfigsComponent implements OnInit {\n  __ = strings;\n\n  projectId;\n  clientId;\n  userId;\n  configs;\n\n  projects: [Project] | null;\n  clients: [Client] | null;\n  users: [User] | null;\n  loading = true;\n\n  constructor(\n    private projectService: ProjectService,\n    private clientService: ClientService,\n    private userService: UserService,\n    private configService: ConfigService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private toastService: ToastService) {}\n\n  async ngOnInit() {\n    this.projectId = this.activatedRoute.snapshot.queryParams.project;\n    this.clientId = this.activatedRoute.snapshot.queryParams.client;\n    this.userId = this.activatedRoute.snapshot.queryParams.user;\n\n    this.projects = await this.getProjects();\n    this.clients = await this.getClients();\n    console.log(this.userId);\n    console.log(this.clients);\n    this.users = await this.getUsers();\n    console.log(this.users);\n\n    this.updateConfigs();\n  }\n\n  getProjects() {\n    if (!this.projectId) { return; }\n    const {projects} = history.state;\n    return (projects ? projects : this.projectService.getAllProjects());\n  }\n\n  getClients() {\n    if (!this.clientId) { return; }\n    const {clients} = history.state;\n    return (clients ? clients : this.clientService.getAllClients());\n  }\n\n  getUsers() {\n    console.log(this.userId);\n    if (!this.userId) { return; }\n    const {users} = history.state;\n    return (users ? users : this.userService.getUsersByProjectId(this.projectId));\n  }\n\n  onProjectChange(event) {\n    this.projectId = event.id;\n    const tempObject = {...this.activatedRoute.snapshot.queryParams};\n    tempObject.project = this.projectId;\n    this.updateConfigs();\n    this.router.navigate(['/configs'], {queryParams: tempObject});\n  }\n\n  onClientChange(event) {\n    this.clientId = event.id;\n    const tempObject = {...this.activatedRoute.snapshot.queryParams};\n    tempObject.client = this.clientId;\n    this.updateConfigs();\n    this.router.navigate(['/configs'], {queryParams: tempObject});\n  }\n\n  onUserChange(event) {\n    this.clientId = event.id;\n    const tempObject = {...this.activatedRoute.snapshot.queryParams};\n    tempObject.client = this.clientId;\n    this.updateConfigs();\n    this.router.navigate(['/configs'], {queryParams: tempObject});\n  }\n\n  async updateConfigs() {\n    this.loading = true;\n    this.configs = await this.configService.getConfigByProjectIdClientId(this.projectId, this.clientId);\n    this.loading = false;\n  }\n\n  onSave(event) {\n    const newConfigArray = event.config.map(c => ({name: c.name, value: c.value}));\n    if (this.projectId && this.clientId && this.userId) {\n      this.configService.postConfigByProjectIdAndClientIdAndUserId(this.projectId, this.clientId, this.userId, {config: newConfigArray})\n        .subscribe(() => {\n          // tslint:disable-next-line:max-line-length\n          this.toastService.showSuccess(`Configurations of Project: ${this.projectId} - Application: ${this.clientId} - User: ${this.userId} changed.`);\n        });\n    } else if (this.projectId && this.clientId && !this.userId) {\n      this.configService.postConfigByProjectIdAndClientId(this.projectId, this.clientId, {config: newConfigArray})\n        .subscribe(() => {\n          this.toastService.showSuccess(`Configurations of Project: ${this.projectId} - Application: ${this.clientId} changed.`);\n        });\n    }\n  }\n\n  makeBackButton() {\n    if (!this.clientId || !this.projectId) { return; }\n    return {routerLink: ['/clients'], queryParams: {project: this.projectId}, name: 'Applications'};\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n        {{__.project}}:\n        \n      \n      \n        {{__.application}}:\n        \n      \n      \n        {{__.user}}:\n        \n      \n    \n    \n      {{__.configurations}}\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      {{__.project}}:                            {{__.application}}:                            {{__.user}}:                            {{__.configurations}}            '\n    var COMPONENTS = [{'name': 'AdminSelectionPageComponent', 'selector': 'app-admin-selection-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ClientsComponent', 'selector': 'app-clients'},{'name': 'ConfigsComponent', 'selector': 'app-configs'},{'name': 'ConfigSelectionPageComponent', 'selector': 'app-config-selection-page'},{'name': 'ConfigsTableComponent', 'selector': 'app-configs-table'},{'name': 'DropDownComponent', 'selector': 'app-dropdown'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalClientsComponent', 'selector': 'app-global-clients'},{'name': 'GlobalConfigsComponent', 'selector': 'app-global-configs'},{'name': 'LeftSidebarComponent', 'selector': 'app-left-sidebar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ToastComponent', 'selector': 'app-toasts'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfigsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfigsTableComponent.html":{"url":"components/ConfigsTableComponent.html","title":"component - ConfigsTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConfigsTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/config/containers/configs-table/configs-table.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-configs-table\n            \n\n            \n                styleUrls\n                ./configs-table.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./configs-table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                __\n                            \n                            \n                                configForm\n                            \n                            \n                                updateEnabled\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addConfig\n                            \n                            \n                                getConfigFormValue\n                            \n                            \n                                getConfigs\n                            \n                            \n                                initialForm\n                            \n                            \n                                initialize\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onBlur\n                            \n                            \n                                onCancel\n                            \n                            \n                                onPublish\n                            \n                            \n                                onReset\n                            \n                            \n                                remove\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                configObject\n                            \n                            \n                                global\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                save\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getFormData\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, router: Router, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/config/containers/configs-table/configs-table.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        configObject\n                    \n                \n                        \n                            \n                                    Defined in src/app/config/containers/configs-table/configs-table.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        global\n                    \n                \n                        \n                            \n                                    Defined in src/app/config/containers/configs-table/configs-table.component.ts:13\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        save\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/config/containers/configs-table/configs-table.component.ts:15\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addConfig\n                        \n                        \n                    \n                \n            \n            \n                \naddConfig()\n                \n            \n\n\n            \n                \n                    Defined in src/app/config/containers/configs-table/configs-table.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getConfigFormValue\n                        \n                        \n                    \n                \n            \n            \n                \ngetConfigFormValue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/config/containers/configs-table/configs-table.component.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { config: {}; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getConfigs\n                        \n                        \n                    \n                \n            \n            \n                \ngetConfigs()\n                \n            \n\n\n            \n                \n                    Defined in src/app/config/containers/configs-table/configs-table.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initialForm\n                        \n                        \n                    \n                \n            \n            \n                \ninitialForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/config/containers/configs-table/configs-table.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initialize\n                        \n                        \n                    \n                \n            \n            \n                \ninitialize()\n                \n            \n\n\n            \n                \n                    Defined in src/app/config/containers/configs-table/configs-table.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/config/containers/configs-table/configs-table.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlur\n                        \n                        \n                    \n                \n            \n            \n                \nonBlur(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/config/containers/configs-table/configs-table.component.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onCancel\n                        \n                        \n                    \n                \n            \n            \n                \nonCancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/config/containers/configs-table/configs-table.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onPublish\n                        \n                        \n                    \n                \n            \n            \n                \nonPublish()\n                \n            \n\n\n            \n                \n                    Defined in src/app/config/containers/configs-table/configs-table.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onReset\n                        \n                        \n                    \n                \n            \n            \n                \nonReset()\n                \n            \n\n\n            \n                \n                    Defined in src/app/config/containers/configs-table/configs-table.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/config/containers/configs-table/configs-table.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            __\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : strings\n                        \n                    \n                        \n                            \n                                    Defined in src/app/config/containers/configs-table/configs-table.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            configForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/config/containers/configs-table/configs-table.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateEnabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/config/containers/configs-table/configs-table.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        getFormData\n                    \n                \n\n                \n                    \n                        getgetFormData()\n                    \n                \n                            \n                                \n                                    Defined in src/app/config/containers/configs-table/configs-table.component.ts:49\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport strings from '@i18n/strings.json';\nimport {FormArray, FormBuilder, FormGroup} from '@angular/forms';\nimport {ActivatedRoute, Router} from '@angular/router';\n\n@Component({\n  selector: 'app-configs-table',\n  templateUrl: './configs-table.component.html',\n  styleUrls: ['./configs-table.component.scss']\n})\nexport class ConfigsTableComponent implements OnInit {\n  __ = strings;\n  @Input() global;\n  @Input() configObject;\n  @Output() save = new EventEmitter();\n  configForm: FormGroup;\n  updateEnabled: boolean = false;\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private fb: FormBuilder) {}\n\n  ngOnInit() {\n    this.initialize();\n  }\n\n  getConfigs() {\n    const control = this.configForm.get('config') as FormArray;\n    for (const c of this.configObject) {\n      const grp = this.fb.group({\n        name: [c.name],\n        value: [c.value],\n        scope: [c.scope],\n        default: [c.default]\n      });\n      control.push(grp);\n    }\n  }\n\n  initialForm(): FormGroup {\n    return this.fb.group({\n      name: [''],\n      value: [''],\n      scope: [''],\n      default: ['']\n    });\n  }\n\n  get getFormData(): FormArray {\n    return this.configForm.get('config') as FormArray;\n  }\n\n  addConfig() {\n    const control = this.configForm.get('config') as FormArray;\n    control.push(this.initialForm());\n  }\n\n  remove(index: number) {\n    const control = this.configForm.get('config') as FormArray;\n    control.removeAt(index);\n  }\n\n  onPublish() {\n    this.save.emit(this.configForm.value);\n  }\n\n  initialize() {\n    this.configForm = this.fb.group({\n      config: this.fb.array([])\n    });\n    this.getConfigs();\n  }\n\n  onReset() {\n    this.initialize();\n    this.updateEnabled = false;\n  }\n\n  onCancel() {\n    const tempObject = {...this.route.snapshot.queryParams};\n    delete tempObject.client;\n    // TODO clients or global clients or users or groups?\n    // console.log(this.global);\n    if (this.global) {\n      this.router.navigate(['/global-clients'], {queryParams: tempObject});\n    } else {\n      this.router.navigate(['/clients'], {queryParams: tempObject});\n    }\n  }\n  \n  // if change occurred save and reset activate\n  // if change focus from input happens, check the change\n  onBlur(event){\n    const configValue = this.getConfigFormValue().config;\n    // console.log(configValue);\n    // if (this.updateEnabled === true) {return;}\n    // console.log('onBlur',event);\n    // console.log(this.configObject);\n    // console.log(this.configForm.value.config);\n    for (let i=0;i\n    \n\n    \n        \n  \n    \n      \n        \n          {{__.name}}\n          {{__.value}}\n          {{__.defaultValue}}\n          \n        \n        \n          \n            \n              \n            \n            \n              \n            \n            \n              {{group.value.default}}\n            \n            \n              delete\n            \n          \n        \n      \n    \n    \n      add_circle{{__.addANameValueConfiguration}}\n  \n  \n    {{__.publish}}\n    {{__.reset}}\n    {{__.cancel}}\n  \n\n\n    \n\n    \n                \n                    ./configs-table.component.scss\n                \n                @import '../../../../styles.scss';\n\n$color__table_border: #ccc;\n\n.config-wrapper{\n  display: flex;\n  flex-wrap: wrap;\n}\n.container-config{\n  width: 100%;\n  @media screen and (min-width: $size__small){\n    width: 75%;\n  }\n}\n\n.sidebar-config{\n  width: 100%;\n  padding-left: 0;\n  padding-top: 2em;\n  @media screen and (min-width: $size__small){\n    width: 25%;\n    padding-left: 1em;\n    padding-right: 1em;\n    padding-top: 2em;\n  }\n  .btn{\n    display: block;\n    margin-bottom: 0.5em;\n  }\n}\n\n.table{border-bottom: 1px solid $color__table_border;}\n\n.thead{\n  display: flex;\n  .th{\n    width: 47%;\n    padding: 8px;\n    &.icon{\n      width: 5%;\n    }\n  }\n}\n\n.tr{\n  display: flex;\n  border: 1px solid $color__table_border;\n  border-bottom: none;\n  .td{\n    border-right: solid $color__table_border 1px;\n    width: 47%;\n    p{\n      line-height: 48px;\n      height: 48px;\n      margin: 0;\n      padding: 0 0.5em;\n      color: #999;\n    }\n    &.icon{\n      width: 5%;\n    }\n    input{\n      width: 100%;\n      padding: 8px;\n      border: none;\n      height: 48px;\n      //font-family: 'Montserrat';\n      &.disabled{\n        color: #999;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{__.name}}          {{__.value}}          {{__.defaultValue}}                                                                                                                                          {{group.value.default}}                                      delete                                                  add_circle{{__.addANameValueConfiguration}}        {{__.publish}}    {{__.reset}}    {{__.cancel}}  '\n    var COMPONENTS = [{'name': 'AdminSelectionPageComponent', 'selector': 'app-admin-selection-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ClientsComponent', 'selector': 'app-clients'},{'name': 'ConfigsComponent', 'selector': 'app-configs'},{'name': 'ConfigSelectionPageComponent', 'selector': 'app-config-selection-page'},{'name': 'ConfigsTableComponent', 'selector': 'app-configs-table'},{'name': 'DropDownComponent', 'selector': 'app-dropdown'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalClientsComponent', 'selector': 'app-global-clients'},{'name': 'GlobalConfigsComponent', 'selector': 'app-global-configs'},{'name': 'LeftSidebarComponent', 'selector': 'app-left-sidebar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ToastComponent', 'selector': 'app-toasts'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfigsTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_exports\n\n\n\n\nAdminSelectionPageComponent\n\nAdminSelectionPageComponent\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nAdminSelectionPageComponent->CoreModule\n\n\n\n\n\nConfigSelectionPageComponent\n\nConfigSelectionPageComponent\n\nCoreModule -->\n\nConfigSelectionPageComponent->CoreModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nCoreModule -->\n\nFooterComponent->CoreModule\n\n\n\n\n\nLeftSidebarComponent\n\nLeftSidebarComponent\n\nCoreModule -->\n\nLeftSidebarComponent->CoreModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nCoreModule -->\n\nNavbarComponent->CoreModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nCoreModule -->\n\nPageNotFoundComponent->CoreModule\n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nCoreModule->FooterComponent \n\n\n\n\n\nLeftSidebarComponent \n\nLeftSidebarComponent \n\nLeftSidebarComponent  -->\n\nCoreModule->LeftSidebarComponent \n\n\n\n\n\nNavbarComponent \n\nNavbarComponent \n\nNavbarComponent  -->\n\nCoreModule->NavbarComponent \n\n\n\n\n\nCoreRoutingModule\n\nCoreRoutingModule\n\nCoreModule -->\n\nCoreRoutingModule->CoreModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nCoreModule -->\n\nSharedModule->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AdminSelectionPageComponent\n                        \n                        \n                            ConfigSelectionPageComponent\n                        \n                        \n                            FooterComponent\n                        \n                        \n                            LeftSidebarComponent\n                        \n                        \n                            NavbarComponent\n                        \n                        \n                            PageNotFoundComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CoreRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FooterComponent\n                        \n                        \n                            LeftSidebarComponent\n                        \n                        \n                            NavbarComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NavbarComponent } from './containers/navbar/navbar.component';\nimport {MatIconModule} from '@angular/material';\nimport { FooterComponent } from './containers/footer/footer.component';\nimport { PageNotFoundComponent } from './containers/page-not-found/page-not-found.component';\nimport { AdminSelectionPageComponent } from './containers/admin-selection-page/admin-selection-page.component';\nimport {CoreRoutingModule} from '@app/core/core-routing.module';\nimport { LeftSidebarComponent } from './containers/left-sidebar/left-sidebar.component';\nimport { ConfigSelectionPageComponent } from './containers/config-selection-page/config-selection-page.component';\nimport {SharedModule} from '@app/shared/shared.module';\n\n@NgModule({\n  declarations: [\n    NavbarComponent,\n    FooterComponent,\n    PageNotFoundComponent,\n    AdminSelectionPageComponent,\n    LeftSidebarComponent,\n    ConfigSelectionPageComponent\n  ],\n  exports: [\n    NavbarComponent,\n    FooterComponent,\n    LeftSidebarComponent\n  ],\n  imports: [\n    CommonModule,\n    MatIconModule,\n    CoreRoutingModule,\n    SharedModule\n  ]\n})\nexport class CoreModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreRoutingModule.html":{"url":"modules/CoreRoutingModule.html","title":"module - CoreRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {AdminSelectionPageComponent} from '@app/core/containers/admin-selection-page/admin-selection-page.component';\nimport {ConfigSelectionPageComponent} from '@app/core/containers/config-selection-page/config-selection-page.component';\nimport {AdminGuard, AuthGuard} from '@app/auth/helpers';\n\nconst routes: Routes = [\n  {\n    path: 'admin-main',\n    component: AdminSelectionPageComponent,\n    canActivate: [AuthGuard, AdminGuard]\n  },\n  {\n    path: 'config-selection',\n    component: ConfigSelectionPageComponent,\n    canActivate: [AuthGuard]\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CoreRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DropDownComponent.html":{"url":"components/DropDownComponent.html","title":"component - DropDownComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DropDownComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/drop-down/drop-down.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dropdown\n            \n\n            \n                styleUrls\n                ./drop-down.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./drop-down.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                head\n                            \n                            \n                                headIsActive\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onHeadClick\n                            \n                            \n                                onItemClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(eRef: ElementRef, toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/drop-down/drop-down.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        eRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/drop-down/drop-down.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/drop-down/drop-down.component.ts:12\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        change\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/drop-down/drop-down.component.ts:14\n                            \n                        \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            document:click\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:click(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/drop-down/drop-down.component.ts:38\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/drop-down/drop-down.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onHeadClick\n                        \n                        \n                    \n                \n            \n            \n                \nonHeadClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/drop-down/drop-down.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onItemClick\n                        \n                        \n                    \n                \n            \n            \n                \nonItemClick(item)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/drop-down/drop-down.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            head\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/drop-down/drop-down.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            headIsActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/drop-down/drop-down.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, ElementRef, EventEmitter, HostListener, Input, OnInit, Output} from '@angular/core';\nimport {ToastService} from '@app/shared/services/toast.service';\n\n@Component({\n  selector: 'app-dropdown',\n  templateUrl: './drop-down.component.html',\n  styleUrls: ['./drop-down.component.scss']\n})\n\nexport class DropDownComponent implements OnInit {\n  @Input() data;\n  @Input() selected;\n  // tslint:disable-next-line:no-output-native\n  @Output() change: EventEmitter = new EventEmitter();\n  head;\n  headIsActive: boolean;\n\n  constructor(\n    private eRef: ElementRef,\n    private toastService: ToastService) {}\n\n  ngOnInit() {\n    this.head = this.data.find(d => d.name == this.selected ); // TODO\n    if (!this.head) { this.toastService.showError('Id error'); } // TODO\n  }\n\n  onHeadClick() {\n    this.headIsActive = !this.headIsActive;\n  }\n\n  onItemClick(item) {\n    this.headIsActive = !this.headIsActive;\n    this.head = item;\n    this.change.emit(item);\n  }\n\n  @HostListener('document:click', ['$event'])\n  clickout(event) {\n    if (!this.eRef.nativeElement.contains(event.target)) {\n      this.headIsActive = false;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{head.name}}\n      \n        keyboard_arrow_down\n      \n    \n    \n      \n        {{d.name}}\n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./drop-down.component.scss\n                \n                @import '../../../../styles.scss';\n\n.dropdown{\n  background-color: $color__accent;\n  position: relative;\n  ul,li{margin:0;padding:0;list-style: none;}\n  li{\n    cursor: pointer;\n  }\n  .dd-head{\n    height: 48px;\n    padding: 8px;\n    border: 1px solid rgba(0,0,0,0.15);\n    border-radius: 0.25em;\n    box-shadow: 0 .5rem 1rem rgba(0,0,0,.15);\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    .dd-head-title{\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n    .mat-icon{\n      font-size: 1.5em;//width: 16px;height: 16px;\n    }\n  }\n  .dd-body{\n    border: 1px solid #999;\n    border-top: none;\n    position: absolute;\n    width: 100%;\n    z-index: 20;\n    display: none;\n    &.active{display: block;}\n    .dropdown-list{\n      background-color: $color__accent;\n      .dropdown-item{\n        padding: 8px;\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        &:hover{\n          background-color: rgba($color: $color__accent_bg, $alpha: 0.3);\n        }\n        &.active{\n          background-color: $color__accent_bg;\n          color: $color__accent;\n        }\n      }\n    }\n  }\n}\n\n\n.dropdown-toggle{\n  cursor: pointer;\n}\n\n.dropdown-item{\n  cursor: pointer;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{head.name}}              keyboard_arrow_down                            {{d.name}}            '\n    var COMPONENTS = [{'name': 'AdminSelectionPageComponent', 'selector': 'app-admin-selection-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ClientsComponent', 'selector': 'app-clients'},{'name': 'ConfigsComponent', 'selector': 'app-configs'},{'name': 'ConfigSelectionPageComponent', 'selector': 'app-config-selection-page'},{'name': 'ConfigsTableComponent', 'selector': 'app-configs-table'},{'name': 'DropDownComponent', 'selector': 'app-dropdown'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalClientsComponent', 'selector': 'app-global-clients'},{'name': 'GlobalConfigsComponent', 'selector': 'app-global-configs'},{'name': 'LeftSidebarComponent', 'selector': 'app-left-sidebar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ToastComponent', 'selector': 'app-toasts'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DropDownComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ErrorInterceptor.html":{"url":"interceptors/ErrorInterceptor.html","title":"interceptor - ErrorInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ErrorInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/helpers/error.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/helpers/error.interceptor.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/helpers/error.interceptor.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport {AuthService} from '@app/auth/services/auth.service';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n    constructor(private authService: AuthService) { }\n\n    intercept(request: HttpRequest, next: HttpHandler): Observable> {\n        return next.handle(request).pipe(catchError(err => {\n            if ([401, 403].indexOf(err.status) !== -1) {\n                this.authService.logout();\n                location.reload(true);\n            }\n            const error = err.error.message || err.statusText;\n            return throwError(error);\n        }));\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/containers/footer/footer.component.ts\n\n\n    \n        Description\n    \n    \n        Footer component\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                styleUrls\n                ./footer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport strings from '@i18n/strings.json';\n\n/**\n * Footer component\n */\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\n\nexport class FooterComponent {\n  /**\n   * @ignore\n   */\n  __ = strings;\n}\n\n    \n\n    \n        \n  \n    {{__.footer}}\n  \n\n\n    \n\n    \n                \n                    ./footer.component.scss\n                \n                @import '../../../../styles.scss';\n\n.footer{\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  height: 3.75em;\n  padding: 1em;\n  font-size: 0.8em;\n  background-color: $color__main_bg;\n  border-top: $color__accent_bg_semi_transparent solid 1px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{__.footer}}  '\n    var COMPONENTS = [{'name': 'AdminSelectionPageComponent', 'selector': 'app-admin-selection-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ClientsComponent', 'selector': 'app-clients'},{'name': 'ConfigsComponent', 'selector': 'app-configs'},{'name': 'ConfigSelectionPageComponent', 'selector': 'app-config-selection-page'},{'name': 'ConfigsTableComponent', 'selector': 'app-configs-table'},{'name': 'DropDownComponent', 'selector': 'app-dropdown'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalClientsComponent', 'selector': 'app-global-clients'},{'name': 'GlobalConfigsComponent', 'selector': 'app-global-configs'},{'name': 'LeftSidebarComponent', 'selector': 'app-left-sidebar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ToastComponent', 'selector': 'app-toasts'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GlobalClientsComponent.html":{"url":"components/GlobalClientsComponent.html","title":"component - GlobalClientsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GlobalClientsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/client/containers/global-clients/global-clients.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-global-clients\n            \n\n\n\n\n            \n                templateUrl\n                ./global-clients.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                __\n                            \n                            \n                                clients\n                            \n                            \n                                loading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                makeQueryParams\n                            \n                            \n                                makeState\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                updateClients\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(clientService: ClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/client/containers/global-clients/global-clients.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clientService\n                                                  \n                                                        \n                                                                        ClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            makeQueryParams\n                        \n                        \n                    \n                \n            \n            \n                \nmakeQueryParams(clientId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/client/containers/global-clients/global-clients.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    clientId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { client: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            makeState\n                        \n                        \n                    \n                \n            \n            \n                \nmakeState()\n                \n            \n\n\n            \n                \n                    Defined in src/app/client/containers/global-clients/global-clients.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         { clients: void | [any]; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/client/containers/global-clients/global-clients.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateClients\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateClients()\n                \n            \n\n\n            \n                \n                    Defined in src/app/client/containers/global-clients/global-clients.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            __\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : strings\n                        \n                    \n                        \n                            \n                                    Defined in src/app/client/containers/global-clients/global-clients.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clients\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :      | void\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/client/containers/global-clients/global-clients.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/client/containers/global-clients/global-clients.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {Client} from '@app/client/models/client';\nimport {ClientService} from '@app/client/services/client.service';\nimport strings from '@i18n/strings.json';\n\n@Component({\n  selector: 'app-global-clients',\n  templateUrl: './global-clients.component.html',\n  // styleUrls: ['./global-clients.component.scss']\n})\n\nexport class GlobalClientsComponent implements OnInit {\n  __ = strings;\n  loading = false;\n  clients: [Client] | void;\n\n  constructor(private clientService: ClientService) {}\n\n  ngOnInit() {\n    this.updateClients();\n  }\n\n  async updateClients() {\n    this.loading = true;\n    this.clients = await this.clientService.getAllClients();\n    this.loading = false;\n  }\n\n  makeState() {\n    return {clients: this.clients};\n  }\n\n  makeQueryParams(clientId) {\n    return {client: clientId};\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n        {{__.globalApplications}}\n        {{__.selectAnApplication}}\n      \n      {{__.loading}}\n      \n        \n          \n            \n              \n                {{client.clientId}}\n              \n            \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      {{__.globalApplications}}        {{__.selectAnApplication}}            {{__.loading}}                                                                  {{client.clientId}}                                                        '\n    var COMPONENTS = [{'name': 'AdminSelectionPageComponent', 'selector': 'app-admin-selection-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ClientsComponent', 'selector': 'app-clients'},{'name': 'ConfigsComponent', 'selector': 'app-configs'},{'name': 'ConfigSelectionPageComponent', 'selector': 'app-config-selection-page'},{'name': 'ConfigsTableComponent', 'selector': 'app-configs-table'},{'name': 'DropDownComponent', 'selector': 'app-dropdown'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalClientsComponent', 'selector': 'app-global-clients'},{'name': 'GlobalConfigsComponent', 'selector': 'app-global-configs'},{'name': 'LeftSidebarComponent', 'selector': 'app-left-sidebar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ToastComponent', 'selector': 'app-toasts'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GlobalClientsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GlobalConfigsComponent.html":{"url":"components/GlobalConfigsComponent.html","title":"component - GlobalConfigsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GlobalConfigsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/config/containers/global-configs/global-configs.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-global-configs\n            \n\n\n\n\n            \n                templateUrl\n                ./global-configs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                __\n                            \n                            \n                                clientId\n                            \n                            \n                                clients\n                            \n                            \n                                configs\n                            \n                            \n                                loading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getClients\n                            \n                            \n                                makeBackButton\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                onClientChange\n                            \n                            \n                                onSave\n                            \n                            \n                                    Async\n                                updateConfigs\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(clientService: ClientService, configService: ConfigService, activatedRoute: ActivatedRoute, router: Router, toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/config/containers/global-configs/global-configs.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clientService\n                                                  \n                                                        \n                                                                        ClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getClients\n                        \n                        \n                    \n                \n            \n            \n                \ngetClients()\n                \n            \n\n\n            \n                \n                    Defined in src/app/config/containers/global-configs/global-configs.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            makeBackButton\n                        \n                        \n                    \n                \n            \n            \n                \nmakeBackButton()\n                \n            \n\n\n            \n                \n                    Defined in src/app/config/containers/global-configs/global-configs.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { routerLink: {}; queryParams: {}; name: string; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/config/containers/global-configs/global-configs.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClientChange\n                        \n                        \n                    \n                \n            \n            \n                \nonClientChange(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/config/containers/global-configs/global-configs.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSave\n                        \n                        \n                    \n                \n            \n            \n                \nonSave(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/config/containers/global-configs/global-configs.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateConfigs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateConfigs()\n                \n            \n\n\n            \n                \n                    Defined in src/app/config/containers/global-configs/global-configs.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            __\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : strings\n                        \n                    \n                        \n                            \n                                    Defined in src/app/config/containers/global-configs/global-configs.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clientId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/config/containers/global-configs/global-configs.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clients\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :      | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/config/containers/global-configs/global-configs.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            configs\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/config/containers/global-configs/global-configs.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/config/containers/global-configs/global-configs.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {Client} from '@app/client/models/client';\nimport {ConfigService} from '@app/config/services/config.service';\nimport {ToastService} from '@app/shared/services/toast.service';\nimport {ClientService} from '@app/client/services/client.service';\n\nimport strings from '@i18n/strings.json';\n\n@Component({\n  selector: 'app-global-configs',\n  templateUrl: './global-configs.component.html',\n  // styleUrls: ['./global-configs.component.scss']\n})\n\nexport class GlobalConfigsComponent implements OnInit {\n  __ = strings;\n\n  clientId: string;\n  configs;\n  clients: [Client] | null;\n  loading = true;\n  // private backButtonObject;\n\n  constructor(\n    private clientService: ClientService,\n    private configService: ConfigService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private toastService: ToastService) {}\n\n  async ngOnInit() {\n    this.clientId = this.activatedRoute.snapshot.queryParams.client;\n    this.clients = await this.getClients();\n    this.updateConfigs();\n  }\n\n  getClients() {\n    if (!this.clientId) { return; }\n    const {clients} = history.state;\n    return (clients ? clients : this.clientService.getAllClients());\n  }\n\n  onClientChange(event) {\n    this.clientId = event.id;\n    this.updateConfigs();\n    this.router.navigate(['/global-configs'], {queryParams: {client: this.clientId}}).then(() => {});\n  }\n\n  async updateConfigs() {\n    this.loading = true;\n    this.configs = await this.configService.getGlobalConfigByClientId(this.clientId);\n    this.loading = false;\n  }\n\n  onSave(event) {\n    const newConfigArray = event.config.map(c => ({name: c.name, value: c.value}));\n    this.configService.postGlobalConfigByClientId(this.clientId, {config: newConfigArray}).subscribe(() => {\n      this.toastService.showSuccess(`Global Configurations of App: ${this.clientId} changed.`);\n    });\n  }\n\n  makeBackButton() {\n    if (!this.clientId) { return; }\n    return {routerLink: ['/global-clients'], queryParams: {}, name: 'Applications'};\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n    \n      \n        {{__.application}}:\n        \n      \n    \n\n    \n      {{__.globalConfigurations}}\n      {{__.configurations}}\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      {{__.application}}:                            {{__.globalConfigurations}}      {{__.configurations}}            '\n    var COMPONENTS = [{'name': 'AdminSelectionPageComponent', 'selector': 'app-admin-selection-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ClientsComponent', 'selector': 'app-clients'},{'name': 'ConfigsComponent', 'selector': 'app-configs'},{'name': 'ConfigSelectionPageComponent', 'selector': 'app-config-selection-page'},{'name': 'ConfigsTableComponent', 'selector': 'app-configs-table'},{'name': 'DropDownComponent', 'selector': 'app-dropdown'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalClientsComponent', 'selector': 'app-global-clients'},{'name': 'GlobalConfigsComponent', 'selector': 'app-global-configs'},{'name': 'LeftSidebarComponent', 'selector': 'app-left-sidebar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ToastComponent', 'selector': 'app-toasts'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GlobalConfigsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/JwtInterceptor.html":{"url":"interceptors/JwtInterceptor.html","title":"interceptor - JwtInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  JwtInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/helpers/jwt.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/helpers/jwt.interceptor.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/helpers/jwt.interceptor.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {AuthService} from '@app/auth/services/auth.service';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n\n  constructor(private authenticationService: AuthService) { }\n\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n\n    const currentUser = this.authenticationService.currentUserValue;\n    const isLoggedIn = currentUser && currentUser.access_token;\n\n    if (isLoggedIn) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${currentUser.access_token}`\n        }\n      });\n    }\n\n    return next.handle(request);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LeftSidebarComponent.html":{"url":"components/LeftSidebarComponent.html","title":"component - LeftSidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LeftSidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/containers/left-sidebar/left-sidebar.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-left-sidebar\n            \n\n\n\n\n            \n                templateUrl\n                ./left-sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                __\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                backButton\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/containers/left-sidebar/left-sidebar.component.ts:14\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        backButton\n                    \n                \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/containers/left-sidebar/left-sidebar.component.ts:13\n                            \n                        \n            \n        \n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'container-left'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/containers/left-sidebar/left-sidebar.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            __\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : strings\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/containers/left-sidebar/left-sidebar.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, HostBinding, Input} from '@angular/core';\nimport strings from '@i18n/strings.json';\n\n@Component({\n  selector: 'app-left-sidebar',\n  templateUrl: './left-sidebar.component.html',\n  // styleUrls: ['./left-sidebar.component.scss'],\n})\n\n\nexport class LeftSidebarComponent{\n  __ = strings;\n  @Input() backButton: {routerLink: any, queryParams: any, name: string};\n  @HostBinding('class') class = 'container-left';\n\n  constructor() {}\n}\n\n    \n\n    \n        \n  \n    keyboard_arrow_left{{__.backTo}}{{backButton.name}}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      keyboard_arrow_left{{__.backTo}}{{backButton.name}}  '\n    var COMPONENTS = [{'name': 'AdminSelectionPageComponent', 'selector': 'app-admin-selection-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ClientsComponent', 'selector': 'app-clients'},{'name': 'ConfigsComponent', 'selector': 'app-configs'},{'name': 'ConfigSelectionPageComponent', 'selector': 'app-config-selection-page'},{'name': 'ConfigsTableComponent', 'selector': 'app-configs-table'},{'name': 'DropDownComponent', 'selector': 'app-dropdown'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalClientsComponent', 'selector': 'app-global-clients'},{'name': 'GlobalConfigsComponent', 'selector': 'app-global-configs'},{'name': 'LeftSidebarComponent', 'selector': 'app-left-sidebar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ToastComponent', 'selector': 'app-toasts'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LeftSidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/containers/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                __\n                            \n                            \n                                loading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, activatedRoute: ActivatedRoute, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/containers/login/login.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/containers/login/login.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/containers/login/login.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            __\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : strings\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/containers/login/login.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/containers/login/login.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {first} from 'rxjs/operators';\nimport {AuthService} from '@app/auth/services/auth.service';\nimport {Roles} from '@app/auth/enums/roles.enum';\nimport strings from '@i18n/strings.json';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  // styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  __ = strings;\n\n  loading = false;\n\n  constructor(\n    private authService: AuthService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    this.activatedRoute.queryParams.pipe(first()).subscribe(params => {\n      const {code} = params;\n      let {returnUrl} = params;\n\n      if (returnUrl) {\n        localStorage.setItem('returnUrl', returnUrl);\n      }\n\n      if (code) {\n        this.loading = true;\n        this.authService.processLogin(code).pipe(first())\n          .subscribe(\n            () => {\n              const currentUser = this.authService.currentDecodedUserValue;\n              returnUrl = localStorage.getItem('returnUrl');\n              if (returnUrl) {\n                this.router.navigateByUrl(returnUrl);\n              } else {\n                if (currentUser.role !== Roles.SYSTEM_ADMIN) {\n                  this.router.navigateByUrl('projects');\n                } else {\n                  this.router.navigateByUrl('admin-main');\n                }\n              }\n            },\n            error => {\n              console.log(error);\n              // TODO Imp: logger\n              // this.error = error;\n              this.loading = false;\n            }\n          );\n      }\n    });\n  }\n\n  login() {\n    this.loading = true;\n    this.authService.authorize();\n  }\n}\n\n    \n\n    \n        \n  \n    {{__.login}}\n    {{__.loading}}\n    \n      {{__.loginWithManagementPortalAdmin}}\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{__.login}}    {{__.loading}}          {{__.loginWithManagementPortalAdmin}}      '\n    var COMPONENTS = [{'name': 'AdminSelectionPageComponent', 'selector': 'app-admin-selection-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ClientsComponent', 'selector': 'app-clients'},{'name': 'ConfigsComponent', 'selector': 'app-configs'},{'name': 'ConfigSelectionPageComponent', 'selector': 'app-config-selection-page'},{'name': 'ConfigsTableComponent', 'selector': 'app-configs-table'},{'name': 'DropDownComponent', 'selector': 'app-dropdown'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalClientsComponent', 'selector': 'app-global-clients'},{'name': 'GlobalConfigsComponent', 'selector': 'app-global-configs'},{'name': 'LeftSidebarComponent', 'selector': 'app-left-sidebar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ToastComponent', 'selector': 'app-toasts'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/MockInterceptor.html":{"url":"interceptors/MockInterceptor.html","title":"interceptor - MockInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  MockInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/mock/services/mock.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/mock/services/mock.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpResponse, HttpHandler, HttpEvent, HttpInterceptor, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { delay, mergeMap, materialize, dematerialize } from 'rxjs/operators';\n// import { Role } from '@app/_models';\nimport {projects, clients, groups, participants, users} from '../mock-data';\nimport { environment as env} from '@environments/environment';\nimport { environment as envAdmin } from '@environments/environment.mock';\nimport { environment as envResearcher } from '@environments/environment.mock-researcher';\nimport {Roles} from '@app/auth/enums/roles.enum';\n\nlet environment;\nif (env.envName === 'mock') {\n  environment = envAdmin;\n} else if (env.envName === 'mock-researcher') {\n  environment = envResearcher;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MockInterceptor implements HttpInterceptor {\n\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n    let user; //  = users.users[0];\n    const { url, method, headers, body } = request;\n    return of(null)\n      .pipe(mergeMap(handleRoute))\n      .pipe(materialize())\n      .pipe(delay(500))\n      .pipe(dematerialize());\n\n    function handleRoute() {\n      switch (true) {\n        case url.endsWith('/api/projects') && method === 'GET':\n          return getProjects();\n        case url.endsWith('/api/clients') && method === 'GET':\n          return getClients();\n        case url.match(/\\/api\\/projects\\/[A-Za-z0-9_-]+\\/clients\\//) && method === 'GET':\n          return getClientsByProjectId(getProjectIdFromUrl());\n        case url.match(/\\/api\\/projects\\/[A-Za-z0-9_-]+\\/users\\//) && method === 'GET':\n          return getUsersByProjectId(getProjectIdFromUrl());\n        case url.match(/\\/api\\/global\\/config\\//) && method === 'GET':\n          return getConfigByClientId();\n        case url.match(/\\/api\\/projects\\/[A-Za-z0-9_-]+\\/config\\//) && method === 'GET':\n          return getConfigByClientIdAndProjectId();\n        case url.match(/\\/api\\/projects\\/[A-Za-z0-9_-]+\\/config\\/[A-Za-z0-9_-]+/) && method === 'GET':\n          return getConfigByClientIdAndProjectId();\n        // tslint:disable-next-line:max-line-length\n        case url.startsWith(`${environment.authAPI}/authorize?client_id=${environment.clientId}&response_type=code&redirect_uri=${environment.authCallback}`):\n          generateCode();\n          return null;\n        // tslint:disable-next-line:max-line-length\n        // case url.startsWith(`${environment.authAPI}/researcher-authorize?client_id=${environment.clientId}&response_type=code&redirect_uri=${environment.authCallback}`):\n        //   generateCode('researcher');\n        //   return null;\n        case url.startsWith(`${environment.authAPI}/token`):\n          return generateToken();\n        // case url.startsWith(`${environment.authAPI}/researcher-token`):\n        //   return generateToken('researcher');\n        default:\n          return next.handle(request);\n      }\n    }\n\n    // route functions\n    function generateToken() {\n      if (environment.envName === 'mock') {\n        user = users.users[0];\n      } else if (environment.envName === 'mock-researcher') {\n        user = users.users[1];\n      }\n      // if (role === 'researcher') {\n      //   user = users.users[1];\n      // }\n      return ok(user);\n    }\n\n    function generateCode() {\n      const code = environment.fakeCode.code;\n      window.location.href = `${environment.authCallback}?code=${code}`;\n    }\n\n    function getProjects() {\n      if (!isLoggedIn()) {\n        return unauthorized();\n      }\n      // if (isAdmin()) {\n      //   console.log(888);\n      //   const projectsList = projects.projects.map(p => p.data);\n      //   return ok({projects: projectsList});\n      // }\n      // TODO\n      if (environment.envName === 'mock') {\n        user = users.users[0];\n      } else if (environment.envName === 'mock-researcher') {\n        user = users.users[1];\n      }\n      if (user.projects) {\n        const projectsLists = user.projects.map(projectId => projects.projects.find(p => p.data.id === projectId));\n        return ok({projects: projectsLists.map(p => p.data)});\n\n        // return ok(user.projects.map(projectId => projects.projects.find(p => p.data.id === projectId)));\n      }\n      const projectsList = projects.projects.map(p => p.data);\n      return ok({projects: projectsList});\n      // return ok(projects);\n\n    }\n\n    function getClients() {\n      if (isAdmin()) { return ok(clients); }\n      // TODO\n      return ok(null); // researcherClients);\n    }\n\n    function getClientsByProjectId(projectId) {\n      // console.log(projectId);\n      const selectedProject = projects.projects.filter(p => p.data.id == projectId);\n      // console.log(selectedProject);\n      const clientsOfSelectedProject = selectedProject[0].clients;\n      // console.log(clientsOfSelectedProject);\n      const clientsList = clientsOfSelectedProject.map(clientId => clients.clients.filter(c => c.clientId == clientId)[0]);\n      // console.log(clientsList);\n      // const clientsList =\n      return ok({clients: clientsList});\n    }\n\n    function getUsersByProjectId(projectId) {\n      const selectedProject = projects.projects.filter(p => p.data.projectName == projectId);\n      const usersOfSelectedProject = selectedProject[0].participants;\n      const usersList = usersOfSelectedProject.map(userId => participants.participants.filter(u => u.id == userId)[0]);\n      // const clientsList =\n      return ok({users: usersList});\n    }\n\n    function getConfigByClientId() {\n      if (!isLoggedIn()) { return unauthorized(); }\n      if (!isAdmin()) { return unauthorized(); }\n      const config = {\n        clientId: 'fakeClientId',\n        scope: 'global',\n        config: [\n          {name: 'plugins', value: 'A', scope: 'global'}\n        ]\n      };\n      // const config = globalConfigs.find(c => c.clientId === clientIdFromUrl());\n      return ok(config);\n    }\n\n    function getConfigByClientIdAndProjectId() {\n      if (!isLoggedIn()) { return unauthorized(); }\n      // const config = nonGlobalConfigs.find(c => c.clientId === clientIdFromUrl() && true);\n      const config = {\n        clientId: 'fakeClientId',\n        scope: 'project.fakeProjectId',\n        config: [\n          {name: 'plugins', value: 'A B'},\n          {name: 'plugins-a', value: 'C D'}\n        ],\n        defaults: [\n          {name: 'plugins', value: 'A', scope: 'global'}\n        ]\n      };\n      return ok(config);\n    }\n\n    // helper functions\n    // tslint:disable-next-line:no-shadowed-variable\n    function ok(body) {\n      return of(new HttpResponse({ status: 200, body }));\n    }\n\n    function unauthorized() {\n      return throwError({ status: 401, error: { message: 'unauthorized' } });\n    }\n\n    function isLoggedIn() {\n      const authHeader = headers.get('Authorization') || '';\n      // tslint:disable-next-line:max-line-length\n      return authHeader.startsWith(`Bearer ${environment.fakeJwtToken.token}`);\n    }\n\n    function isAdmin() {\n      return isLoggedIn() && currentUser().role === Roles.SYSTEM_ADMIN;\n    }\n\n    function currentUser() {\n      if (!isLoggedIn()) { return; }\n      return {role: Roles.SYSTEM_ADMIN};\n    }\n\n    function clientIdFromUrl() {\n      const urlParts = url.split('/');\n      // tslint:disable-next-line: radix\n      return (urlParts[urlParts.length - 1]);\n    }\n\n    function getProjectIdFromUrl() {\n      const urlParts = url.split('/');\n      // tslint:disable-next-line: radix\n      return (urlParts[urlParts.length - 3]);\n    }\n\n    function getProjectIdAndClientIdFromUrl() {\n      const urlParts = url.split('/');\n      // tslint:disable-next-line: radix\n      return (urlParts[urlParts.length - 3]);\n    }\n  }\n}\n\nexport const mockBackendProvider = {\n  // use fake backend in place of Http service for backend-less development\n  provide: HTTP_INTERCEPTORS,\n  useClass: MockInterceptor,\n  multi: true\n};\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MockModule.html":{"url":"modules/MockModule.html","title":"module - MockModule","body":"\n                   \n\n\n\n\n    Modules\n    MockModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/mock/mock.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {mockBackendProvider} from '@app/mock/services/mock.service';\nimport {environment} from '@environments/environment';\n\nconst extraProviders = (environment.envName === 'mock' || environment.envName === 'mock-researcher') ? [mockBackendProvider] : [];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    ...extraProviders\n  ],\n})\nexport class MockModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/containers/navbar/navbar.component.ts\n\n\n    \n        Description\n    \n    \n        Navbar component\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n            \n                styleUrls\n                ./navbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                isAdmin\n                            \n                            \n                                isNavMenuActive\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                onNavbarTogglerClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/containers/navbar/navbar.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/containers/navbar/navbar.component.ts:36\n                \n            \n\n\n            \n                \n                    Logout click handler\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNavbarTogglerClick\n                        \n                        \n                    \n                \n            \n            \n                \nonNavbarTogglerClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/containers/navbar/navbar.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/containers/navbar/navbar.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAdmin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/containers/navbar/navbar.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isNavMenuActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/containers/navbar/navbar.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component} from '@angular/core';\nimport {User} from '@app/auth/models/user';\nimport {AuthService} from '@app/auth/services/auth.service';\nimport {Router} from '@angular/router';\nimport strings from '@i18n/strings.json';\n\n/**\n * Navbar component\n */\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent {\n\n  /**\n   * @ignore\n   */\n  __ = strings;\n\n  currentUser: User;\n  isAdmin: boolean;\n  isNavMenuActive: boolean = false;\n\n  constructor(private authService: AuthService, private router: Router) {\n    this.authService.currentUser.subscribe(() => {\n      this.currentUser = this.authService.currentDecodedUserValue;\n      this.isAdmin = this.authService.isAdmin;\n    });\n  }\n\n  /**\n   * Logout click handler\n   */\n  logout() {\n    this.authService.logout();\n    this.currentUser = null;\n    localStorage.removeItem('returnUrl');\n    this.isNavMenuActive = false;\n    this.router.navigate(['/login']);\n  }\n\n  onNavbarTogglerClick() {\n    this.isNavMenuActive = !this.isNavMenuActive;\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      {{__.radarBase}}\n      {{__.appConfig}}\n    \n  \n  \n    menu\n    close\n  \n  \n    \n      \n        {{__.globalConfigurations}}\n      \n      \n        {{__.projects}}\n      \n      \n        {{__.login}}\n      \n      \n        {{__.logout}}\n      \n      \n        Hello {{currentUser.username}} {{currentUser.role}}\n      \n      \n        \n        help\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./navbar.component.scss\n                \n                @import '../../../../styles.scss';\n\n.navbar{\n  position: fixed;\n  z-index: 1000;\n  top:0;\n  left: 0;\n  right: 0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 5em;\n  padding: 0.5em 2em;\n  @media screen and (max-width: $size__tablet) {\n    padding: 0.5em;\n  }\n  background-color: $color__navbar_bg;\n  color: $color__navbar;\n  .nav-item{\n    .nav-link{\n      padding: 1em;\n    }\n    &.active{\n\n      padding: 0.5em;\n      a{\n        color: rgba(#fff, 0.5);\n      }\n      //.nav-link{\n      //  border-bottom: 2px solid rgba(#fff, 0.5);\n      //}\n    }\n  }\n\n  .navbar-menu{\n    @media screen and (max-width: $size__tablet){\n      &.active{\n        display: block;\n      }\n      position: absolute;\n      top: 64px;\n      display: none;\n      left: 0;\n      right: 0;\n      background-color: #4F7D91;\n      .navbar-nav{\n        padding: 2em;\n      }\n      .nav-item{\n        &.greeting{\n          display: none;\n        }\n        .nav-link{\n          padding: 1em 0;\n        }\n        //&.active{\n        // padding: 0.5em;\n        //  a{\n        //    color: rgba(#fff, 0.5);\n        //  }\n        //  //.nav-link{\n        //  //  border-bottom: 2px solid rgba(#fff, 0.5);\n        //  //}\n        //}\n      }\n\n    }\n  }\n\n  .navbar-toggler {\n    display: block;\n    width: 40px;\n    height: 40px;\n    //background-color: #aa0000;\n    margin: 0;\n    padding: 0;\n    background-color: transparent;\n    border: none;\n    color: white;\n    @media screen and (min-width: $size__tablet) {\n      display: none;\n    }\n    mat-icon{\n      width: 40px;\n      height: 40px;\n      font-size: 40px;\n      display: none;\n      &.active{\n        display: block;\n      }\n    }\n  }\n\n  a {\n    color: $color__navbar_link;\n\n    &:visited {\n      color: $color__navbar_link_visited;\n    }\n    &:hover,\n    &:focus,\n    &:active {\n      color: $color__navbar_link_hover;\n    }\n  }\n}\n\n.site-branding{\n  display: flex;\n  height: 3em;\n  .logo{\n    width: 3em;\n    height: 3em;\n    img{\n      width: 100%;\n      height: 100%;\n    }\n  }\n\n  .site-text-wrapper{\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    padding: 0 0.5em;\n    .site-title{\n      font-size: 1.5em;\n      font-weight: bold;\n      text-transform: uppercase;\n    }\n    .site-description{\n      font-size: 1.0em;\n      font-weight: bold;\n      letter-spacing: 0.35em;\n    }\n  }\n}\n\n.navbar-nav{\n  display: block;\n  a{display: block;}\n  @media screen  and (min-width: $size__tablet){\n    display: flex;\n    align-items: center;\n    .nav-item{\n      //margin: 0 1em;\n      text-transform: uppercase;\n    }\n    a{display: inline;}\n  }\n}\n\n.mat-icon {\n  font-size: 40px;\n}\n\n.separator{\n  display: none;\n  @media screen  and (min-width: $size__tablet) {\n    display: inline-block;\n    width: 1px;\n    height: 40px;\n    background-color: #fff;\n    //margin-right: 1em;//\n    margin-left: 1em;\n  }\n}\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{__.radarBase}}      {{__.appConfig}}            menu    close                      {{__.globalConfigurations}}                    {{__.projects}}                    {{__.login}}                    {{__.logout}}                    Hello {{currentUser.username}} {{currentUser.role}}                            help            '\n    var COMPONENTS = [{'name': 'AdminSelectionPageComponent', 'selector': 'app-admin-selection-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ClientsComponent', 'selector': 'app-clients'},{'name': 'ConfigsComponent', 'selector': 'app-configs'},{'name': 'ConfigSelectionPageComponent', 'selector': 'app-config-selection-page'},{'name': 'ConfigsTableComponent', 'selector': 'app-configs-table'},{'name': 'DropDownComponent', 'selector': 'app-dropdown'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalClientsComponent', 'selector': 'app-global-clients'},{'name': 'GlobalConfigsComponent', 'selector': 'app-global-configs'},{'name': 'LeftSidebarComponent', 'selector': 'app-left-sidebar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ToastComponent', 'selector': 'app-toasts'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageNotFoundComponent.html":{"url":"components/PageNotFoundComponent.html","title":"component - PageNotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageNotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/containers/page-not-found/page-not-found.component.ts\n\n\n    \n        Description\n    \n    \n        Page Not Found component\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-page-not-found\n            \n\n\n\n\n            \n                templateUrl\n                ./page-not-found.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component} from '@angular/core';\nimport strings from '@i18n/strings.json';\n\n/**\n * Page Not Found component\n */\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  // styleUrls: ['./page-not-found.component.scss']\n})\nexport class PageNotFoundComponent {\n  /**\n   * @ignore\n   */\n  __ = strings;\n}\n\n    \n\n    \n        \n  \n    {{__.pageNotFound}}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{__.pageNotFound}}  '\n    var COMPONENTS = [{'name': 'AdminSelectionPageComponent', 'selector': 'app-admin-selection-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ClientsComponent', 'selector': 'app-clients'},{'name': 'ConfigsComponent', 'selector': 'app-configs'},{'name': 'ConfigSelectionPageComponent', 'selector': 'app-config-selection-page'},{'name': 'ConfigsTableComponent', 'selector': 'app-configs-table'},{'name': 'DropDownComponent', 'selector': 'app-dropdown'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalClientsComponent', 'selector': 'app-global-clients'},{'name': 'GlobalConfigsComponent', 'selector': 'app-global-configs'},{'name': 'LeftSidebarComponent', 'selector': 'app-left-sidebar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ToastComponent', 'selector': 'app-toasts'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PageNotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Project.html":{"url":"classes/Project.html","title":"class - Project","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Project\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/project/models/project.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                humanReadableProjectName\n                            \n                            \n                                id\n                            \n                            \n                                location\n                            \n                            \n                                name\n                            \n                            \n                                organization\n                            \n                            \n                                projectName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/project/models/project.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            humanReadableProjectName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/project/models/project.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/project/models/project.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            location\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/project/models/project.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/project/models/project.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organization\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/project/models/project.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            projectName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/project/models/project.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Project {\n  id: number;\n  name: string;\n  projectName: string;\n  humanReadableProjectName: string;\n  location: string;\n  organization: string;\n  description: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProjectModule.html":{"url":"modules/ProjectModule.html","title":"module - ProjectModule","body":"\n                   \n\n\n\n\n    Modules\n    ProjectModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProjectModule\n\n\n\ncluster_ProjectModule_declarations\n\n\n\ncluster_ProjectModule_imports\n\n\n\n\nProjectsComponent\n\nProjectsComponent\n\n\n\nProjectModule\n\nProjectModule\n\nProjectModule -->\n\nProjectsComponent->ProjectModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nProjectModule -->\n\nCoreModule->ProjectModule\n\n\n\n\n\nProjectRoutingModule\n\nProjectRoutingModule\n\nProjectModule -->\n\nProjectRoutingModule->ProjectModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/project/project.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ProjectsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CoreModule\n                        \n                        \n                            ProjectRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {CoreModule} from '@app/core/core.module';\nimport {ProjectsComponent} from '@app/project/containers/projects/projects.component';\nimport {ProjectRoutingModule} from '@app/project/project-routing.module';\n\n@NgModule({\n  declarations: [ProjectsComponent],\n  imports: [\n    CommonModule,\n    ProjectRoutingModule,\n    CoreModule\n  ]\n})\nexport class ProjectModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProjectRoutingModule.html":{"url":"modules/ProjectRoutingModule.html","title":"module - ProjectRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ProjectRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/project/project-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {ProjectsComponent} from '@app/project/containers/projects/projects.component';\nimport {AuthGuard} from '@app/auth/helpers';\n\nconst routes: Routes = [\n  {\n    path: 'projects',\n    component: ProjectsComponent,\n    canActivate: [AuthGuard]\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProjectRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProjectService.html":{"url":"injectables/ProjectService.html","title":"injectable - ProjectService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProjectService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/project/services/project.service.ts\n        \n\n            \n                Description\n            \n            \n                Project Service\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getAllProjects\n                            \n                            \n                                    Private\n                                getAllProjectsObservable\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/project/services/project.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllProjects\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllProjects()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project/services/project.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getAllProjectsObservable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllProjectsObservable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project/services/project.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable<>\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Project} from '@app/project/models/project';\nimport {ToastService} from '@app/shared/services/toast.service';\nimport {environment} from \"@environments/environment\";\n\n/**\n * Project Service\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectService {\n\n  constructor(private http: HttpClient, private toastService: ToastService) {}\n\n  private getAllProjectsObservable(): Observable {\n    return this.http.get(`${environment.backendUrl}/projects`);\n  }\n\n  async getAllProjects(): Promise {\n    return await this.getAllProjectsObservable().toPromise()\n      .then((data: any) => {\n        const projects: [Project] = data.projects;\n        projects.forEach(p => p.name = p.projectName);\n        this.toastService.showSuccess('Projects loaded.');\n        return projects;\n      })\n      .catch(e => {\n        this.toastService.showError(e);\n        console.log(e);\n      })\n      .finally(() => {});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectsComponent.html":{"url":"components/ProjectsComponent.html","title":"component - ProjectsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProjectsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/project/containers/projects/projects.component.ts\n\n\n    \n        Description\n    \n    \n        Projects Component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-projects\n            \n\n\n\n\n            \n                templateUrl\n                ./projects.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                __\n                            \n                            \n                                loading\n                            \n                            \n                                projects\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                makeQueryParams\n                            \n                            \n                                makeState\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(projectService: ProjectService)\n                    \n                \n                        \n                            \n                                Defined in src/app/project/containers/projects/projects.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            makeQueryParams\n                        \n                        \n                    \n                \n            \n            \n                \nmakeQueryParams(projectId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/project/containers/projects/projects.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { project: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            makeState\n                        \n                        \n                    \n                \n            \n            \n                \nmakeState()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project/containers/projects/projects.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         { projects: void | [any]; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project/containers/projects/projects.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            __\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : strings\n                        \n                    \n                        \n                            \n                                    Defined in src/app/project/containers/projects/projects.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/project/containers/projects/projects.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            projects\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :      | void\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/project/containers/projects/projects.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {Project} from '@app/project/models/project';\nimport {ProjectService} from '@app/project/services/project.service';\nimport strings from '@i18n/strings.json';\n\n/**\n * Projects Component\n */\n@Component({\n  selector: 'app-projects',\n  templateUrl: './projects.component.html',\n  // styleUrls: ['./projects.component.scss']\n})\nexport class ProjectsComponent implements OnInit {\n  __ = strings;\n  loading = true;\n  projects: [Project] | void;\n\n  constructor(private projectService: ProjectService) {}\n\n  async ngOnInit() {\n    this.projects = await this.projectService.getAllProjects();\n    this.loading = false;\n  }\n\n  makeState() {\n    return {projects: this.projects};\n  }\n\n  makeQueryParams(projectId) {\n    return {project: projectId};\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      {{__.selectAProject}}\n      {{__.loading}}\n      \n        \n          \n            \n              \n                {{project.projectName}}\n                {{ project.description }}\n                {{__.organization}}: {{ project.organization }}\n                {{__.location}}: {{ project.location }}\n              \n            \n          \n        \n      \n    \n  \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              {{__.selectAProject}}      {{__.loading}}                                                                  {{project.projectName}}                {{ project.description }}                {{__.organization}}: {{ project.organization }}                {{__.location}}: {{ project.location }}                                                          '\n    var COMPONENTS = [{'name': 'AdminSelectionPageComponent', 'selector': 'app-admin-selection-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ClientsComponent', 'selector': 'app-clients'},{'name': 'ConfigsComponent', 'selector': 'app-configs'},{'name': 'ConfigSelectionPageComponent', 'selector': 'app-config-selection-page'},{'name': 'ConfigsTableComponent', 'selector': 'app-configs-table'},{'name': 'DropDownComponent', 'selector': 'app-dropdown'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalClientsComponent', 'selector': 'app-global-clients'},{'name': 'GlobalConfigsComponent', 'selector': 'app-global-configs'},{'name': 'LeftSidebarComponent', 'selector': 'app-left-sidebar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ToastComponent', 'selector': 'app-toasts'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProjectsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_providers\n\n\n\n\nDropDownComponent\n\nDropDownComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nDropDownComponent->SharedModule\n\n\n\n\n\nToastComponent\n\nToastComponent\n\nSharedModule -->\n\nToastComponent->SharedModule\n\n\n\n\n\nDropDownComponent \n\nDropDownComponent \n\nDropDownComponent  -->\n\nSharedModule->DropDownComponent \n\n\n\n\n\nToastComponent \n\nToastComponent \n\nToastComponent  -->\n\nSharedModule->ToastComponent \n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nSharedModule -->\n\nErrorInterceptor->SharedModule\n\n\n\n\n\nJwtInterceptor\n\nJwtInterceptor\n\nSharedModule -->\n\nJwtInterceptor->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DropDownComponent\n                        \n                        \n                            ToastComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ErrorInterceptor\n                        \n                        \n                            JwtInterceptor\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DropDownComponent\n                        \n                        \n                            ToastComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ToastComponent } from './components/toast/toast.component';\nimport { DropDownComponent } from './components/drop-down/drop-down.component';\nimport { JwtInterceptor } from '@app/shared/helpers/jwt.interceptor';\nimport { ErrorInterceptor } from '@app/shared/helpers/error.interceptor';\n\n@NgModule({\n  declarations: [ToastComponent, DropDownComponent],\n  exports: [ToastComponent, DropDownComponent],\n  imports: [\n    CommonModule,\n    NgbModule,\n    MatIconModule,\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n  ],\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToastComponent.html":{"url":"components/ToastComponent.html","title":"component - ToastComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToastComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/toast/toast.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                app-toasts\n            \n\n\n\n\n            \n                templateUrl\n                ./toast.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                toastService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isTemplate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/toast/toast.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isTemplate\n                        \n                        \n                    \n                \n            \n            \n                \nisTemplate(toast)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/toast/toast.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    toast\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toastService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ToastService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/toast/toast.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, TemplateRef} from '@angular/core';\nimport {ToastService} from '@app/shared/services/toast.service';\n\n@Component({\n  selector: 'app-toasts',\n  templateUrl: './toast.component.html',\n  // template: '', // `\n  //   \n  //       \n  //           \n  //       \n  //       {{ toast.textOrTpl }}\n  //   \n  // `,\n  // tslint:disable-next-line:no-host-metadata-property\n  host: {'[class.ngb-toasts]': 'true'}\n})\nexport class ToastComponent {\n  constructor(public toastService: ToastService) {}\n  isTemplate(toast) { return toast.textOrTpl instanceof TemplateRef; }\n}\n\n    \n\n    \n        -->\n\n-->\n\n\n  \n    \n  \n  {{ toast.textOrTpl }}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '-->-->          {{ toast.textOrTpl }}'\n    var COMPONENTS = [{'name': 'AdminSelectionPageComponent', 'selector': 'app-admin-selection-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ClientsComponent', 'selector': 'app-clients'},{'name': 'ConfigsComponent', 'selector': 'app-configs'},{'name': 'ConfigSelectionPageComponent', 'selector': 'app-config-selection-page'},{'name': 'ConfigsTableComponent', 'selector': 'app-configs-table'},{'name': 'DropDownComponent', 'selector': 'app-dropdown'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalClientsComponent', 'selector': 'app-global-clients'},{'name': 'GlobalConfigsComponent', 'selector': 'app-global-configs'},{'name': 'LeftSidebarComponent', 'selector': 'app-left-sidebar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ToastComponent', 'selector': 'app-toasts'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToastComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ToastService.html":{"url":"injectables/ToastService.html","title":"injectable - ToastService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ToastService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/toast.service.ts\n        \n\n            \n                Description\n            \n            \n                Toast Service\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                toasts\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                remove\n                            \n                            \n                                show\n                            \n                            \n                                showError\n                            \n                            \n                                showSuccess\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(toast)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/toast.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    toast\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            show\n                        \n                        \n                    \n                \n            \n            \n                \nshow(textOrTpl: string | TemplateRef, options: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/toast.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    textOrTpl\n                                    \n                                            string | TemplateRef\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showError\n                        \n                        \n                    \n                \n            \n            \n                \nshowError(message: string, args: object)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/toast.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    args\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {\n      classname: 'bg-danger text-light',\n      delay: 2000 ,\n      autohide: true,\n    }\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showSuccess\n                        \n                        \n                    \n                \n            \n            \n                \nshowSuccess(message: string, args: object)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/toast.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    args\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {\n                classname: 'bg-success text-light',\n                delay: 2000 ,\n                autohide: true\n              }\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toasts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/toast.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable, TemplateRef} from '@angular/core';\n\n/**\n * Toast Service\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastService {\n  toasts: any[] = [];\n\n  show(textOrTpl: string | TemplateRef, options: any = {}) {\n    this.toasts.push({ textOrTpl, ...options });\n  }\n\n  remove(toast) {\n    this.toasts = this.toasts.filter(t => t !== toast);\n  }\n\n  showSuccess(message: string,\n              args = {\n                classname: 'bg-success text-light',\n                delay: 2000 ,\n                autohide: true\n              }) {\n    this.show(message, args);\n  }\n\n  showError(\n    message: string,\n    args = {\n      classname: 'bg-danger text-light',\n      delay: 2000 ,\n      autohide: true,\n    }) {\n    this.show(message, args);\n  }\n\n  // showCustomToast(customTpl) {\n  //   this.show(customTpl, {\n  //     classname: 'bg-info text-light',\n  //     delay: 3000,\n  //     autohide: true\n  //   });\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/user/models/user.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/models/user.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/models/user.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n  id: string;\n  name: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_declarations\n\n\n\ncluster_UserModule_imports\n\n\n\n\nUsersComponent\n\nUsersComponent\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nUsersComponent->UserModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nUserModule -->\n\nCoreModule->UserModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nUserModule -->\n\nSharedModule->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/user/user.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            UsersComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CoreModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UsersComponent } from './containers/users/users.component';\nimport { CoreModule } from '@app/core/core.module';\nimport { SharedModule } from '@app/shared/shared.module';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  declarations: [UsersComponent],\n  imports: [\n    CommonModule,\n    CoreModule,\n    RouterModule,\n    SharedModule\n  ]\n})\nexport class UserModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserRoutingModule.html":{"url":"modules/UserRoutingModule.html","title":"module - UserRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    UserRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/user/user-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {UsersComponent} from '@app/user/containers/users/users.component';\nimport {AuthGuard} from '@app/auth/helpers';\n\nconst routes: Routes = [\n  {\n    path: 'users',\n    component: UsersComponent,\n    canActivate: [AuthGuard]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UserRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/user/services/user.service.ts\n        \n\n            \n                Description\n            \n            \n                User Service\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getUsersByProjectId\n                            \n                            \n                                    Private\n                                getUsersByProjectIdObservable\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/user/services/user.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUsersByProjectId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsersByProjectId(projectId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user/services/user.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getUsersByProjectIdObservable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsersByProjectIdObservable(projectId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user/services/user.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {User} from '@app/user/models/user';\nimport {ToastService} from '@app/shared/services/toast.service';\nimport {Observable} from 'rxjs';\nimport {environment} from \"@environments/environment\";\n\n/**\n * User Service\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient, private toastService: ToastService) {}\n\n  private getUsersByProjectIdObservable(projectId): Observable {\n    return this.http.get(`${environment.backendUrl}/projects/${projectId}/users/`);\n  }\n\n  async getUsersByProjectId(projectId): Promise {\n    return await this.getUsersByProjectIdObservable(projectId).toPromise()\n      .then((data: any) => {\n        const results: [User] = data.users;\n        results.forEach(d => d.name = d.id);\n        this.toastService.showSuccess(`Users of Project: ${projectId} loaded.`);\n        return results;\n      })\n      .catch(e => {\n        this.toastService.showError(e);\n        console.log(e);\n      })\n      .finally(() => {});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UsersComponent.html":{"url":"components/UsersComponent.html","title":"component - UsersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UsersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user/containers/users/users.component.ts\n\n\n    \n        Description\n    \n    \n        Users Component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-users\n            \n\n\n\n\n            \n                templateUrl\n                ./users.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                __\n                            \n                            \n                                clientId\n                            \n                            \n                                clients\n                            \n                            \n                                loading\n                            \n                            \n                                projectId\n                            \n                            \n                                projects\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getClients\n                            \n                            \n                                getProjects\n                            \n                            \n                                makeBackButton\n                            \n                            \n                                makeQueryParams\n                            \n                            \n                                makeState\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                onClientChange\n                            \n                            \n                                onProjectChange\n                            \n                            \n                                    Async\n                                updateUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, clientService: ClientService, projectService: ProjectService, activatedRoute: ActivatedRoute, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/user/containers/users/users.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clientService\n                                                  \n                                                        \n                                                                        ClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getClients\n                        \n                        \n                    \n                \n            \n            \n                \ngetClients()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user/containers/users/users.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getProjects\n                        \n                        \n                    \n                \n            \n            \n                \ngetProjects()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user/containers/users/users.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            makeBackButton\n                        \n                        \n                    \n                \n            \n            \n                \nmakeBackButton()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user/containers/users/users.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { routerLink: {}; queryParams: { project: any; }; name: string; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            makeQueryParams\n                        \n                        \n                    \n                \n            \n            \n                \nmakeQueryParams(userId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user/containers/users/users.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { project: any; client: any; user: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            makeState\n                        \n                        \n                    \n                \n            \n            \n                \nmakeState()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user/containers/users/users.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { projects: [any]; clients: [any]; users: void | [any]; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user/containers/users/users.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClientChange\n                        \n                        \n                    \n                \n            \n            \n                \nonClientChange(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user/containers/users/users.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onProjectChange\n                        \n                        \n                    \n                \n            \n            \n                \nonProjectChange(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user/containers/users/users.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateUsers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user/containers/users/users.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            __\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : strings\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/containers/users/users.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clientId\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/user/containers/users/users.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clients\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         [Client]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/containers/users/users.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/containers/users/users.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            projectId\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/user/containers/users/users.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            projects\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         [Project]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/containers/users/users.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            users\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :      | void\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/containers/users/users.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {ProjectService} from '@app/project/services/project.service';\nimport {ClientService} from '@app/client/services/client.service';\nimport {UserService} from '@app/user/services/user.service';\nimport {Project} from '@app/project/models/project';\nimport {Client} from '@app/client/models/client';\nimport {User} from '@app/user/models/user';\nimport strings from '@i18n/strings.json';\n\n/**\n * Users Component\n */\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  // styleUrls: ['./users.component.scss']\n})\nexport class UsersComponent implements OnInit {\n\n  __ = strings;\n\n  projectId;\n  clientId;\n\n  projects: [Project];\n  clients: [Client];\n  users: [User] | void;\n\n  loading = true;\n\n  constructor(\n    private userService: UserService,\n    private clientService: ClientService,\n    private projectService: ProjectService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router) {}\n\n  async ngOnInit() {\n    this.projectId = this.activatedRoute.snapshot.queryParams.project;\n    this.clientId = this.activatedRoute.snapshot.queryParams.client;\n\n    this.projects = await this.getProjects();\n    this.clients = await this.getClients();\n\n    this.updateUsers();\n  }\n\n  getProjects() {\n    if (!this.projectId) { return; }\n    const {projects} = history.state;\n    return (projects ? projects : this.projectService.getAllProjects());\n  }\n\n  getClients() {\n    if (!this.clientId) { return; }\n    const {clients} = history.state;\n    return (clients ? clients : this.clientService.getAllClients());\n  }\n\n  onProjectChange(event) {\n    this.projectId = event.id;\n    const tempObject = {...this.activatedRoute.snapshot.queryParams};\n    tempObject.project = this.projectId;\n    this.updateUsers();\n    this.router.navigate(['/configs'], {queryParams: tempObject});\n  }\n\n  onClientChange(event) {\n    this.clientId = event.id;\n    const tempObject = {...this.activatedRoute.snapshot.queryParams};\n    tempObject.client = this.clientId;\n    this.updateUsers();\n    this.router.navigate(['/configs'], {queryParams: tempObject});\n  }\n\n  async updateUsers() {\n    this.loading = true;\n    this.users = await this.userService.getUsersByProjectId(this.projectId);\n    this.loading = false;\n  }\n\n  makeState() {\n    return {projects: this.projects, clients: this.clients, users: this.users};\n  }\n\n  makeQueryParams(userId) {\n    return {project: this.projectId, client: this.clientId, user: userId};\n  }\n\n  makeBackButton() {\n    if (!this.clientId || !this.projectId) { return; }\n    return {routerLink: ['/clients'], queryParams: {project: this.projectId}, name: 'Applications'};\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n        {{__.project}}:\n        \n      \n      \n        {{__.application}}:\n        \n      \n    \n    \n      \n        {{__.selectAUser}}\n      \n      {{__.loading}}\n      \n        \n          \n            \n              \n{{user.name}}-->\n                {{user.id}}\n              \n            \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      {{__.project}}:                            {{__.application}}:                                    {{__.selectAUser}}            {{__.loading}}                                                  {{user.name}}-->                {{user.id}}                                                        '\n    var COMPONENTS = [{'name': 'AdminSelectionPageComponent', 'selector': 'app-admin-selection-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ClientsComponent', 'selector': 'app-clients'},{'name': 'ConfigsComponent', 'selector': 'app-configs'},{'name': 'ConfigSelectionPageComponent', 'selector': 'app-config-selection-page'},{'name': 'ConfigsTableComponent', 'selector': 'app-configs-table'},{'name': 'DropDownComponent', 'selector': 'app-dropdown'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalClientsComponent', 'selector': 'app-global-clients'},{'name': 'GlobalConfigsComponent', 'selector': 'app-global-configs'},{'name': 'LeftSidebarComponent', 'selector': 'app-left-sidebar'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ToastComponent', 'selector': 'app-toasts'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UsersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/containers/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/auth/helpers/admin.guard.ts\n            \n            guard\n            AdminGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/helpers/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/models/auth.ts\n            \n            interface\n            AuthData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/models/auth.ts\n            \n            interface\n            AuthResponse\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/auth/models/user.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/auth/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/client/containers/clients/clients.component.ts\n            \n            component\n            ClientsComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/client/containers/global-clients/global-clients.component.ts\n            \n            component\n            GlobalClientsComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/client/models/client.ts\n            \n            class\n            Client\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/client/services/client.service.ts\n            \n            injectable\n            ClientService\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/config/containers/configs-table/configs-table.component.ts\n            \n            component\n            ConfigsTableComponent\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/config/containers/configs/configs.component.ts\n            \n            component\n            ConfigsComponent\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/app/config/containers/global-configs/global-configs.component.ts\n            \n            component\n            GlobalConfigsComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/config/models/config.ts\n            \n            class\n            Config\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/config/services/config.service.ts\n            \n            injectable\n            ConfigService\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/core/containers/admin-selection-page/admin-selection-page.component.ts\n            \n            component\n            AdminSelectionPageComponent\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/core/containers/config-selection-page/config-selection-page.component.ts\n            \n            component\n            ConfigSelectionPageComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/core/containers/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/containers/left-sidebar/left-sidebar.component.ts\n            \n            component\n            LeftSidebarComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/containers/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/app/core/containers/page-not-found/page-not-found.component.ts\n            \n            component\n            PageNotFoundComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/mock/mock-data/index.ts\n            \n            variable\n            clients\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/mock/mock-data/index.ts\n            \n            variable\n            groups\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/mock/mock-data/index.ts\n            \n            variable\n            participants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/mock/mock-data/index.ts\n            \n            variable\n            projects\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/mock/mock-data/index.ts\n            \n            variable\n            users\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/mock/mock.module.ts\n            \n            variable\n            extraProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/mock/services/mock.service.ts\n            \n            interceptor\n            MockInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/mock/services/mock.service.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/mock/services/mock.service.ts\n            \n            variable\n            mockBackendProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/project/containers/projects/projects.component.ts\n            \n            component\n            ProjectsComponent\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/project/models/project.ts\n            \n            class\n            Project\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/project/services/project.service.ts\n            \n            injectable\n            ProjectService\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/shared/components/drop-down/drop-down.component.ts\n            \n            component\n            DropDownComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/shared/components/toast/toast.component.ts\n            \n            component\n            ToastComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/helpers/error.interceptor.ts\n            \n            interceptor\n            ErrorInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/helpers/jwt.interceptor.ts\n            \n            interceptor\n            JwtInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/services/toast.service.ts\n            \n            injectable\n            ToastService\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/user/containers/users/users.component.ts\n            \n            component\n            UsersComponent\n            \n                5 %\n                (1/18)\n            \n        \n        \n            \n                \n                src/app/user/models/user.ts\n            \n            class\n            User\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/user/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/environments/environment.mock-researcher.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.mock.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~8.2.14\n        \n            @angular/cdk : ^8.2.3\n        \n            @angular/common : ~8.2.14\n        \n            @angular/compiler : ~8.2.14\n        \n            @angular/core : ~8.2.14\n        \n            @angular/forms : ~8.2.14\n        \n            @angular/material : ^8.2.3\n        \n            @angular/platform-browser : ~8.2.14\n        \n            @angular/platform-browser-dynamic : ~8.2.14\n        \n            @angular/router : ~8.2.14\n        \n            @ng-bootstrap/ng-bootstrap : ^5.2.1\n        \n            jwt-decode : ^2.2.0\n        \n            rxjs : ~6.4.0\n        \n            tslib : ^1.10.0\n        \n            zone.js : ~0.9.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Roles   (src/.../roles.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/auth/enums/roles.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Roles\n                    \n                \n                        \n                            \n                                 SYSTEM_ADMIN\n                            \n                        \n                        \n                            \n                                Value : ROLE_SYS_ADMIN\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAppconfig\nThis project was generated with Angular CLI version 8.3.24.\nDevelopment server\n\nMock Backend\n\nLogin as Admin\nRun npm run mock for a dev server. Navigate to http://localhost:4200/appconfig.    \nThe app will automatically reload if you change any of the source files.\n\nLogin as a Researcher\nRun npm run mock-researcher for a dev server. Navigate to http://localhost:4200/appconfig. The app will automatically reload if you change any of the source files.\n\n\n\nLocal Backend\n\nLogin as Admin or Researcher\nRun local version of radar-app-config and ManagementPortal. See the link: \nhttps://github.com/RADAR-base/radar-app-config#docker-usage \nRun npm start or ng serve --port=4200 --base-href=/appconfig/ for a dev server. Navigate to http://localhost:4200/appconfig.    \nThe app will automatically reload if you change any of the source files.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ClientModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ClientRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MockModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProjectModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProjectRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_ClientModule\n\n\n\ncluster_ClientModule_declarations\n\n\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_declarations\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_exports\n\n\n\ncluster_ProjectModule\n\n\n\ncluster_ProjectModule_declarations\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nAuthModule->LoginComponent \n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAppModule -->\n\nAuthRoutingModule->AppModule\n\n\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nClientModule\n\nClientModule\n\nAppModule -->\n\nClientModule->AppModule\n\n\n\n\n\nClientRoutingModule\n\nClientRoutingModule\n\nAppModule -->\n\nClientRoutingModule->AppModule\n\n\n\n\n\nConfigModule\n\nConfigModule\n\nAppModule -->\n\nConfigModule->AppModule\n\n\n\n\n\nConfigRoutingModule\n\nConfigRoutingModule\n\nAppModule -->\n\nConfigRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\nClientModule -->\n\nCoreModule->ClientModule\n\n\n\nConfigModule -->\n\nCoreModule->ConfigModule\n\n\n\n\n\nProjectModule\n\nProjectModule\n\nProjectModule -->\n\nCoreModule->ProjectModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nCoreModule->UserModule\n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nCoreModule->FooterComponent \n\n\n\n\n\nLeftSidebarComponent \n\nLeftSidebarComponent \n\nLeftSidebarComponent  -->\n\nCoreModule->LeftSidebarComponent \n\n\n\n\n\nNavbarComponent \n\nNavbarComponent \n\nNavbarComponent  -->\n\nCoreModule->NavbarComponent \n\n\n\n\n\nCoreRoutingModule\n\nCoreRoutingModule\n\nAppModule -->\n\nCoreRoutingModule->AppModule\n\n\n\nCoreModule -->\n\nCoreRoutingModule->CoreModule\n\n\n\n\n\nMockModule\n\nMockModule\n\nAppModule -->\n\nMockModule->AppModule\n\n\n\nAppModule -->\n\nProjectModule->AppModule\n\n\n\n\n\nProjectRoutingModule\n\nProjectRoutingModule\n\nAppModule -->\n\nProjectRoutingModule->AppModule\n\n\n\nProjectModule -->\n\nProjectRoutingModule->ProjectModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\nClientModule -->\n\nSharedModule->ClientModule\n\n\n\nConfigModule -->\n\nSharedModule->ConfigModule\n\n\n\nCoreModule -->\n\nSharedModule->CoreModule\n\n\n\nUserModule -->\n\nSharedModule->UserModule\n\n\n\n\n\nDropDownComponent \n\nDropDownComponent \n\nDropDownComponent  -->\n\nSharedModule->DropDownComponent \n\n\n\n\n\nToastComponent \n\nToastComponent \n\nToastComponent  -->\n\nSharedModule->ToastComponent \n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserRoutingModule\n\nUserRoutingModule\n\nAppModule -->\n\nUserRoutingModule->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nClientsComponent\n\nClientsComponent\n\nClientModule -->\n\nClientsComponent->ClientModule\n\n\n\n\n\nGlobalClientsComponent\n\nGlobalClientsComponent\n\nClientModule -->\n\nGlobalClientsComponent->ClientModule\n\n\n\n\n\nConfigsComponent\n\nConfigsComponent\n\nConfigModule -->\n\nConfigsComponent->ConfigModule\n\n\n\n\n\nConfigsTableComponent\n\nConfigsTableComponent\n\nConfigModule -->\n\nConfigsTableComponent->ConfigModule\n\n\n\n\n\nGlobalConfigsComponent\n\nGlobalConfigsComponent\n\nConfigModule -->\n\nGlobalConfigsComponent->ConfigModule\n\n\n\n\n\nAdminSelectionPageComponent\n\nAdminSelectionPageComponent\n\nCoreModule -->\n\nAdminSelectionPageComponent->CoreModule\n\n\n\n\n\nConfigSelectionPageComponent\n\nConfigSelectionPageComponent\n\nCoreModule -->\n\nConfigSelectionPageComponent->CoreModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nCoreModule -->\n\nFooterComponent->CoreModule\n\n\n\n\n\nLeftSidebarComponent\n\nLeftSidebarComponent\n\nCoreModule -->\n\nLeftSidebarComponent->CoreModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nCoreModule -->\n\nNavbarComponent->CoreModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nCoreModule -->\n\nPageNotFoundComponent->CoreModule\n\n\n\n\n\nProjectsComponent\n\nProjectsComponent\n\nProjectModule -->\n\nProjectsComponent->ProjectModule\n\n\n\n\n\nDropDownComponent\n\nDropDownComponent\n\nSharedModule -->\n\nDropDownComponent->SharedModule\n\n\n\n\n\nToastComponent\n\nToastComponent\n\nSharedModule -->\n\nToastComponent->SharedModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nSharedModule -->\n\nErrorInterceptor->SharedModule\n\n\n\n\n\nJwtInterceptor\n\nJwtInterceptor\n\nSharedModule -->\n\nJwtInterceptor->SharedModule\n\n\n\n\n\nUsersComponent\n\nUsersComponent\n\nUserModule -->\n\nUsersComponent->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        16 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    17 Components\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        11 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            clients   (src/.../index.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.mock-researcher.ts)\n                        \n                        \n                            environment   (src/.../environment.mock.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../mock.service.ts)\n                        \n                        \n                            extraProviders   (src/.../mock.module.ts)\n                        \n                        \n                            groups   (src/.../index.ts)\n                        \n                        \n                            mockBackendProvider   (src/.../mock.service.ts)\n                        \n                        \n                            participants   (src/.../index.ts)\n                        \n                        \n                            projects   (src/.../index.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            users   (src/.../index.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/mock/mock-data/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            clients\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : cls\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            groups\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : grs\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            participants\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : pas\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            projects\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : prs\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            users\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : uss\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.mock-researcher.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  envName: 'mock-researcher',\n  production: false,\n  // appUrl: 'http://localhost:4200',\n  authAPI: 'http://localhost:4200/appconfig/managementportal/oauth',\n  clientId: 'appconfig_frontend',\n  authCallback: 'http://localhost:4200/appconfig/login',\n  fakeCode: {code: 12346},\n  fakeJwtToken: {\n    // tslint:disable-next-line:max-line-length\n    token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJyZXNfYXBwY29uZmlnIiwic3ViIjoicGV5bWFuIiwic291cmNlcyI6W10sImdyYW50X3R5cGUiOiJwYXNzd29yZCIsInVzZXJfbmFtZSI6IkpvaG4iLCJyb2xlcyI6W10sInNjb3BlIjpbIlNVQkpFQ1QuVVBEQVRFIiwiUFJPSkVDVC5DUkVBVEUiLCJQUk9KRUNULlVQREFURSIsIk1FQVNVUkVNRU5ULkNSRUFURSIsIlBST0pFQ1QuUkVBRCIsIk9BVVRIQ0xJRU5UUy5SRUFEIiwiU1VCSkVDVC5SRUFEIl0sImlzcyI6Ik1hbmFnZW1lbnRQb3J0YWwiLCJleHAiOjE1ODAyOTczNjEsImlhdCI6MTU4MDI5Mzc2MSwiYXV0aG9yaXRpZXMiOlsiUk9MRV9SRVNFQVJDSEVSIl0sImNsaWVudF9pZCI6ImFwcGNvbmZpZ19mcm9udGVuZCJ9.IlQxCMKxR8JCy9r6xG7DV-KSTjcsBY0Y09e8xE9SFbs'\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.mock.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  envName: 'mock',\n  production: false,\n  // appUrl: 'http://localhost:4200',\n  authAPI: 'http://localhost:4200/appconfig/managementportal/oauth',\n  clientId: 'appconfig_frontend',\n  authCallback: 'http://localhost:4200/appconfig/login',\n  fakeCode: {code: 84936},\n  fakeJwtToken: {\n    // tslint:disable-next-line:max-line-length\n    token: 'eyJ0eXAiOiJKV1QiLCJhbGciOiJFUzI1NiJ9.eyJhdWQiOiJyZXNfYXBwY29uZmlnIiwic3ViIjoicGV5bWFuIiwic291cmNlcyI6W10sImdyYW50X3R5cGUiOiJwYXNzd29yZCIsInVzZXJfbmFtZSI6InBleW1hbiIsInJvbGVzIjpbXSwic2NvcGUiOlsiU1VCSkVDVC5VUERBVEUiLCJQUk9KRUNULkNSRUFURSIsIlBST0pFQ1QuVVBEQVRFIiwiTUVBU1VSRU1FTlQuQ1JFQVRFIiwiUFJPSkVDVC5SRUFEIiwiT0FVVEhDTElFTlRTLlJFQUQiLCJTVUJKRUNULlJFQUQiXSwiaXNzIjoiTWFuYWdlbWVudFBvcnRhbCIsImV4cCI6MTU4MDI5NzM2MSwiaWF0IjoxNTgwMjkzNzYxLCJhdXRob3JpdGllcyI6WyJST0xFX1NZU19BRE1JTiJdLCJjbGllbnRfaWQiOiJhcHBjb25maWdfZnJvbnRlbmQifQ.Hf2kzUm0B1ciMeDmIuNDYVapg72pPtXSGdSwx-Ubw9aOBGIV7Zw7WE1TPLdpwDCD-2K1yO1iBbjgb_o6xDiiAg',\n  },\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  envName: 'prod',\n  production: true,\n  baseURL: 'RACF_BASE_URL',\n  authAPI: 'RACF_AUTH_API',\n  authCallback: 'RACF_AUTH_CALLBACK',\n  clientId: 'appconfig_frontend',\n  backendUrl: 'RACF_BACKEND_URL',\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  envName: 'dev',\n  production: false,\n  baseURL: 'http://localhost:4200/',\n  authAPI: 'http://localhost:8080/managementportal/oauth',\n  authCallback: 'http://localhost:4200/login',\n  clientId: 'appconfig_frontend',\n  backendUrl: '/api',\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/mock/services/mock.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockBackendProvider\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  // use fake backend in place of Http service for backend-less development\n  provide: HTTP_INTERCEPTORS,\n  useClass: MockInterceptor,\n  multi: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/mock/mock.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            extraProviders\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (environment.envName === 'mock' || environment.envName === 'mock-researcher') ? [mockBackendProvider] : []\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
