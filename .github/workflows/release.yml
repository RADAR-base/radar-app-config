# Create release files
name: Release Kotlin

on:
    release:
        types: [published]

jobs:
    upload:
        # The type of runner that the job will run on
        runs-on: ubuntu-latest

        # Steps represent a sequence of tasks that will be executed as part of the job
        steps:
            # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
            - uses: actions/checkout@v2
            - uses: actions/setup-java@v1
              with:
                  java-version: 11

            - name: Use Node.js 14
              uses: actions/setup-node@v1
              with:
                node-version: 14

            - name: Cache
              uses: actions/cache@v2.0.0
              with:
                  # A list of files, directories, and wildcard patterns to cache and restore
                  path: |
                      ~/.gradle/caches/jars-3
                      ~/.gradle/caches/modules-2/files-2.1/
                      ~/.gradle/caches/modules-2/metadata-2.96/
                      ~/.gradle/native
                      ~/.gradle/wrapper
                  # An explicit key for restoring and saving the cache
                  key: ${{ runner.os }}-gradle
            - uses: actions/cache@v2
              with:
                path: ~/.npm
                key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
                restore-keys: |
                  ${{ runner.os }}-node-

            # Compile code
            - name: Compile code
              run: ./gradlew assemble

            # Compile the code
            - name: Install dependencies
              working-directory: ./radar-app-config-frontend
              run: npm install

            # Compile the code
            - name: Build code
              working-directory: ./radar-app-config-frontend
              run: npm run build

            - name: Compress node code
              working-directory: ./radar-app-config-frontend/dist
              run: zip -r radar-app-config-frontend.zip *

          # Upload it to GitHub
            - name: Upload to GitHub
              uses: AButler/upload-release-assets@v2.0
              with:
                  files: '*/build/libs/*;radar-app-config/build/distributions/*;radar-app-config-frontend/dist/radar-app-config-frontend.zip'
                  repo-token: ${{ secrets.GITHUB_TOKEN }}
