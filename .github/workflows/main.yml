# Continuous integration, including test and integration test
name: Main test

# Run in master and dev branches and in all pull requests to those branches
on:
  push:
    branches: [ master, dev ]
  pull_request:
    branches: [ master, dev ]

jobs:
  # Build and test the code
  kotlin:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - uses: actions/setup-java@v2
        with:
          distribution: zulu
          java-version: 17

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      # Compile the code
      - name: Compile code
        run: ./gradlew assemble

      # Gradle check
      - name: Check
        run: ./gradlew check

  # Build and test the code
  node:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Use Node.js 14
        uses: actions/setup-node@v2
        with:
          node-version: 14
          cache: npm
          cache-dependency-path: '**/package-lock.json'

      # Compile the code
      - name: Install dependencies
        working-directory: ./radar-app-config-frontend
        run: npm install

      # Compile the code
      - name: Build code
        working-directory: ./radar-app-config-frontend
        run: npm run build

  docker:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Kotlin docker
        run: docker build -t radarbase/radar-app-config:SNAPSHOT -f radar-app-config/Dockerfile .

      - name: Build Node docker
        run: docker build -t radarbase/radar-app-config-frontend:SNAPSHOT radar-app-config-frontend

      - name: Test curl availability
        run: docker run --rm radarbase/radar-app-config:SNAPSHOT curl --help
